{"version":3,"sources":["../../../node_modules/@antv/g2/node_modules/tslib/tslib.es6.js","../src/is-array-like.ts","../src/contains.ts","../src/filter.ts","../src/difference.ts","../src/is-type.ts","../src/is-function.ts","../src/is-nil.ts","../src/is-array.ts","../src/is-object.ts","../src/each.ts","../src/keys.ts","../src/is-match.ts","../src/is-object-like.ts","../src/is-plain-object.ts","../src/find.ts","../src/find-index.ts","../src/first-value.ts","../src/flatten.ts","../src/flatten-deep.ts","../src/get-range.ts","../src/pull.ts","../src/pull-at.ts","../src/reduce.ts","../src/remove.ts","../src/is-string.ts","../src/sort-by.ts","../src/uniq.ts","../src/union.ts","../src/values-of-key.ts","../src/head.ts","../src/last.ts","../src/starts-with.ts","../src/ends-with.ts","../src/every.ts","../src/some.ts","../src/group-by.ts","../src/group-to-map.ts","../src/group.ts","../src/get-wrap-behavior.ts","../src/wrap-behavior.ts","../src/number2color.ts","../src/parse-radius.ts","../src/clamp.ts","../src/fixed-base.ts","../src/is-number.ts","../src/is-decimal.ts","../src/is-even.ts","../src/is-integer.ts","../src/is-negative.ts","../src/is-number-equal.ts","../src/is-odd.ts","../src/is-positive.ts","../src/max-by.ts","../src/min-by.ts","../src/mod.ts","../src/to-degree.ts","../src/to-integer.ts","../src/to-radian.ts","../src/for-in.ts","../src/has.ts","../src/has-key.ts","../src/values.ts","../src/has-value.ts","../src/to-string.ts","../src/lower-case.ts","../src/lower-first.ts","../src/substitute.ts","../src/upper-case.ts","../src/upper-first.ts","../src/get-type.ts","../src/is-arguments.ts","../src/is-boolean.ts","../src/is-date.ts","../src/is-error.ts","../src/is-finite.ts","../src/is-null.ts","../src/is-prototype.ts","../src/is-reg-exp.ts","../src/is-undefined.ts","../src/is-element.ts","../src/request-animation-frame.ts","../src/clear-animation-frame.ts","../src/mix.ts","../src/augment.ts","../src/clone.ts","../src/debounce.ts","../src/memoize.ts","../src/deep-mix.ts","../src/extend.ts","../src/index-of.ts","../src/is-empty.ts","../src/is-equal.ts","../src/is-equal-with.ts","../src/map.ts","../src/map-values.ts","../src/get.ts","../src/set.ts","../src/pick.ts","../src/throttle.ts","../src/to-array.ts","../src/unique-id.ts","../src/noop.ts","../src/identity.ts","../src/size.ts","../src/cache.ts","../src/index.ts","../src/constant.ts","../../src/engine/index.ts","../src/add-event-listener.ts","../src/create-dom.ts","../src/get-style.ts","../src/get-height.ts","../src/get-outer-height.ts","../src/get-width.ts","../src/get-outer-width.ts","../src/get-ratio.ts","../src/modify-css.ts","../../src/util/dom.ts","../src/base.ts","../../src/util/path.ts","../../../node_modules/@antv/g-base/package.json","../../src/event/graph-event.ts","../../../node_modules/tslib/tslib.es6.js","../../src/util/util.ts","../../src/abstract/base.ts","../../../node_modules/process/browser.js","../../../node_modules/detect-browser/es/index.js","../../../node_modules/gl-matrix/esm/common.js","../../../node_modules/gl-matrix/esm/mat2.js","../../../node_modules/gl-matrix/esm/mat2d.js","../../../node_modules/gl-matrix/esm/mat3.js","../../../node_modules/gl-matrix/esm/mat4.js","../../../node_modules/gl-matrix/esm/vec3.js","../../../node_modules/gl-matrix/esm/vec4.js","../../../node_modules/gl-matrix/esm/quat.js","../../../node_modules/gl-matrix/esm/quat2.js","../../../node_modules/gl-matrix/esm/vec2.js","../../../node_modules/gl-matrix/esm/index.js","../src/ext.ts","../../src/util/matrix.ts","../../src/abstract/element.ts","../../src/abstract/container.ts","../../../node_modules/d3-timer/src/timer.js","../../../node_modules/d3-timer/src/timeout.js","../../../node_modules/d3-timer/src/interval.js","../../../node_modules/d3-timer/src/index.js","../../../node_modules/d3-ease/src/linear.js","../../../node_modules/d3-ease/src/quad.js","../../../node_modules/d3-ease/src/cubic.js","../../../node_modules/d3-ease/src/poly.js","../../../node_modules/d3-ease/src/sin.js","../../../node_modules/d3-ease/src/math.js","../../../node_modules/d3-ease/src/exp.js","../../../node_modules/d3-ease/src/circle.js","../../../node_modules/d3-ease/src/bounce.js","../../../node_modules/d3-ease/src/back.js","../../../node_modules/d3-ease/src/elastic.js","../../../node_modules/d3-ease/src/index.js","../../../node_modules/d3-color/src/define.js","../../../node_modules/d3-color/src/color.js","../../../node_modules/d3-color/src/math.js","../../../node_modules/d3-color/src/lab.js","../../../node_modules/d3-color/src/cubehelix.js","../../../node_modules/d3-color/src/index.js","../../../node_modules/d3-interpolate/src/basis.js","../../../node_modules/d3-interpolate/src/basisClosed.js","../../../node_modules/d3-interpolate/src/constant.js","../../../node_modules/d3-interpolate/src/color.js","../../../node_modules/d3-interpolate/src/rgb.js","../../../node_modules/d3-interpolate/src/numberArray.js","../../../node_modules/d3-interpolate/src/array.js","../../../node_modules/d3-interpolate/src/date.js","../../../node_modules/d3-interpolate/src/number.js","../../../node_modules/d3-interpolate/src/object.js","../../../node_modules/d3-interpolate/src/string.js","../../../node_modules/d3-interpolate/src/value.js","../../../node_modules/d3-interpolate/src/discrete.js","../../../node_modules/d3-interpolate/src/hue.js","../../../node_modules/d3-interpolate/src/round.js","../../../node_modules/d3-interpolate/src/transform/decompose.js","../../../node_modules/d3-interpolate/src/transform/parse.js","../../../node_modules/d3-interpolate/src/transform/index.js","../../../node_modules/d3-interpolate/src/zoom.js","../../../node_modules/d3-interpolate/src/hsl.js","../../../node_modules/d3-interpolate/src/lab.js","../../../node_modules/d3-interpolate/src/hcl.js","../../../node_modules/d3-interpolate/src/cubehelix.js","../../../node_modules/d3-interpolate/src/piecewise.js","../../../node_modules/d3-interpolate/src/quantize.js","../../../node_modules/d3-interpolate/src/index.js","../../src/util/color.ts","../../src/animate/timeline.ts","../../src/event/event-contoller.ts","../../src/abstract/canvas.ts","../../src/abstract/group.ts","../../src/abstract/shape.ts","../../src/adjusts/adjust.ts","../src/factory.ts","../../src/attributes/base.ts","../../src/tick-method/register.ts","../../../node_modules/@antv/scale/node_modules/tslib/tslib.es6.js","../../src/category/base.ts","../../../node_modules/fecha/lib/fecha.js","../../src/util/bisector.ts","../../src/util/time.ts","../../src/category/time.ts","../../src/continuous/base.ts","../../src/continuous/linear.ts","../../src/util/math.ts","../../src/continuous/log.ts","../../src/continuous/pow.ts","../../src/continuous/time.ts","../../src/continuous/quantize.ts","../../src/continuous/quantile.ts","../../src/identity/index.ts","../../src/util/extended.ts","../../src/tick-method/cat.ts","../../src/util/d3-linear.ts","../../src/util/interval.ts","../../src/util/strict-limit.ts","../../src/tick-method/d3-linear.ts","../../src/tick-method/linear.ts","../../src/tick-method/log.ts","../../src/util/pretty.ts","../../src/tick-method/pow.ts","../../src/tick-method/quantile.ts","../../src/tick-method/r-prettry.ts","../../src/tick-method/time.ts","../../src/tick-method/time-cat.ts","../../src/tick-method/time-pretty.ts","../../src/tick-method/index.ts","../src/interface.ts","../../src/attributes/color.ts","../../src/attributes/opacity.ts","../../src/attributes/position.ts","../../src/attributes/shape.ts","../../src/attributes/size.ts","../../src/coord/base.ts","../../src/coord/cartesian.ts","../../src/coord/helix.ts","../../src/coord/polar.ts","../../src/util/event.ts","../../src/abstract/component.ts","../../src/abstract/group-component.ts","../../src/util/text.ts","../../src/util/label.ts","../../src/util/graphic.ts","../../src/util/theme.ts","../../src/annotation/line.ts","../../src/annotation/text.ts","../../src/annotation/arc.ts","../../src/annotation/region.ts","../../src/annotation/image.ts","../../src/annotation/data-marker.ts","../../src/annotation/data-region.ts","../../src/annotation/region-filter.ts","../../src/annotation/index.ts","../../src/util/state.ts","../../src/axis/base.ts","../../../src/axis/overlap/auto-ellipsis.ts","../../../src/axis/overlap/auto-hide.ts","../../../src/axis/overlap/auto-rotate.ts","../../../src/axis/overlap/index.ts","../../src/axis/line.ts","../../src/axis/circle.ts","../../src/axis/index.ts","../../src/crosshair/base.ts","../../src/crosshair/line.ts","../../src/crosshair/circle.ts","../../src/abstract/html-component.ts","../../src/crosshair/css-const.ts","../../src/crosshair/html-theme.ts","../../src/crosshair/html.ts","../../src/crosshair/index.ts","../../src/grid/base.ts","../../src/grid/circle.ts","../../src/grid/line.ts","../../src/grid/index.ts","../../src/legend/base.ts","../../src/legend/category.ts","../../src/legend/continuous.ts","../../src/legend/index.ts","../../src/tooltip/css-const.ts","../../src/tooltip/html-theme.ts","../../src/util/align.ts","../../src/tooltip/html.ts","../../src/tooltip/index.ts","../../src/trend/constant.ts","../src/parse-path.ts","../src/catmull-rom-2-bezier.ts","../src/fill-path.ts","../src/fill-path-by-diff.ts","../src/format-path.ts","../src/rect-path.ts","../src/parse-path-string.ts","../src/path-2-absolute.ts","../src/path-2-curve.ts","../src/path-intersection.ts","../src/parse-path-array.ts","../src/get-arc-params.ts","../src/path-2-segments.ts","../src/get-line-intersect.ts","../src/point-in-polygon.ts","../src/is-polygons-intersect.ts","../../src/trend/path.ts","../../src/trend/trend.ts","../../src/slider/constant.ts","../../src/slider/handler.ts","../../src/slider/slider.ts","../../src/slider/index.ts","../../src/scrollbar/scrollbar.ts","../../src/scrollbar/index.ts","../src/dependents.ts","../../src/util/scale.ts","../../src/util/axis.ts","../../src/facet/facet.ts","../../src/facet/index.ts","../../../src/interaction/action/base.ts","../../../src/interaction/action/callback.ts","../../../src/interaction/action/register.ts","../../src/util/graphics.ts","../../src/util/helper.ts","../../src/util/coordinate.ts","../../../../src/geometry/shape/util/path.ts","../../src/util/bbox.ts","../../../src/interaction/action/util.ts","../../src/interaction/context.ts","../../src/interaction/interaction.ts","../../src/interaction/grammar-interaction.ts","../../../src/interaction/action/index.ts","../../src/interaction/index.ts","../../../src/theme/style-sheet/light.ts","../../src/theme/index.ts","../../src/util/tooltip.ts","../../../src/chart/controller/index.ts","../../../src/chart/controller/coordinate.ts","../../src/chart/event.ts","../../src/util/padding.ts","../../../src/chart/layout/padding-cal.ts","../../../src/chart/layout/auto.ts","../../../src/chart/layout/index.ts","../../../src/chart/util/scale-pool.ts","../../src/chart/view.ts","../../src/chart/chart.ts","../../src/chart/index.ts","../../../src/chart/controller/base.ts","../../src/adjusts/dodge.ts","../../src/adjusts/jitter.ts","../../src/adjusts/stack.ts","../../src/adjusts/symmetric.ts","../../../src/animate/animation/index.ts","../../src/animate/index.ts","../../../src/geometry/element/index.ts","../../../src/geometry/label/index.ts","../../../src/geometry/shape/base.ts","../../../src/geometry/util/group-data.ts","../../../src/geometry/util/is-model-change.ts","../../../src/geometry/util/parse-fields.ts","../../src/geometry/base.ts","../../src/util/transform.ts","../../src/component/labels.ts","../../../src/geometry/label/base.ts","../src/core.ts","../../../src/theme/style-sheet/dark.ts","../../src/util/parse.ts","../../src/util/arc-params.ts","../../src/util/arrow.ts","../../src/util/draw.ts","../../src/bbox/register.ts","../../src/bbox/rect.ts","../../src/bbox/circle.ts","../src/util.ts","../../src/bbox/util.ts","../../src/bbox/polyline.ts","../../src/bbox/polygon.ts","../../src/util/offscreen.ts","../../src/bbox/text.ts","../src/line.ts","../src/bezier.ts","../src/quadratic.ts","../src/cubic.ts","../src/ellipse.ts","../src/arc.ts","../../src/bbox/path.ts","../../src/bbox/line.ts","../../src/bbox/ellipse.ts","../../src/bbox/index.ts","../../src/shape/base.ts","../../src/shape/circle.ts","../../src/shape/ellipse.ts","../../src/shape/image.ts","../../../src/util/in-stroke/line.ts","../../src/shape/line.ts","../../src/shape/marker.ts","../../../src/util/in-path/point-in-path.ts","../../../src/util/in-path/polygon.ts","../../../src/util/in-stroke/arc.ts","../../src/shape/path.ts","../../../src/util/in-stroke/polyline.ts","../../src/shape/polygon.ts","../src/segments.ts","../src/polyline.ts","../../src/shape/polyline.ts","../../../src/util/in-stroke/rect.ts","../../../src/util/in-stroke/rect-radius.ts","../../src/shape/rect.ts","../../src/shape/text.ts","../../src/shape/index.ts","../../../node_modules/@antv/g-canvas/package.json","../src/types.ts","../src/interfaces.ts","../../src/util/hit.ts","../src/canvas.ts","../../src/util/svg.ts","../../src/shape/dom.ts","../../../src/shape/marker/symbols.ts","../../../src/shape/marker/index.ts","../../src/util/format.ts","../../../node_modules/@antv/g-svg/node_modules/detect-browser/index.js","../../../node_modules/@antv/g-svg/package.json","../../src/defs/gradient.ts","../../src/defs/shadow.ts","../../src/defs/arrow.ts","../../src/defs/clip.ts","../../src/defs/pattern.ts","../../src/defs/index.ts","../../../../src/geometry/shape/util/get-path-points.ts","../../../../src/geometry/shape/util/get-style.ts","../../../../src/geometry/shape/util/split-points.ts","../../../../src/geometry/shape/line/util.ts","../../../../src/geometry/shape/line/index.ts","../../src/geometry/path.ts","../../../../src/geometry/shape/area/util.ts","../../../../src/geometry/shape/area/index.ts","../../src/geometry/area.ts","../../../../src/geometry/shape/edge/index.ts","../../src/geometry/edge.ts","../../src/geometry/heatmap.ts","../../../../src/geometry/shape/interval/util.ts","../../../../src/geometry/shape/interval/index.ts","../../../src/geometry/util/shape-size.ts","../../src/geometry/interval.ts","../../src/geometry/line.ts","../../src/util/marker.ts","../../../../src/geometry/shape/point/util.ts","../../../../src/geometry/shape/point/index.ts","../../src/geometry/point.ts","../../../../src/geometry/shape/polygon/index.ts","../../src/geometry/polygon.ts","../../../../src/geometry/shape/schema/index.ts","../../src/geometry/schema.ts","../../../../src/geometry/shape/area/line.ts","../../../../src/geometry/shape/area/smooth.ts","../../../../src/geometry/shape/area/smooth-line.ts","../../../../src/geometry/shape/edge/util.ts","../../../../src/geometry/shape/edge/arc.ts","../../../../src/geometry/shape/edge/smooth.ts","../../../../src/geometry/shape/edge/vhv.ts","../../../../src/geometry/shape/interval/funnel.ts","../../../../src/geometry/shape/interval/hollow-rect.ts","../../../../src/geometry/shape/interval/line.ts","../../../../src/geometry/shape/interval/pyramid.ts","../../../../src/geometry/shape/interval/tick.ts","../../../../src/geometry/shape/line/step.ts","../../../../src/geometry/shape/point/hollow.ts","../../../../src/geometry/shape/point/image.ts","../../../../src/geometry/shape/point/solid.ts","../../../../src/geometry/shape/schema/box.ts","../../../../src/geometry/shape/schema/candle.ts","../../../../src/geometry/shape/polygon/square.ts","../../../src/geometry/label/interval.ts","../../../src/geometry/label/polar.ts","../../../src/geometry/label/pie.ts","../../../../../src/geometry/label/layout/pie/distribute.ts","../../../../../src/geometry/label/layout/pie/outer.ts","../../../../src/geometry/label/layout/limit-in-canvas.ts","../../../../src/geometry/label/layout/limit-in-shape.ts","../../../../src/geometry/label/layout/overlap.ts","../../../src/animate/animation/fade.ts","../../../src/animate/animation/util.ts","../../../src/animate/animation/grow-in.ts","../../../src/animate/animation/path-in.ts","../../../src/animate/animation/position-update.ts","../../../src/animate/animation/scale-in.ts","../../../src/animate/animation/sector-path-update.ts","../../../src/animate/animation/wave-in.ts","../../../src/animate/animation/zoom.ts","../../src/util/facet.ts","../../src/facet/circle.ts","../../src/facet/list.ts","../../src/facet/matrix.ts","../../src/facet/mirror.ts","../../src/facet/rect.ts","../../src/facet/tree.ts","../../../src/chart/controller/annotation.ts","../../src/util/grid.ts","../../../src/chart/controller/axis.ts","../../src/util/direction.ts","../../src/util/attr.ts","../../src/util/legend.ts","../../../src/chart/controller/legend.ts","../../../src/chart/controller/slider.ts","../../../src/chart/controller/tooltip.ts","../../../src/interaction/action/active-region.ts","../../../../../src/interaction/action/component/tooltip/geometry.ts","../../../../../src/interaction/action/component/tooltip/sibling.ts","../../../../../src/interaction/action/component/tooltip/ellipsis-text.ts","../../../../src/interaction/action/element/state-base.ts","../../../../src/interaction/action/element/state.ts","../../../../src/interaction/action/element/active.ts","../../../../src/interaction/action/element/link-by-color.ts","../../../../src/interaction/action/element/range-state.ts","../../../../src/interaction/action/element/range-active.ts","../../../../src/interaction/action/element/single-state.ts","../../../../src/interaction/action/element/single-active.ts","../../../../src/interaction/action/element/highlight-util.ts","../../../../src/interaction/action/element/highlight.ts","../../../../src/interaction/action/element/highlight-by-color.ts","../../../../src/interaction/action/element/highlight-by-x.ts","../../../../src/interaction/action/element/range-highlight.ts","../../../../src/interaction/action/element/single-highlight.ts","../../../../src/interaction/action/element/range-selected.ts","../../../../src/interaction/action/element/selected.ts","../../../../src/interaction/action/element/single-selected.ts","../../../../src/interaction/action/component/list-state.ts","../../../../src/interaction/action/component/list-active.ts","../../../../src/interaction/action/component/list-highlight-util.ts","../../../../src/interaction/action/component/list-highlight.ts","../../../../src/interaction/action/component/list-selected.ts","../../../../src/interaction/action/component/list-unchecked.ts","../../../../src/interaction/action/mask/base.ts","../../../../src/interaction/action/mask/circle.ts","../../../../src/interaction/action/mask/rect.ts","../../../../src/interaction/action/mask/dim-rect.ts","../../../../src/interaction/action/mask/path.ts","../../../../src/interaction/action/mask/smooth-path.ts","../../../src/interaction/action/cursor.ts","../../../../src/interaction/action/data/filter.ts","../../../../src/interaction/action/data/range-filter.ts","../../../../src/interaction/action/data/sibling-filter.ts","../../../../src/interaction/action/element/filter.ts","../../../../src/interaction/action/element/sibling-filter.ts","../../../../src/interaction/action/view/button.ts","../../../../src/interaction/action/view/drag.ts","../../../../src/interaction/action/view/move.ts","../../../../src/interaction/action/view/scale-transform.ts","../../../../src/interaction/action/view/scale-translate.ts","../../../../src/interaction/action/view/scale-zoom.ts","src/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","adopt","done","then","__generator","body","_","f","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__createBinding","o","m","k","k2","undefined","enumerable","get","__exportStar","__values","__read","ar","error","__spread","concat","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__esModule","__importDefault","default","__classPrivateFieldGet","receiver","privateMap","has","__classPrivateFieldSet","set","exports","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","BrowserInfo","os","type","NodeInfo","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","reduce","matched","_a","browser","regex","uaMatch","exec","browserName","data","matchedRule","match","versionParts","split","slice","createVersionParts","join","detectOS","searchBotMatch","ii","count","isNode","output","EPSILON","ARRAY_TYPE","Float32Array","RANDOM","Math","random","setMatrixArrayType","degree","PI","toRadian","equals","abs","max","hypot","sqrt","out","glMatrix","clone","copy","identity","fromValues","m00","m01","m10","m11","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","scale","v0","v1","fromRotation","fromScaling","str","frob","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","translate","fromTranslation","fromMat4","m02","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","x","fromMat2d","fromQuat","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","axis","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","mag","cosine","acos","zero","div","dist","sqrDist","sqrLen","forEach","vec","stride","offset","fn","arg","l","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","exp","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fTrace","fRoot","fromEuler","halfToRad","cx","cy","cz","vec4","rotationTo","tmpvec3","vec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","mat3","view","dq","w1","fromRotationTranslationValues","outer","quat","mat4","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","p0","p1","sinC","cosC","taskHead","taskTail","frame","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","clearNow","Timer","_call","_time","_next","timer","callback","delay","time","restart","timerFlush","wake","nap","poke","t1","t0","t2","sleep","clearInterval","setInterval","stop","elapsed","total","tick","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","exponent","polyIn","custom","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","tpmt","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","bounceInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","asin","elasticOut","elasticInOut","factory","extend","parent","definition","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatHsl","hslConvert","formatHsl","color_formatRgb","formatRgb","color","format","trim","toLowerCase","parseInt","rgbn","Rgb","rgba","hsla","NaN","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","isNaN","toString","h","Hsl","hsl","hsl2rgb","m1","m2","channels","displayable","deg2rad","rad2deg","K","Xn","Yn","Zn","t3","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","lch","hcl","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix","cosh","sinh","basis","values","exponential","hue","gamma","nogamma","rgbGamma","start","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","basisClosed","isNumberArray","ArrayBuffer","isView","DataView","numberArray","genericArray","nb","na","setTime","reA","reB","source","one","bi","am","bm","bs","lastIndex","index","number","string","date","isArray","valueOf","object","range","degrees","translateX","translateY","skewX","scaleX","scaleY","atan","cssNode","cssRoot","cssView","svgNode","parseCss","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","parseSvg","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","tanh","ux0","uy0","w0","ux1","uy1","dx","dy","d2","d1","r0","r1","coshr0","duration","hslLong","hclLong","cubehelixGamma","cubehelixLong","piecewise","interpolate","interpolator","samples","fecha","token","twoDigitsOptional","twoDigits","threeDigits","fourDigits","word","literal","shorten","arr","sLen","newArr","substr","monthUpdate","arrName","i18n","lowerCaseArr","map","origObj","_i","args_1","obj","dayNames","monthNames","monthNamesShort","dayNamesShort","defaultI18n","amPm","DoFn","dayOfMonth","globalI18n","setGlobalDateI18n","regexEscape","replace","pad","val","String","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","getHours","hh","HH","getMinutes","mm","getSeconds","ss","getMilliseconds","SS","SSS","toUpperCase","ZZ","getTimezoneOffset","Z","monthParse","emptyDigits","emptyWord","timezoneOffset","parts","minutes","parseFlags","cent","globalMasks","shortDate","mediumDate","longDate","fullDate","isoDate","isoDateTime","shortTime","mediumTime","longTime","setGlobalDateMasks","masks","mask","getTime","literals","$0","$1","combinedI18nSettings","dateStr","today","dateInfo","year","month","day","hour","minute","second","millisecond","isPm","parseInfo","newFormat","specifiedFields","requiredFields","info","field","requiredField","keys","matches","parser","dateWithoutTZ","validateFields","UTC"],"mappings":"AyMkOC,AmM3KA,anM2KA,AmM3KA,AhQ5CD,A1DXA,ACCA,AFDA,OwHkOC,AmM3KA,EhQ5Ce,A1DXQ,ACCf,AFDe,E2DWO,A1DXc,ACCjB,AFDkB,E2DWF,AzDVK,CFU/C,CCVe,C0DWf,AzDVA,IyDUM,AzDVD,CFDU,CwHiOhB,AmM3KA,AhQ3Ca,A1DXU,ECCX,CyDWL,EAAM,C3DZU,C2DYR,AzDXI,CsHgOnB,AmM3KA,CzTpDO,CyDWA,CzDXI,CyDWE,EAAE,GACR,EAAM,E6DmNb,AmM3KA,AhQxCe,C6DmNf,AmM3KA,A1TrDG,E0DeI,EAAM,AzDda,EyDcX,C6DiNf,AmM3KA,A1TrDU,ADAP,CECuC,CyDenC,E6DgNP,AmM3KA,AhQrCa,EAAE,C3DhBL,E2DiBH,EAAM,C6D+Mb,AmM3KA,ChQpCe,GACR,CzDjB2B,CyDiBrB,EgQmCb,AhQnCe,E6D8Mf,AmM5ND,ChQeQ,C6D6MP,C7D7Ma,AzDlB2D,CyTGnE,ChQeU,CgQfE,A1TFd,CCDwD,CyDmBpD,CzDnBwD,CsH+N/D,A7D5Ma,CgQdd,ChQcgB,C1DlBL,CCAC,AFAR,C2DoBI,CzDpBU,CsH8NjB,A7D1Ma,E6D0Mb,A7D1Me,AzDpBS,CyTIhB,CzTJoB,AFAlB,C2TIG,AhQiBN,EAAM,CgQhBR,AzTAN,CyDgBgB,C6DyMf,E7DxMO,EAAM,CgQjBR,ChQiBU,CzDjBQ,EyDkBhB,AzDlBmC,CyTAhC,CnMyNV,A7DvMa,A1DrBV,ACG+D,EsHyNlE,A7DvMe,AzDlB6D,CyTA9D,CzTAwE,CyDmB/E,CgQnBY,ChQmBN,A1DtBH,ACOT,CyTHS,ChQkBK,A3DtBZ,CwH4NH,AmMrNQ,EAAI,AhQgBL,EAAM,AzDnBR,CyTGY,ChQgBF,A3DvBL,C2TOW,AzTHV,CsHwNX,CmMjND,AhQaQ,AzDpBS,CsHwNhB,C7DpMa,AzDpBS,EyDoBP,CzDnBV,EyDoBE,CzDpBI,CsHuNX,AmMjNQ,AhQcK,CzDpBG,CyTME,AhQcH,C1DxBZ,ACImB,CyTMA,ChQef,CgQfmB,AzTLrB,CyDoBQ,EgQbV,AhQaY,AzDpBJ,EsHsNX,AtHtNgB,CyDiCf,C6DqLD,AtHtNsB,AFLnB,G2TYC,AzTNI,CDJA,C0TUF,ChQeL,E6DgMD,AmM/MW,AhQeN,C3D3BO,C2TYE,ChQeJ,C3D1BL,C2D0BW,EgQfK,AhQeC,EgQfE,AhQeI,C6DgM5B,C7DhMkC,A3D1BtB,CwH0NZ,AmM/M6B,ChQeW,CgQfR,ChQgB/B,EAAI,G6D+LL,AmM/MyC,AhQgB/B,EgQhBkC,AhQgB5B,A3D3BO,E2D2BD,A3D3BI,C2TWuB,ChQgBrB,CgQhBwB,ChQgBlB,EAAM,A3DxBzB,EwHuNf,AmM/M2D,AhQiB1D,E6D8LD,AmM/M6D,AhQiBxD,GgQjB6D,AhQiBxD,EgQjB2D,AhQiBrD,EAAM,C6D8LtB,C7D9L4B,CgQhBzB,ChQgB+B,EAAM,EgQhBhC,AhQkBP,EAAI,CzD7BN,CyTWa,ChQkBF,A1DtCX,CuHkOC,AmM9Me,ChQkBC,C6D4LhB,CmM9MmB,AhQkBG,EgQlBA,AhQkBM,AzD7B7B,EyD6BmC,A1DtCnC,E0DsCyC,C6D4LxC,AmM9M6B,ChQmB5B,CgQnB8B,ChQmB1B,AzD9BN,EDTA,C0TqBI,AhQkBO,EgQlBL,AhQkBW,C6D2LhB,C7D3LsB,C6D2LtB,CmM7MW,AhQkBiB,EAAM,EAAM,CgQlBxB,ChQmBf,C6D0LD,C7D1LK,CgQnBe,EAAG,AhQmBb,A3DxCX,E2DwCiB,C6D0LhB,AmM7M2B,ChQmBL,C6D0LtB,AmM7M8B,ChQmBF,EAAM,A3DxCnC,E2TsBI,AhQkBqC,EAEvC,C6DwLD,C7DxLK,CgQpBG,C3TtBT,C2D0CW,EgQpBE,AhQoBI,EgQpBD,AhQoBO,C6DwLtB,C7DxL4B,C6DwL5B,AmM5MmB,ChQoBe,CgQpBZ,ChQoBkB,EACvC,EgQrB4B,AhQqBxB,C6DuLL,CmM5M+B,ChQqBrB,EAAM,CgQpBb,ChQoBmB,CgQpBjB,ChQoBuB,EAAM,CgQpBvB,ChQoB6B,EACvC,C6DsLD,CmM3MgB,AhQqBX,C6DsLL,E7DtLU,CgQrBU,ChQqBJ,CgQrBO,ChQqBD,E6DsLtB,AmM3M2B,AhQqBC,EgQrBE,AhQqBI,EAAM,EgQb3B,AhQcL,E6DqLR,A7D7KD,E6D6KC,KmMnMuB,EAAY,AhQsBpB,C6D6Kf,CmMnM2C,AhQsBf,EgQtBkB,AhQsBL,GgQrBpC,AhQsBJ,IgQtBI,AhQsBE,EAAM,CgQtBA,EACN,AhQsBA,E6D2KP,AmMjMW,AhQsBA,E6D2KX,AmMjMkB,AhQsBL,GACN,EAAI,EgQtBN,AhQsBQ,C6D0Kb,EmMhMK,AhQyBJ,GgQzBS,EAEA,EhQqBT,EAAI,GgQrBK,AhQqBA,EgQnBJ,AhQmBM,C6DyKZ,EAAA,A7DzKiB,CgQnBX,ChQmBe,EAAE,CgQnBb,EAAI,AhQmBc,C6DyK5B,CmM5LiB,AhQmBe,EgQnBX,AhQmBa,EgQnBV,ChQoBvB,EAAI,CgQpBwB,CACpB,ChQmBC,EAAE,C6DwKZ,AmM3LS,EnM2LT,AmM3Lc,AhQmBG,EgQnBI,AhQmBA,EAAE,CgQlBd,EAAK,AhQkBc,C6DwK5B,C7DxKgC,CgQlBV,ChQkBY,CgQlBR,EhQmBlB,CgQnBuB,ChQ0BhC,EgQzBQ,GAAA,EAAU,EAAI,AhQyBN,EgQzBU,AhQyBH,CgQzBI,CnMyL1B,CmMzL6B,AhQ0B5B,C6D+JD,GmMvLY,AhQwBL,EAAM,G6D+Jb,A7D9JO,EgQzBK,AhQyBC,EgQpBR,AhQoBU,EgQpBL,ChQqBH,CgQrBM,ChQqBA,EgQrBK,AhQqBH,E6D6Jf,CmMlLuB,AhQsBhB,C6D4JP,C7D5Ja,CgQtBgB,ChQsBd,CgQtBmB,EAAG,AhQuB9B,E6D2JP,A7D3Ja,CgQvB6B,ChQuB3B,EgQvBgC,ChQwBxC,EgQvBF,AhQuBQ,EgQvBH,AhQuBK,GgQvBC,AhQwBT,EgQxBa,AhQwBP,E6DyJb,AmMjLuB,AhQwBR,E6DyJf,C7DxJO,EgQzBuB,AhQyBjB,EgQzBoB,AhQyBlB,G6DwJf,AmMjLsC,AhQ0B/B,EgQ1BkC,AhQ0B5B,EAAE,GgQ1BkC,AhQ2B1C,EgQ3B6C,AhQ2BvC,EAAE,CgQ3B0C,EAAG,AhQ6BrD,EAAM,EgQ7BqD,AhQ6B/C,EgQ7BkD,AhQ6B5C,EAAM,C6DoJ/B,CmMjL2E,AhQ8BpE,C6DmJP,E7DnJc,CgQ5BT,ChQ4Be,EgQ5BN,AhQ4BY,E6DmJ1B,A7DnJgC,CgQzBxB,ChQ0BD,EAAM,EAAM,EgQ1BX,AhQ0BiB,EAAM,EAG1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","file":"src.f10117fe.js","sourceRoot":"..\\dev","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { GeometryCfg } from './geometry/base';\nimport { PathCfg } from './geometry/path';\nimport { IInteractionContext } from './interface';\n\n// 注册黑暗主题\nimport { registerTheme } from './core';\nimport { antvDark } from './theme/style-sheet/dark';\nimport { createThemeByStylesheet } from './util/theme';\nregisterTheme('dark', createThemeByStylesheet(antvDark));\n\n// 注册 G 渲染引擎\nimport * as CanvasEngine from '@antv/g-canvas';\nimport * as SVGEngine from '@antv/g-svg';\nimport { registerEngine } from './core';\n\nregisterEngine('canvas', CanvasEngine);\nregisterEngine('svg', SVGEngine);\n\n// 注册 G2 内置的 geometry\nimport { registerGeometry } from './core';\nimport Area, { AreaCfg } from './geometry/area';\nimport Edge from './geometry/edge';\nimport Heatmap from './geometry/heatmap';\nimport Interval from './geometry/interval';\nimport Line from './geometry/line';\nimport Path from './geometry/path';\nimport Point from './geometry/point';\nimport Polygon from './geometry/polygon';\nimport Schema from './geometry/schema';\n\nregisterGeometry('Polygon', Polygon);\nregisterGeometry('Interval', Interval);\nregisterGeometry('Schema', Schema);\nregisterGeometry('Path', Path);\nregisterGeometry('Point', Point);\nregisterGeometry('Line', Line);\nregisterGeometry('Area', Area);\nregisterGeometry('Edge', Edge);\nregisterGeometry('Heatmap', Heatmap);\n\n// 引入所有内置的 shapes\nimport './geometry/shape/area/line';\nimport './geometry/shape/area/smooth';\nimport './geometry/shape/area/smooth-line';\n\nimport './geometry/shape/edge/arc';\nimport './geometry/shape/edge/smooth';\nimport './geometry/shape/edge/vhv';\n\nimport './geometry/shape/interval/funnel';\nimport './geometry/shape/interval/hollow-rect';\nimport './geometry/shape/interval/line';\nimport './geometry/shape/interval/pyramid';\nimport './geometry/shape/interval/tick';\n\nimport './geometry/shape/line/step';\n\nimport './geometry/shape/point/hollow';\nimport './geometry/shape/point/image';\nimport './geometry/shape/point/solid';\n\nimport './geometry/shape/schema/box';\nimport './geometry/shape/schema/candle';\n\nimport './geometry/shape/polygon/square';\n\n// 注册 Geometry 内置的 label\nimport { registerGeometryLabel } from './core';\nimport GeometryLabel from './geometry/label/base';\nimport IntervalLabel from './geometry/label/interval';\nimport PieLabel from './geometry/label/pie';\nimport PolarLabel from './geometry/label/polar';\n\nregisterGeometryLabel('base', GeometryLabel);\nregisterGeometryLabel('interval', IntervalLabel);\nregisterGeometryLabel('pie', PieLabel);\nregisterGeometryLabel('polar', PolarLabel);\n\n// 注册 Geometry label 内置的布局函数\nimport { registerGeometryLabelLayout } from './core';\nimport { distribute } from './geometry/label/layout/pie/distribute';\nimport { pieOuterLabelLayout } from './geometry/label/layout/pie/outer';\nimport { limitInCanvas } from './geometry/label/layout/limit-in-canvas';\nimport { limitInShape } from './geometry/label/layout/limit-in-shape';\nimport { fixedOverlap, overlap } from './geometry/label/layout/overlap';\n\nregisterGeometryLabelLayout('overlap', overlap);\nregisterGeometryLabelLayout('distribute', distribute);\nregisterGeometryLabelLayout('fixed-overlap', fixedOverlap);\nregisterGeometryLabelLayout('limit-in-shape', limitInShape);\nregisterGeometryLabelLayout('limit-in-canvas', limitInCanvas);\nregisterGeometryLabelLayout('pie-outer', pieOuterLabelLayout);\n\n// 注册需要的动画执行函数\nimport { fadeIn, fadeOut } from './animate/animation/fade';\nimport { growInX, growInXY, growInY } from './animate/animation/grow-in';\nimport { pathIn } from './animate/animation/path-in';\nimport { positionUpdate } from './animate/animation/position-update';\nimport { scaleInX, scaleInY } from './animate/animation/scale-in';\nimport { sectorPathUpdate } from './animate/animation/sector-path-update';\nimport { waveIn } from './animate/animation/wave-in';\nimport { zoomIn, zoomOut } from './animate/animation/zoom';\nimport { registerAnimation } from './core';\n\nregisterAnimation('fade-in', fadeIn);\nregisterAnimation('fade-out', fadeOut);\nregisterAnimation('grow-in-x', growInX);\nregisterAnimation('grow-in-xy', growInXY);\nregisterAnimation('grow-in-y', growInY);\nregisterAnimation('scale-in-x', scaleInX);\nregisterAnimation('scale-in-y', scaleInY);\nregisterAnimation('wave-in', waveIn);\nregisterAnimation('zoom-in', zoomIn);\nregisterAnimation('zoom-out', zoomOut);\nregisterAnimation('position-update', positionUpdate);\nregisterAnimation('sector-path-update', sectorPathUpdate);\nregisterAnimation('path-in', pathIn);\n\n// 注册内置的 Facet\nimport { registerFacet } from './core';\nimport Circle from './facet/circle';\nimport List from './facet/list';\nimport Matrix from './facet/matrix';\nimport Mirror from './facet/mirror';\nimport Rect from './facet/rect';\nimport Tree from './facet/tree';\n\nregisterFacet('rect', Rect);\nregisterFacet('mirror', Mirror);\nregisterFacet('list', List);\nregisterFacet('matrix', Matrix);\nregisterFacet('circle', Circle);\nregisterFacet('tree', Tree);\n\n// 注册内置的 Component\nimport { registerComponentController } from './core';\n\nimport Annotation from './chart/controller/annotation';\nimport Axis from './chart/controller/axis';\nimport Legend from './chart/controller/legend';\nimport Slider from './chart/controller/slider';\nimport Tooltip from './chart/controller/tooltip';\n\n// register build-in components\nregisterComponentController('axis', Axis);\nregisterComponentController('legend', Legend);\nregisterComponentController('tooltip', Tooltip);\nregisterComponentController('annotation', Annotation);\nregisterComponentController('slider', Slider);\n\n// 注册 Interaction Action\nimport { registerAction } from './core';\nimport ActiveRegion from './interaction/action/active-region';\nimport SiblingTooltip from './interaction/action/component/tooltip/sibling';\nimport TooltipAction from './interaction/action/component/tooltip/geometry';\nimport EllipsisTextAction from './interaction/action/component/tooltip/ellipsis-text';\n\nimport ElmentActive from './interaction/action/element/active';\nimport ElementLinkByColor from './interaction/action/element/link-by-color';\nimport ElmentRangeActive from './interaction/action/element/range-active';\nimport ElmentSingleActive from './interaction/action/element/single-active';\n\nimport ElmentHighlight from './interaction/action/element/highlight';\nimport ElmentHighlightByColor from './interaction/action/element/highlight-by-color';\nimport ElmentHighlightByX from './interaction/action/element/highlight-by-x';\n\nimport ElmentRangeHighlight from './interaction/action/element/range-highlight';\nimport ElmentSingleHighlight from './interaction/action/element/single-highlight';\n\nimport ElementRangeSelected from './interaction/action/element/range-selected';\nimport ElementSelected from './interaction/action/element/selected';\nimport ElementSingleSelected from './interaction/action/element/single-selected';\n\nimport ListActive from './interaction/action/component/list-active';\nimport ListHighlight from './interaction/action/component/list-highlight';\nimport ListSelected from './interaction/action/component/list-selected';\nimport ListUnchecked from './interaction/action/component/list-unchecked';\n\nimport CircleMask from './interaction/action/mask/circle';\nimport DimMask from './interaction/action/mask/dim-rect';\nimport PathMask from './interaction/action/mask/path';\nimport RectMask from './interaction/action/mask/rect';\nimport SmoothPathMask from './interaction/action/mask/smooth-path';\n\nimport CursorAction from './interaction/action/cursor';\nimport DataFilter from './interaction/action/data/filter';\nimport DataRangeFilter from './interaction/action/data/range-filter';\nimport SiblingFilter from './interaction/action/data/sibling-filter';\n\nimport ElementFilter from './interaction/action/element/filter';\nimport ElementSiblingFilter from './interaction/action/element/sibling-filter';\nimport ButtonAction from './interaction/action/view/button';\nimport ViewDrag from './interaction/action/view/drag';\nimport ViewMove from './interaction/action/view/move';\nimport ScaleTranslate from './interaction/action/view/scale-translate';\nimport ScaleZoom from './interaction/action/view/scale-zoom';\n\nregisterAction('tooltip', TooltipAction);\nregisterAction('sibling-tooltip', SiblingTooltip);\nregisterAction('ellipsis-text', EllipsisTextAction);\nregisterAction('element-active', ElmentActive);\nregisterAction('element-single-active', ElmentSingleActive);\nregisterAction('element-range-active', ElmentRangeActive);\n\nregisterAction('element-highlight', ElmentHighlight);\nregisterAction('element-highlight-by-x', ElmentHighlightByX);\nregisterAction('element-highlight-by-color', ElmentHighlightByColor);\n\nregisterAction('element-single-highlight', ElmentSingleHighlight);\nregisterAction('element-range-highlight', ElmentRangeHighlight);\nregisterAction('element-sibling-highlight', ElmentRangeHighlight, {\n  effectSiblings: true,\n  effectByRecord: true,\n});\n\nregisterAction('element-selected', ElementSelected);\nregisterAction('element-single-selected', ElementSingleSelected);\nregisterAction('element-range-selected', ElementRangeSelected);\nregisterAction('element-link-by-color', ElementLinkByColor);\n\nregisterAction('active-region', ActiveRegion);\nregisterAction('list-active', ListActive);\nregisterAction('list-selected', ListSelected);\nregisterAction('list-highlight', ListHighlight);\nregisterAction('list-unchecked', ListUnchecked);\n\nregisterAction('legend-item-highlight', ListHighlight, {\n  componentNames: ['legend'],\n});\n\nregisterAction('axis-label-highlight', ListHighlight, {\n  componentNames: ['axis'],\n});\n\nregisterAction('rect-mask', RectMask);\nregisterAction('x-rect-mask', DimMask, { dim: 'x' });\nregisterAction('y-rect-mask', DimMask, { dim: 'y' });\nregisterAction('circle-mask', CircleMask);\nregisterAction('path-mask', PathMask);\nregisterAction('smooth-path-mask', SmoothPathMask);\n\nregisterAction('cursor', CursorAction);\nregisterAction('data-filter', DataFilter);\n\nregisterAction('brush', DataRangeFilter);\nregisterAction('brush-x', DataRangeFilter, { dims: ['x'] });\nregisterAction('brush-y', DataRangeFilter, { dims: ['y'] });\nregisterAction('sibling-filter', SiblingFilter);\nregisterAction('sibling-x-filter', SiblingFilter);\nregisterAction('sibling-y-filter', SiblingFilter);\n\nregisterAction('element-filter', ElementFilter);\nregisterAction('element-sibling-filter', ElementSiblingFilter);\nregisterAction('element-sibling-filter-record', ElementSiblingFilter, { byRecord: true });\n\nregisterAction('view-drag', ViewDrag);\nregisterAction('view-move', ViewMove);\n\nregisterAction('scale-translate', ScaleTranslate);\nregisterAction('scale-zoom', ScaleZoom);\nregisterAction('reset-button', ButtonAction, {\n  name: 'reset-button',\n  text: 'reset',\n});\n\n// 注册默认的 Interaction 交互行为\nimport { registerInteraction } from './core';\n\nfunction isPointInView(context: IInteractionContext) {\n  return context.isInPlot();\n}\n\n// 注册 tooltip 的 interaction\nregisterInteraction('tooltip', {\n  start: [\n    { trigger: 'plot:mousemove', action: 'tooltip:show', throttle: { wait: 50, leading: true, trailing: false } },\n    { trigger: 'plot:touchmove', action: 'tooltip:show', throttle: { wait: 50, leading: true, trailing: false } },\n  ],\n  end: [\n    { trigger: 'plot:mouseleave', action: 'tooltip:hide' },\n    { trigger: 'plot:leave', action: 'tooltip:hide' },\n    { trigger: 'plot:touchend', action: 'tooltip:hide' },\n  ],\n});\n\nregisterInteraction('ellipsis-text', {\n  start: [\n    {\n      trigger: 'legend-item-name:mousemove',\n      action: 'ellipsis-text:show',\n      throttle: { wait: 50, leading: true, trailing: false },\n    },\n    {\n      trigger: 'legend-item-name:touchstart',\n      action: 'ellipsis-text:show',\n      throttle: { wait: 50, leading: true, trailing: false },\n    },\n    {\n      trigger: 'axis-label:mousemove',\n      action: 'ellipsis-text:show',\n      throttle: { wait: 50, leading: true, trailing: false },\n    },\n    {\n      trigger: 'axis-label:touchstart',\n      action: 'ellipsis-text:show',\n      throttle: { wait: 50, leading: true, trailing: false },\n    },\n  ],\n  end: [\n    { trigger: 'legend-item-name:mouseleave', action: 'ellipsis-text:hide' },\n    { trigger: 'legend-item-name:touchend', action: 'ellipsis-text:hide' },\n    { trigger: 'axis-label:mouseleave', action: 'ellipsis-text:hide' },\n    { trigger: 'axis-label:touchend', action: 'ellipsis-text:hide' },\n  ],\n});\n\n// 移动到 elment 上 active\nregisterInteraction('element-active', {\n  start: [{ trigger: 'element:mouseenter', action: 'element-active:active' }],\n  end: [{ trigger: 'element:mouseleave', action: 'element-active:reset' }],\n});\n\n// 点击选中，允许取消\nregisterInteraction('element-selected', {\n  start: [{ trigger: 'element:click', action: 'element-selected:toggle' }],\n});\n\n// hover highlight，允许取消\nregisterInteraction('element-highlight', {\n  start: [{ trigger: 'element:mouseenter', action: 'element-highlight:highlight' }],\n  end: [{ trigger: 'element:mouseleave', action: 'element-highlight:reset' }],\n});\n\n// hover highlight by x，允许取消\nregisterInteraction('element-highlight-by-x', {\n  start: [{ trigger: 'element:mouseenter', action: 'element-highlight-by-x:highlight' }],\n  end: [{ trigger: 'element:mouseleave', action: 'element-highlight-by-x:reset' }],\n});\n\n// hover highlight by y，允许取消\nregisterInteraction('element-highlight-by-color', {\n  start: [{ trigger: 'element:mouseenter', action: 'element-highlight-by-color:highlight' }],\n  end: [{ trigger: 'element:mouseleave', action: 'element-highlight-by-color:reset' }],\n});\n\n// legend hover，element active\nregisterInteraction('legend-active', {\n  start: [{ trigger: 'legend-item:mouseenter', action: ['list-active:active', 'element-active:active'] }],\n  end: [{ trigger: 'legend-item:mouseleave', action: ['list-active:reset', 'element-active:reset'] }],\n});\n\n// legend hover，element active\nregisterInteraction('legend-highlight', {\n  start: [\n    { trigger: 'legend-item:mouseenter', action: ['legend-item-highlight:highlight', 'element-highlight:highlight'] },\n  ],\n  end: [{ trigger: 'legend-item:mouseleave', action: ['legend-item-highlight:reset', 'element-highlight:reset'] }],\n});\n\n// legend hover，element active\nregisterInteraction('axis-label-highlight', {\n  start: [\n    { trigger: 'axis-label:mouseenter', action: ['axis-label-highlight:highlight', 'element-highlight:highlight'] },\n  ],\n  end: [{ trigger: 'axis-label:mouseleave', action: ['axis-label-highlight:reset', 'element-highlight:reset'] }],\n});\n\n// legend hover，element active\nregisterInteraction('element-list-highlight', {\n  start: [{ trigger: 'element:mouseenter', action: ['list-highlight:highlight', 'element-highlight:highlight'] }],\n  end: [{ trigger: 'element:mouseleave', action: ['list-highlight:reset', 'element-highlight:reset'] }],\n});\n\n// 框选\nregisterInteraction('element-range-highlight', {\n  showEnable: [\n    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },\n    { trigger: 'mask:mouseenter', action: 'cursor:move' },\n    { trigger: 'plot:mouseleave', action: 'cursor:default' },\n    { trigger: 'mask:mouseleave', action: 'cursor:crosshair' },\n  ],\n  start: [\n    {\n      trigger: 'plot:mousedown',\n      isEnable(context) {\n        // 不要点击在 mask 上重新开始\n        return !context.isInShape('mask');\n      },\n      action: ['rect-mask:start', 'rect-mask:show'],\n    },\n    {\n      trigger: 'mask:dragstart',\n      action: ['rect-mask:moveStart'],\n    },\n  ],\n  processing: [\n    {\n      trigger: 'plot:mousemove',\n      action: ['rect-mask:resize'],\n    },\n    {\n      trigger: 'mask:drag',\n      action: ['rect-mask:move'],\n    },\n    {\n      trigger: 'mask:change',\n      action: ['element-range-highlight:highlight'],\n    },\n  ],\n  end: [\n    { trigger: 'plot:mouseup', action: ['rect-mask:end'] },\n    { trigger: 'mask:dragend', action: ['rect-mask:moveEnd'] },\n    {\n      trigger: 'document:mouseup',\n      isEnable(context) {\n        return !context.isInPlot();\n      },\n      action: ['element-range-highlight:clear', 'rect-mask:end', 'rect-mask:hide'],\n    },\n  ],\n  rollback: [{ trigger: 'dblclick', action: ['element-range-highlight:clear', 'rect-mask:hide'] }],\n});\n\nregisterInteraction('brush', {\n  showEnable: [\n    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },\n    { trigger: 'plot:mouseleave', action: 'cursor:default' },\n  ],\n  start: [\n    {\n      trigger: 'mousedown',\n      isEnable: isPointInView,\n      action: ['brush:start', 'rect-mask:start', 'rect-mask:show'],\n    },\n  ],\n  processing: [\n    {\n      trigger: 'mousemove',\n      isEnable: isPointInView,\n      action: ['rect-mask:resize'],\n    },\n  ],\n  end: [\n    {\n      trigger: 'mouseup',\n      isEnable: isPointInView,\n      action: ['brush:filter', 'brush:end', 'rect-mask:end', 'rect-mask:hide', 'reset-button:show'],\n    },\n  ],\n  rollback: [{ trigger: 'reset-button:click', action: ['brush:reset', 'reset-button:hide', 'cursor:crosshair'] }],\n});\n\nregisterInteraction('brush-visible', {\n  showEnable: [\n    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },\n    { trigger: 'plot:mouseleave', action: 'cursor:default' },\n  ],\n  start: [\n    {\n      trigger: 'plot:mousedown',\n      action: ['rect-mask:start', 'rect-mask:show'],\n    },\n  ],\n  processing: [\n    {\n      trigger: 'plot:mousemove',\n      action: ['rect-mask:resize'],\n    },\n    { trigger: 'mask:change', action: ['element-range-highlight:highlight'] },\n  ],\n  end: [\n    {\n      trigger: 'plot:mouseup',\n      action: ['rect-mask:end', 'rect-mask:hide', 'element-filter:filter', 'element-range-highlight:clear'],\n    },\n  ],\n  rollback: [\n    {\n      trigger: 'dblclick',\n      action: ['element-filter:clear'],\n    },\n  ],\n});\n\nregisterInteraction('brush-x', {\n  showEnable: [\n    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },\n    { trigger: 'plot:mouseleave', action: 'cursor:default' },\n  ],\n  start: [\n    {\n      trigger: 'mousedown',\n      isEnable: isPointInView,\n      action: ['brush-x:start', 'x-rect-mask:start', 'x-rect-mask:show'],\n    },\n  ],\n  processing: [\n    {\n      trigger: 'mousemove',\n      isEnable: isPointInView,\n      action: ['x-rect-mask:resize'],\n    },\n  ],\n  end: [\n    {\n      trigger: 'mouseup',\n      isEnable: isPointInView,\n      action: ['brush-x:filter', 'brush-x:end', 'x-rect-mask:end', 'x-rect-mask:hide'],\n    },\n  ],\n  rollback: [{ trigger: 'dblclick', action: ['brush-x:reset'] }],\n});\n\nregisterInteraction('element-path-highlight', {\n  showEnable: [\n    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },\n    { trigger: 'plot:mouseleave', action: 'cursor:default' },\n  ],\n  start: [\n    { trigger: 'mousedown', isEnable: isPointInView, action: 'path-mask:start' },\n    { trigger: 'mousedown', isEnable: isPointInView, action: 'path-mask:show' },\n  ],\n  processing: [{ trigger: 'mousemove', action: 'path-mask:addPoint' }],\n  end: [{ trigger: 'mouseup', action: 'path-mask:end' }],\n  rollback: [{ trigger: 'dblclick', action: 'path-mask:hide' }],\n});\n\n// 点击选中，允许取消\nregisterInteraction('element-single-selected', {\n  start: [{ trigger: 'element:click', action: 'element-single-selected:toggle' }],\n});\n\n// 筛选数据\nregisterInteraction('legend-filter', {\n  showEnable: [\n    { trigger: 'legend-item:mouseenter', action: 'cursor:pointer' },\n    { trigger: 'legend-item:mouseleave', action: 'cursor:default' },\n  ],\n  start: [{ trigger: 'legend-item:click', action: ['list-unchecked:toggle', 'data-filter:filter'] }],\n});\n\n// 筛选数据\nregisterInteraction('continuous-filter', {\n  start: [{ trigger: 'legend:valuechanged', action: 'data-filter:filter' }],\n});\n// 筛选数据\nregisterInteraction('continuous-visible-filter', {\n  start: [{ trigger: 'legend:valuechanged', action: 'element-filter:filter' }],\n});\n\n// 筛选图形\nregisterInteraction('legend-visible-filter', {\n  showEnable: [\n    { trigger: 'legend-item:mouseenter', action: 'cursor:pointer' },\n    { trigger: 'legend-item:mouseleave', action: 'cursor:default' },\n  ],\n  start: [{ trigger: 'legend-item:click', action: ['list-unchecked:toggle', 'element-filter:filter'] }],\n});\n\n// 出现背景框\nregisterInteraction('active-region', {\n  start: [{ trigger: 'plot:mousemove', action: 'active-region:show' }],\n  end: [{ trigger: 'plot:mouseleave', action: 'active-region:hide' }],\n});\n\nfunction isWheelDown(event) {\n  event.gEvent.preventDefault();\n  return event.gEvent.originalEvent.deltaY > 0;\n}\nregisterInteraction('view-zoom', {\n  start: [\n    {\n      trigger: 'plot:mousewheel',\n      isEnable(context) {\n        return isWheelDown(context.event);\n      },\n      action: 'scale-zoom:zoomOut',\n      throttle: { wait: 100, leading: true, trailing: false },\n    },\n    {\n      trigger: 'plot:mousewheel',\n      isEnable(context) {\n        return !isWheelDown(context.event);\n      },\n      action: 'scale-zoom:zoomIn',\n      throttle: { wait: 100, leading: true, trailing: false },\n    },\n  ],\n});\n\nregisterInteraction('sibling-tooltip', {\n  start: [{ trigger: 'plot:mousemove', action: 'sibling-tooltip:show' }],\n  end: [{ trigger: 'plot:mouseleave', action: 'sibling-tooltip:hide' }],\n});\n\n// 让 TS 支持 View 原型上添加的创建 Geometry 方法的智能提示\n/**\n * 往 View 原型上添加的创建 Geometry 的方法\n *\n * Tips:\n * view module augmentation, detail: http://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation\n */\ndeclare module './chart/view' {\n  interface View {\n    /**\n     * 创建 Polygon 几何标记。\n     * @param [cfg] 传入 Polygon 构造函数的配置。\n     * @returns polygon 返回 Polygon 实例。\n     */\n    polygon(cfg?: Partial<GeometryCfg>): Polygon;\n    /**\n     * 创建 Point 几何标记。\n     * @param [cfg] 传入 Point 构造函数的配置。\n     * @returns point 返回 Point 实例。\n     */\n    point(cfg?: Partial<GeometryCfg>): Point;\n    /**\n     * 创建 Interval 几何标记。\n     * @param [cfg] 传入 Interval 构造函数的配置。\n     * @returns interval 返回 Interval 实例。\n     */\n    interval(cfg?: Partial<GeometryCfg>): Interval;\n    /**\n     * 创建 Schema 几何标记。\n     * @param [cfg] 传入 Schema 构造函数的配置。\n     * @returns schema 返回 Schema 实例。\n     */\n    schema(cfg?: Partial<GeometryCfg>): Schema;\n    /**\n     * 创建 Path 几何标记。\n     * @param [cfg] 传入 Path 构造函数的配置。\n     * @returns path 返回 Path 实例。\n     */\n    path(cfg?: Partial<PathCfg>): Path;\n    /**\n     * 创建 Line 几何标记。\n     * @param [cfg] 传入 Line 构造函数的配置。\n     * @returns line 返回 Line 实例。\n     */\n    line(cfg?: Partial<PathCfg>): Line;\n    /**\n     * 创建 Area 几何标记。\n     * @param [cfg] 传入 Area 构造函数的配置。\n     * @returns area 返回 Area 实例。\n     */\n    area(cfg?: Partial<AreaCfg>): Area;\n    /**\n     * 创建 Edge 几何标记。\n     * @param [cfg] 传入 Edge 构造函数的配置。\n     * @returns schema 返回 Edge 实例。\n     */\n    edge(cfg?: Partial<GeometryCfg>): Edge;\n    /**\n     * 创建 Heatmap 几何标记。\n     * @param [cfg] 传入 Heatmap 构造函数的配置。\n     * @returns heatmap 返回 Heatmap 实例。\n     */\n    heatmap(cfg?: Partial<GeometryCfg>): Heatmap;\n  }\n}\n\nexport * from './core';\n// 一些工具方法导出\nimport { getAngle, polarToCartesian } from './util/graphics';\nimport { rotate, transform, translate, zoom } from './util/transform';\nimport EllipsisText from './interaction/action/component/tooltip/ellipsis-text';\nexport const Util = {\n  translate,\n  rotate,\n  zoom,\n  transform,\n  getAngle,\n  polarToCartesian,\n};\n","/**\n * view 中三层 group 分层 key\n */\nexport enum LAYER {\n  /** 前景层 */\n  FORE = 'fore',\n  /** 中间层 */\n  MID = 'mid',\n  /** 背景层 */\n  BG = 'bg',\n}\n\n/**\n * 组件在画布的布局方位 12 方位\n */\nexport enum DIRECTION {\n  TOP = 'top',\n  TOP_LEFT = 'top-left',\n  TOP_RIGHT = 'top-right',\n  RIGHT = 'right',\n  RIGHT_TOP = 'right-top',\n  RIGHT_BOTTOM = 'right-bottom',\n  LEFT = 'left',\n  LEFT_TOP = 'left-top',\n  LEFT_BOTTOM = 'left-bottom',\n  BOTTOM = 'bottom',\n  BOTTOM_LEFT = 'bottom-left',\n  BOTTOM_RIGHT = 'bottom-right',\n  RADIUS = 'radius',\n  CIRCLE = 'circle',\n  // no direction information\n  NONE = 'none',\n}\n\n/**\n * 组件的类型，可能会影响到布局算法\n */\nexport enum COMPONENT_TYPE {\n  /** axis 组件 */\n  AXIS = 'axis',\n  /** grid 组件 */\n  GRID = 'grid',\n  /** legend 组件 */\n  LEGEND = 'legend',\n  /** tooltip 组件 */\n  TOOLTIP = 'tooltip',\n  /** annotation 组件 */\n  ANNOTATION = 'annotation',\n  /** 其他组件，自定义组件 */\n  OTHER = 'other',\n}\n\n/**\n * 三层 group 的 z index\n */\nexport const GROUP_Z_INDEX = {\n  FORE: 3,\n  MID: 2,\n  BG: 1,\n};\n\n/**\n * View 的生命周期阶段（和 3.x 的生命周期略有不同）\n * 我们需要先确定在那写场景需要用到生命周期，如果只是为了在生命周期插入一下什么组件之类的，那么在现有架构就是不需要的\n */\nexport enum VIEW_LIFE_CIRCLE {\n  BEFORE_RENDER = 'beforerender',\n  AFTER_RENDER = 'afterrender',\n\n  BEFORE_PAINT = 'beforepaint',\n  AFTER_PAINT = 'afterpaint',\n\n  BEFORE_CHANGE_DATA = 'beforechangedata',\n  AFTER_CHANGE_DATA = 'afterchangedata',\n\n  BEFORE_CLEAR = 'beforeclear',\n  AFTER_CLEAR = 'afterclear',\n\n  BEFORE_DESTROY = 'beforedestroy',\n}\n\n/**\n * 绘图区的事件列表\n */\nexport enum PLOT_EVENTS {\n  // mouse 事件\n  MOUSE_ENTER = 'plot:mouseenter',\n  MOUSE_DOWN = 'plot:mousedown',\n  MOUSE_MOVE = 'plot:mousemove',\n  MOUSE_UP = 'plot:mouseup',\n  MOUSE_LEAVE = 'plot:mouseleave',\n  // 移动端事件\n  TOUCH_START = 'plot:touchstart',\n  TOUCH_MOVE = 'plot:touchmove',\n  TOUCH_END = 'plot:touchend',\n  TOUCH_CANCEL = 'plot:touchcancel',\n  // click 事件\n  CLICK = 'plot:click',\n  DBLCLICK = 'plot:dblclick',\n  CONTEXTMENU = 'plot:contextmenu',\n\n  LEAVE = 'plot:leave',\n  ENTER = 'plot:enter',\n}\n\n/**\n * Element 图形交互状态\n */\nexport enum ELEMENT_STATE {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n  SELECTED = 'selected',\n  DEFAULT = 'default',\n}\n\n/** 参与分组的图形属性名 */\nexport const GROUP_ATTRS = ['color', 'shape', 'size'];\n/** 存储原始数据的字段名 */\nexport const FIELD_ORIGIN = '_origin';\n/** 最小的图表宽度 */\nexport const MIN_CHART_WIDTH = 1;\n/** 最小的图表高度 */\nexport const MIN_CHART_HEIGHT = 1;\n/** 辅助组件占图表的尺寸的最大比例：如图表上方的图例最多占图表高度的25% */\nexport const COMPONENT_MAX_VIEW_PERCENTAGE = 0.25;\n","import { IG } from '../dependents';\n\nconst ENGINES: Record<string, IG> = {};\n\n/**\n * 通过名字获取渲染 engine\n * @param name 渲染引擎名字\n * @returns G engine\n */\nexport function getEngine(name: string): IG {\n  const G = ENGINES[name];\n\n  if (!G) {\n    throw new Error(`G engine '${name}' is not exist, please register it at first.`);\n  }\n\n  return G;\n}\n\n/**\n * 注册渲染引擎\n * @param name\n * @param engine\n */\nexport function registerEngine(name: string, engine: IG) {\n  ENGINES[name] = engine;\n}\n",null,null,null,null,null,null,null,null,null,"import { MIN_CHART_HEIGHT, MIN_CHART_WIDTH } from '../constant';\nimport { Size } from '../interface';\n\n/**\n * get the element's bounding size\n * @param ele dom element\n * @returns the element width and height\n */\nfunction getElementSize(ele: HTMLElement): Size {\n  const style = getComputedStyle(ele);\n\n  return {\n    width:\n      (ele.clientWidth || parseInt(style.width, 10)) -\n      parseInt(style.paddingLeft, 10) -\n      parseInt(style.paddingRight, 10),\n    height:\n      (ele.clientHeight || parseInt(style.height, 10)) -\n      parseInt(style.paddingTop, 10) -\n      parseInt(style.paddingBottom, 10),\n  };\n}\n\n/**\n * is value a valid number\n * @param v the input value\n * @returns whether it is a number\n */\nfunction isNumber(v: any): boolean {\n  return typeof v === 'number' && !isNaN(v);\n}\n\n/**\n * @ignore\n * calculate the chart size\n * @param ele DOM element\n * @param autoFit should auto fit\n * @param width chart width which is set by user\n * @param height chart height which is set by user\n * @returns the chart width and height\n */\nexport function getChartSize(ele: HTMLElement, autoFit: boolean, width: number, height: number): Size {\n  let w = width;\n  let h = height;\n\n  if (autoFit) {\n    const size = getElementSize(ele);\n\n    w = size.width ? size.width : w;\n    h = size.height ? size.height : h;\n  }\n\n  return {\n    width: Math.max(isNumber(w) ? w : MIN_CHART_WIDTH, MIN_CHART_WIDTH),\n    height: Math.max(isNumber(h) ? h : MIN_CHART_HEIGHT, MIN_CHART_HEIGHT),\n  };\n}\n\n/**\n * @ignore\n * remove html element from its parent\n * @param dom\n */\nexport function removeDom(dom: HTMLElement) {\n  const parent = dom.parentNode;\n\n  if (parent) {\n    parent.removeChild(dom);\n  }\n}\n\n/** @ignore */\nexport { createDom, modifyCSS } from '@antv/dom-util';\n","import EE from '@antv/event-emitter';\n\ninterface BaseCfg {\n  visible?: boolean;\n}\n\n/**\n * G2 Chart、View、Geometry 以及 Element 等的基类，提供事件以及一些通用的方法。\n */\nexport default class Base extends EE {\n  /** 是否可见 */\n  public visible: boolean;\n  /** 标识对象是否已销毁 */\n  public destroyed: boolean = false;\n\n  constructor(cfg: BaseCfg) {\n    super();\n    const { visible = true } = cfg;\n    this.visible = visible;\n  }\n\n  /**\n   * 显示。\n   */\n  public show() {\n    const visible = this.visible;\n    if (!visible) {\n      this.changeVisible(true);\n    }\n  }\n\n  /**\n   * 隐藏。\n   */\n  public hide() {\n    const visible = this.visible;\n    if (visible) {\n      this.changeVisible(false);\n    }\n  }\n\n  /**\n   * 销毁。\n   */\n  public destroy() {\n    this.off();\n    this.destroyed = true;\n  }\n\n  /**\n   * 显示或者隐藏。\n   * @param visible\n   * @returns\n   */\n  public changeVisible(visible: boolean) {\n    if (this.visible === visible) {\n      return;\n    }\n    this.visible = visible;\n  }\n}\n",null,"module.exports={__npminstall_done:!1,_args:[[\"@antv/g-base@0.4.7\",\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\programs\\\\side project\\\\ncku\"]],_from:\"@antv/g-base@0.4.7\",_id:\"@antv/g-base@0.4.7\",_inBundle:!1,_integrity:\"sha512-wKSpS3/M1slU92iOgi2QV4MCd82J1d2PyPcQArqSFRUZU0KnVMIl95v79dG0Be4YvFaZ3bVrT6Ns1Czr8oplhA==\",_location:\"/@antv/g-base\",_phantomChildren:{},_requested:{type:\"version\",registry:!0,raw:\"@antv/g-base@0.4.7\",name:\"@antv/g-base\",escapedName:\"@antv%2fg-base\",scope:\"@antv\",rawSpec:\"0.4.7\",saveSpec:null,fetchSpec:\"0.4.7\"},_requiredBy:[\"/@antv/component\",\"/@antv/g-canvas\",\"/@antv/g-svg\",\"/@antv/g2\"],_resolved:\"https://registry.npmjs.org/@antv/g-base/-/g-base-0.4.7.tgz\",_spec:\"0.4.7\",_where:\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\programs\\\\side project\\\\ncku\",author:{name:\"https://github.com/orgs/antvis/people\"},bugs:{url:\"https://github.com/antvis/util/issues\"},dependencies:{\"@antv/event-emitter\":\"^0.1.1\",\"@antv/g-math\":\"^0.1.3\",\"@antv/matrix-util\":\"^3.1.0-beta.1\",\"@antv/path-util\":\"~2.0.5\",\"@antv/util\":\"~2.0.0\",\"@types/d3-timer\":\"^1.0.9\",\"d3-ease\":\"^1.0.5\",\"d3-interpolate\":\"^1.3.2\",\"d3-timer\":\"^1.0.9\",\"detect-browser\":\"^5.1.0\"},description:\"A common util collection for antv projects\",devDependencies:{\"@antv/torch\":\"^1.0.0\",\"gl-matrix\":\"^3.0.0\",less:\"^3.9.0\",\"npm-run-all\":\"^4.1.5\",\"tsc-watch\":\"^4.0.0\"},files:[\"package.json\",\"esm\",\"lib\",\"LICENSE\",\"README.md\"],gitHead:\"eb6a2503cb7bb8154697592b10680939d954a31a\",homepage:\"https://github.com/antvis/util#readme\",keywords:[\"util\",\"antv\",\"g\"],license:\"ISC\",main:\"lib/index.js\",module:\"esm/index.js\",name:\"@antv/g-base\",publishConfig:{access:\"public\"},repository:{type:\"git\",url:\"git+https://github.com/antvis/util.git\"},scripts:{build:\"npm run clean && run-p build:*\",\"build:cjs\":\"tsc -p tsconfig.json --target ES5 --module commonjs --outDir lib\",\"build:esm\":\"tsc -p tsconfig.json --target ES5 --module ESNext --outDir esm\",clean:\"rm -rf esm lib\",coverage:\"npm run coverage-generator && npm run coverage-viewer\",\"coverage-generator\":\"torch --coverage --compile --source-pattern src/*.js,src/**/*.js --opts tests/mocha.opts\",\"coverage-viewer\":\"torch-coverage\",test:\"torch --renderer --compile --opts tests/mocha.opts\",\"test-live\":\"torch --compile --interactive --opts tests/mocha.opts\",tsc:\"tsc --noEmit\",typecheck:\"tsc --noEmit\",\"watch:cjs\":\"tsc-watch -p tsconfig.json --target ES5 --module commonjs --outDir lib --compiler typescript/bin/tsc\"},types:\"lib/index.d.ts\",version:\"0.4.7\"};",null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n",null,null,"// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {ReadonlyMat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {ReadonlyMat2} L the lower triangular matrix\r\n * @param {ReadonlyMat2} D the diagonal matrix\r\n * @param {ReadonlyMat2} U the upper triangular matrix\r\n * @param {ReadonlyMat2} a the input matrix to factorize\r\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2} a The first matrix.\r\n * @param {ReadonlyMat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {ReadonlyMat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {ReadonlyMat2} a the first operand\r\n * @param {ReadonlyMat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nexport var getReal = quat.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport var setReal = quat.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = quat.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nexport var length = quat.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };",null,null,null,null,"var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","export {\n  now,\n  timer,\n  timerFlush\n} from \"./timer.js\";\n\nexport {\n  default as timeout\n} from \"./timeout.js\";\n\nexport {\n  default as interval\n} from \"./interval.js\";\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","// tpmt is two power minus ten times t scaled to [0,1]\nexport function tpmt(x) {\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n}\n","import {tpmt} from \"./math.js\";\n\nexport function expIn(t) {\n  return tpmt(1 - +t);\n}\n\nexport function expOut(t) {\n  return 1 - tpmt(t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return (t = +t) * t * (s * (t - 1) + t);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((t + 1) * s + t) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","import {tpmt} from \"./math.js\";\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export {\n  linear as easeLinear\n} from \"./linear.js\";\n\nexport {\n  quadInOut as easeQuad,\n  quadIn as easeQuadIn,\n  quadOut as easeQuadOut,\n  quadInOut as easeQuadInOut\n} from \"./quad.js\";\n\nexport {\n  cubicInOut as easeCubic,\n  cubicIn as easeCubicIn,\n  cubicOut as easeCubicOut,\n  cubicInOut as easeCubicInOut\n} from \"./cubic.js\";\n\nexport {\n  polyInOut as easePoly,\n  polyIn as easePolyIn,\n  polyOut as easePolyOut,\n  polyInOut as easePolyInOut\n} from \"./poly.js\";\n\nexport {\n  sinInOut as easeSin,\n  sinIn as easeSinIn,\n  sinOut as easeSinOut,\n  sinInOut as easeSinInOut\n} from \"./sin.js\";\n\nexport {\n  expInOut as easeExp,\n  expIn as easeExpIn,\n  expOut as easeExpOut,\n  expInOut as easeExpInOut\n} from \"./exp.js\";\n\nexport {\n  circleInOut as easeCircle,\n  circleIn as easeCircleIn,\n  circleOut as easeCircleOut,\n  circleInOut as easeCircleInOut\n} from \"./circle.js\";\n\nexport {\n  bounceOut as easeBounce,\n  bounceIn as easeBounceIn,\n  bounceOut as easeBounceOut,\n  bounceInOut as easeBounceInOut\n} from \"./bounce.js\";\n\nexport {\n  backInOut as easeBack,\n  backIn as easeBackIn,\n  backOut as easeBackOut,\n  backInOut as easeBackInOut\n} from \"./back.js\";\n\nexport {\n  elasticOut as easeElastic,\n  elasticIn as easeElasticIn,\n  elasticOut as easeElasticOut,\n  elasticInOut as easeElasticInOut\n} from \"./elastic.js\";\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {deg2rad, rad2deg} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {deg2rad, rad2deg} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export {default as color, rgb, hsl} from \"./color.js\";\nexport {default as lab, hcl, lch, gray} from \"./lab.js\";\nexport {default as cubehelix} from \"./cubehelix.js\";\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color.js\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export {default as interpolate} from \"./value.js\";\nexport {default as interpolateArray} from \"./array.js\";\nexport {default as interpolateBasis} from \"./basis.js\";\nexport {default as interpolateBasisClosed} from \"./basisClosed.js\";\nexport {default as interpolateDate} from \"./date.js\";\nexport {default as interpolateDiscrete} from \"./discrete.js\";\nexport {default as interpolateHue} from \"./hue.js\";\nexport {default as interpolateNumber} from \"./number.js\";\nexport {default as interpolateNumberArray} from \"./numberArray.js\";\nexport {default as interpolateObject} from \"./object.js\";\nexport {default as interpolateRound} from \"./round.js\";\nexport {default as interpolateString} from \"./string.js\";\nexport {interpolateTransformCss, interpolateTransformSvg} from \"./transform/index.js\";\nexport {default as interpolateZoom} from \"./zoom.js\";\nexport {default as interpolateRgb, rgbBasis as interpolateRgbBasis, rgbBasisClosed as interpolateRgbBasisClosed} from \"./rgb.js\";\nexport {default as interpolateHsl, hslLong as interpolateHslLong} from \"./hsl.js\";\nexport {default as interpolateLab} from \"./lab.js\";\nexport {default as interpolateHcl, hclLong as interpolateHclLong} from \"./hcl.js\";\nexport {default as interpolateCubehelix, cubehelixLong as interpolateCubehelixLong} from \"./cubehelix.js\";\nexport {default as piecewise} from \"./piecewise.js\";\nexport {default as quantize} from \"./quantize.js\";\n",null,null,null,null,null,null,null,null,null,null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n",null,"var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|Z|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nvar twoDigitsOptional = \"[1-9]\\\\d?\";\nvar twoDigits = \"\\\\d\\\\d\";\nvar threeDigits = \"\\\\d{3}\";\nvar fourDigits = \"\\\\d{4}\";\nvar word = \"[^\\\\s]+\";\nvar literal = /\\[([^]*?)\\]/gm;\nfunction shorten(arr, sLen) {\n    var newArr = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n        newArr.push(arr[i].substr(0, sLen));\n    }\n    return newArr;\n}\nvar monthUpdate = function (arrName) { return function (v, i18n) {\n    var lowerCaseArr = i18n[arrName].map(function (v) { return v.toLowerCase(); });\n    var index = lowerCaseArr.indexOf(v.toLowerCase());\n    if (index > -1) {\n        return index;\n    }\n    return null;\n}; };\nfunction assign(origObj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n        var obj = args_1[_a];\n        for (var key in obj) {\n            // @ts-ignore ex\n            origObj[key] = obj[key];\n        }\n    }\n    return origObj;\n}\nvar dayNames = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n];\nvar monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n];\nvar monthNamesShort = shorten(monthNames, 3);\nvar dayNamesShort = shorten(dayNames, 3);\nvar defaultI18n = {\n    dayNamesShort: dayNamesShort,\n    dayNames: dayNames,\n    monthNamesShort: monthNamesShort,\n    monthNames: monthNames,\n    amPm: [\"am\", \"pm\"],\n    DoFn: function (dayOfMonth) {\n        return (dayOfMonth +\n            [\"th\", \"st\", \"nd\", \"rd\"][dayOfMonth % 10 > 3\n                ? 0\n                : ((dayOfMonth - (dayOfMonth % 10) !== 10 ? 1 : 0) * dayOfMonth) % 10]);\n    }\n};\nvar globalI18n = assign({}, defaultI18n);\nvar setGlobalDateI18n = function (i18n) {\n    return (globalI18n = assign(globalI18n, i18n));\n};\nvar regexEscape = function (str) {\n    return str.replace(/[|\\\\{()[^$+*?.-]/g, \"\\\\$&\");\n};\nvar pad = function (val, len) {\n    if (len === void 0) { len = 2; }\n    val = String(val);\n    while (val.length < len) {\n        val = \"0\" + val;\n    }\n    return val;\n};\nvar formatFlags = {\n    D: function (dateObj) { return String(dateObj.getDate()); },\n    DD: function (dateObj) { return pad(dateObj.getDate()); },\n    Do: function (dateObj, i18n) {\n        return i18n.DoFn(dateObj.getDate());\n    },\n    d: function (dateObj) { return String(dateObj.getDay()); },\n    dd: function (dateObj) { return pad(dateObj.getDay()); },\n    ddd: function (dateObj, i18n) {\n        return i18n.dayNamesShort[dateObj.getDay()];\n    },\n    dddd: function (dateObj, i18n) {\n        return i18n.dayNames[dateObj.getDay()];\n    },\n    M: function (dateObj) { return String(dateObj.getMonth() + 1); },\n    MM: function (dateObj) { return pad(dateObj.getMonth() + 1); },\n    MMM: function (dateObj, i18n) {\n        return i18n.monthNamesShort[dateObj.getMonth()];\n    },\n    MMMM: function (dateObj, i18n) {\n        return i18n.monthNames[dateObj.getMonth()];\n    },\n    YY: function (dateObj) {\n        return pad(String(dateObj.getFullYear()), 4).substr(2);\n    },\n    YYYY: function (dateObj) { return pad(dateObj.getFullYear(), 4); },\n    h: function (dateObj) { return String(dateObj.getHours() % 12 || 12); },\n    hh: function (dateObj) { return pad(dateObj.getHours() % 12 || 12); },\n    H: function (dateObj) { return String(dateObj.getHours()); },\n    HH: function (dateObj) { return pad(dateObj.getHours()); },\n    m: function (dateObj) { return String(dateObj.getMinutes()); },\n    mm: function (dateObj) { return pad(dateObj.getMinutes()); },\n    s: function (dateObj) { return String(dateObj.getSeconds()); },\n    ss: function (dateObj) { return pad(dateObj.getSeconds()); },\n    S: function (dateObj) {\n        return String(Math.round(dateObj.getMilliseconds() / 100));\n    },\n    SS: function (dateObj) {\n        return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n    },\n    SSS: function (dateObj) { return pad(dateObj.getMilliseconds(), 3); },\n    a: function (dateObj, i18n) {\n        return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n    },\n    A: function (dateObj, i18n) {\n        return dateObj.getHours() < 12\n            ? i18n.amPm[0].toUpperCase()\n            : i18n.amPm[1].toUpperCase();\n    },\n    ZZ: function (dateObj) {\n        var offset = dateObj.getTimezoneOffset();\n        return ((offset > 0 ? \"-\" : \"+\") +\n            pad(Math.floor(Math.abs(offset) / 60) * 100 + (Math.abs(offset) % 60), 4));\n    },\n    Z: function (dateObj) {\n        var offset = dateObj.getTimezoneOffset();\n        return ((offset > 0 ? \"-\" : \"+\") +\n            pad(Math.floor(Math.abs(offset) / 60), 2) +\n            \":\" +\n            pad(Math.abs(offset) % 60, 2));\n    }\n};\nvar monthParse = function (v) { return +v - 1; };\nvar emptyDigits = [null, twoDigitsOptional];\nvar emptyWord = [null, word];\nvar amPm = [\n    \"isPm\",\n    word,\n    function (v, i18n) {\n        var val = v.toLowerCase();\n        if (val === i18n.amPm[0]) {\n            return 0;\n        }\n        else if (val === i18n.amPm[1]) {\n            return 1;\n        }\n        return null;\n    }\n];\nvar timezoneOffset = [\n    \"timezoneOffset\",\n    \"[^\\\\s]*?[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d|[^\\\\s]*?Z?\",\n    function (v) {\n        var parts = (v + \"\").match(/([+-]|\\d\\d)/gi);\n        if (parts) {\n            var minutes = +parts[1] * 60 + parseInt(parts[2], 10);\n            return parts[0] === \"+\" ? minutes : -minutes;\n        }\n        return 0;\n    }\n];\nvar parseFlags = {\n    D: [\"day\", twoDigitsOptional],\n    DD: [\"day\", twoDigits],\n    Do: [\"day\", twoDigitsOptional + word, function (v) { return parseInt(v, 10); }],\n    M: [\"month\", twoDigitsOptional, monthParse],\n    MM: [\"month\", twoDigits, monthParse],\n    YY: [\n        \"year\",\n        twoDigits,\n        function (v) {\n            var now = new Date();\n            var cent = +(\"\" + now.getFullYear()).substr(0, 2);\n            return +(\"\" + (+v > 68 ? cent - 1 : cent) + v);\n        }\n    ],\n    h: [\"hour\", twoDigitsOptional, undefined, \"isPm\"],\n    hh: [\"hour\", twoDigits, undefined, \"isPm\"],\n    H: [\"hour\", twoDigitsOptional],\n    HH: [\"hour\", twoDigits],\n    m: [\"minute\", twoDigitsOptional],\n    mm: [\"minute\", twoDigits],\n    s: [\"second\", twoDigitsOptional],\n    ss: [\"second\", twoDigits],\n    YYYY: [\"year\", fourDigits],\n    S: [\"millisecond\", \"\\\\d\", function (v) { return +v * 100; }],\n    SS: [\"millisecond\", twoDigits, function (v) { return +v * 10; }],\n    SSS: [\"millisecond\", threeDigits],\n    d: emptyDigits,\n    dd: emptyDigits,\n    ddd: emptyWord,\n    dddd: emptyWord,\n    MMM: [\"month\", word, monthUpdate(\"monthNamesShort\")],\n    MMMM: [\"month\", word, monthUpdate(\"monthNames\")],\n    a: amPm,\n    A: amPm,\n    ZZ: timezoneOffset,\n    Z: timezoneOffset\n};\n// Some common format strings\nvar globalMasks = {\n    default: \"ddd MMM DD YYYY HH:mm:ss\",\n    shortDate: \"M/D/YY\",\n    mediumDate: \"MMM D, YYYY\",\n    longDate: \"MMMM D, YYYY\",\n    fullDate: \"dddd, MMMM D, YYYY\",\n    isoDate: \"YYYY-MM-DD\",\n    isoDateTime: \"YYYY-MM-DDTHH:mm:ssZ\",\n    shortTime: \"HH:mm\",\n    mediumTime: \"HH:mm:ss\",\n    longTime: \"HH:mm:ss.SSS\"\n};\nvar setGlobalDateMasks = function (masks) { return assign(globalMasks, masks); };\n/***\n * Format a date\n * @method format\n * @param {Date|number} dateObj\n * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n * @returns {string} Formatted date string\n */\nvar format = function (dateObj, mask, i18n) {\n    if (mask === void 0) { mask = globalMasks[\"default\"]; }\n    if (i18n === void 0) { i18n = {}; }\n    if (typeof dateObj === \"number\") {\n        dateObj = new Date(dateObj);\n    }\n    if (Object.prototype.toString.call(dateObj) !== \"[object Date]\" ||\n        isNaN(dateObj.getTime())) {\n        throw new Error(\"Invalid Date pass to format\");\n    }\n    mask = globalMasks[mask] || mask;\n    var literals = [];\n    // Make literals inactive by replacing them with @@@\n    mask = mask.replace(literal, function ($0, $1) {\n        literals.push($1);\n        return \"@@@\";\n    });\n    var combinedI18nSettings = assign(assign({}, globalI18n), i18n);\n    // Apply formatting rules\n    mask = mask.replace(token, function ($0) {\n        return formatFlags[$0](dateObj, combinedI18nSettings);\n    });\n    // Inline literal values back into the formatted value\n    return mask.replace(/@@@/g, function () { return literals.shift(); });\n};\n/**\n * Parse a date string into a Javascript Date object /\n * @method parse\n * @param {string} dateStr Date string\n * @param {string} format Date parse format\n * @param {i18n} I18nSettingsOptional Full or subset of I18N settings\n * @returns {Date|null} Returns Date object. Returns null what date string is invalid or doesn't match format\n */\nfunction parse(dateStr, format, i18n) {\n    if (i18n === void 0) { i18n = {}; }\n    if (typeof format !== \"string\") {\n        throw new Error(\"Invalid format in fecha parse\");\n    }\n    // Check to see if the format is actually a mask\n    format = globalMasks[format] || format;\n    // Avoid regular expression denial of service, fail early for really long strings\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n    if (dateStr.length > 1000) {\n        return null;\n    }\n    // Default to the beginning of the year.\n    var today = new Date();\n    var dateInfo = {\n        year: today.getFullYear(),\n        month: 0,\n        day: 1,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0,\n        isPm: null,\n        timezoneOffset: null\n    };\n    var parseInfo = [];\n    var literals = [];\n    // Replace all the literals with @@@. Hopefully a string that won't exist in the format\n    var newFormat = format.replace(literal, function ($0, $1) {\n        literals.push(regexEscape($1));\n        return \"@@@\";\n    });\n    var specifiedFields = {};\n    var requiredFields = {};\n    // Change every token that we find into the correct regex\n    newFormat = regexEscape(newFormat).replace(token, function ($0) {\n        var info = parseFlags[$0];\n        var field = info[0], regex = info[1], requiredField = info[3];\n        // Check if the person has specified the same field twice. This will lead to confusing results.\n        if (specifiedFields[field]) {\n            throw new Error(\"Invalid format. \" + field + \" specified twice in format\");\n        }\n        specifiedFields[field] = true;\n        // Check if there are any required fields. For instance, 12 hour time requires AM/PM specified\n        if (requiredField) {\n            requiredFields[requiredField] = true;\n        }\n        parseInfo.push(info);\n        return \"(\" + regex + \")\";\n    });\n    // Check all the required fields are present\n    Object.keys(requiredFields).forEach(function (field) {\n        if (!specifiedFields[field]) {\n            throw new Error(\"Invalid format. \" + field + \" is required in specified format\");\n        }\n    });\n    // Add back all the literals after\n    newFormat = newFormat.replace(/@@@/g, function () { return literals.shift(); });\n    // Check if the date string matches the format. If it doesn't return null\n    var matches = dateStr.match(new RegExp(newFormat, \"i\"));\n    if (!matches) {\n        return null;\n    }\n    var combinedI18nSettings = assign(assign({}, globalI18n), i18n);\n    // For each match, call the parser function for that date part\n    for (var i = 1; i < matches.length; i++) {\n        var _a = parseInfo[i - 1], field = _a[0], parser = _a[2];\n        var value = parser\n            ? parser(matches[i], combinedI18nSettings)\n            : +matches[i];\n        // If the parser can't make sense of the value, return null\n        if (value == null) {\n            return null;\n        }\n        dateInfo[field] = value;\n    }\n    if (dateInfo.isPm === 1 && dateInfo.hour != null && +dateInfo.hour !== 12) {\n        dateInfo.hour = +dateInfo.hour + 12;\n    }\n    else if (dateInfo.isPm === 0 && +dateInfo.hour === 12) {\n        dateInfo.hour = 0;\n    }\n    var dateWithoutTZ = new Date(dateInfo.year, dateInfo.month, dateInfo.day, dateInfo.hour, dateInfo.minute, dateInfo.second, dateInfo.millisecond);\n    var validateFields = [\n        [\"month\", \"getMonth\"],\n        [\"day\", \"getDate\"],\n        [\"hour\", \"getHours\"],\n        [\"minute\", \"getMinutes\"],\n        [\"second\", \"getSeconds\"]\n    ];\n    for (var i = 0, len = validateFields.length; i < len; i++) {\n        // Check to make sure the date field is within the allowed range. Javascript dates allows values\n        // outside the allowed range. If the values don't match the value was invalid\n        if (specifiedFields[validateFields[i][0]] &&\n            dateInfo[validateFields[i][0]] !== dateWithoutTZ[validateFields[i][1]]()) {\n            return null;\n        }\n    }\n    if (dateInfo.timezoneOffset == null) {\n        return dateWithoutTZ;\n    }\n    return new Date(Date.UTC(dateInfo.year, dateInfo.month, dateInfo.day, dateInfo.hour, dateInfo.minute - dateInfo.timezoneOffset, dateInfo.second, dateInfo.millisecond));\n}\nvar fecha = {\n    format: format,\n    parse: parse,\n    defaultI18n: defaultI18n,\n    setGlobalDateI18n: setGlobalDateI18n,\n    setGlobalDateMasks: setGlobalDateMasks\n};\n\nexport default fecha;\nexport { assign, format, parse, defaultI18n, setGlobalDateI18n, setGlobalDateMasks };\n\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import * as TOOLTIP_CSS_CONST from '@antv/component/lib/tooltip/css-const';\nimport { ext } from '@antv/matrix-util';\nimport { deepMix } from '@antv/util';\nimport Element from '../geometry/element';\nimport { LooseObject, StyleSheet } from '../interface';\nimport { getAngle } from '../util/graphics';\n\n/**\n * 根据主题样式表生成主题结构\n * @param styleSheet 主题样式表\n */\nexport function createThemeByStylesheet(styleSheet: StyleSheet): LooseObject {\n  const shapeStyles = {\n    point: {\n      default: {\n        fill: styleSheet.pointFillColor,\n        r: styleSheet.pointSize,\n        stroke: styleSheet.pointBorderColor,\n        lineWidth: styleSheet.pointBorder,\n        fillOpacity: styleSheet.pointFillOpacity,\n      },\n      active: {\n        stroke: styleSheet.pointActiveBorderColor,\n        lineWidth: styleSheet.pointActiveBorder,\n      },\n      selected: {\n        stroke: styleSheet.pointSelectedBorderColor,\n        lineWidth: styleSheet.pointSelectedBorder,\n      },\n      inactive: {\n        fillOpacity: styleSheet.pointInactiveFillOpacity,\n        strokeOpacity: styleSheet.pointInactiveBorderOpacity,\n      },\n    },\n    hollowPoint: {\n      default: {\n        fill: styleSheet.hollowPointFillColor,\n        lineWidth: styleSheet.hollowPointBorder,\n        stroke: styleSheet.hollowPointBorderColor,\n        strokeOpacity: styleSheet.hollowPointBorderOpacity,\n        r: styleSheet.hollowPointSize,\n      },\n      active: {\n        stroke: styleSheet.hollowPointActiveBorderColor,\n        strokeOpacity: styleSheet.hollowPointActiveBorderOpacity,\n      },\n      selected: {\n        lineWidth: styleSheet.hollowPointSelectedBorder,\n        stroke: styleSheet.hollowPointSelectedBorderColor,\n        strokeOpacity: styleSheet.hollowPointSelectedBorderOpacity,\n      },\n      inactive: {\n        strokeOpacity: styleSheet.hollowPointInactiveBorderOpacity,\n      },\n    },\n    area: {\n      default: {\n        fill: styleSheet.areaFillColor,\n        fillOpacity: styleSheet.areaFillOpacity,\n        stroke: null,\n      },\n      active: {\n        fillOpacity: styleSheet.areaActiveFillOpacity,\n      },\n      selected: {\n        fillOpacity: styleSheet.areaSelectedFillOpacity,\n      },\n      inactive: {\n        fillOpacity: styleSheet.areaInactiveFillOpacity,\n      },\n    },\n    hollowArea: {\n      default: {\n        fill: null,\n        stroke: styleSheet.hollowAreaBorderColor,\n        lineWidth: styleSheet.hollowAreaBorder,\n        strokeOpacity: styleSheet.hollowAreaBorderOpacity,\n      },\n      active: {\n        fill: null,\n        lineWidth: styleSheet.hollowAreaActiveBorder,\n      },\n      selected: {\n        fill: null,\n        lineWidth: styleSheet.hollowAreaSelectedBorder,\n      },\n      inactive: {\n        strokeOpacity: styleSheet.hollowAreaInactiveBorderOpacity,\n      },\n    },\n    interval: {\n      default: {\n        fill: styleSheet.intervalFillColor,\n        fillOpacity: styleSheet.intervalFillOpacity,\n      },\n      active: {\n        stroke: styleSheet.intervalActiveBorderColor,\n        lineWidth: styleSheet.intervalActiveBorder,\n      },\n      selected: {\n        stroke: styleSheet.intervalSelectedBorderColor,\n        lineWidth: styleSheet.intervalSelectedBorder,\n      },\n      inactive: {\n        fillOpacity: styleSheet.intervalInactiveFillOpacity,\n        strokeOpacity: styleSheet.intervalInactiveBorderOpacity,\n      },\n    },\n    hollowInterval: {\n      default: {\n        fill: styleSheet.hollowIntervalFillColor,\n        stroke: styleSheet.hollowIntervalBorderColor,\n        lineWidth: styleSheet.hollowIntervalBorder,\n        strokeOpacity: styleSheet.hollowIntervalBorderOpacity,\n      },\n      active: {\n        stroke: styleSheet.hollowIntervalActiveBorderColor,\n        lineWidth: styleSheet.hollowIntervalActiveBorder,\n        strokeOpacity: styleSheet.hollowIntervalActiveBorderOpacity,\n      },\n      selected: {\n        stroke: styleSheet.hollowIntervalSelectedBorderColor,\n        lineWidth: styleSheet.hollowIntervalSelectedBorder,\n        strokeOpacity: styleSheet.hollowIntervalSelectedBorderOpacity,\n      },\n      inactive: {\n        stroke: styleSheet.hollowIntervalInactiveBorderColor,\n        lineWidth: styleSheet.hollowIntervalInactiveBorder,\n        strokeOpacity: styleSheet.hollowIntervalInactiveBorderOpacity,\n      },\n    },\n    line: {\n      default: {\n        stroke: styleSheet.lineBorderColor,\n        lineWidth: styleSheet.lineBorder,\n        strokeOpacity: styleSheet.lineBorderOpacity,\n        fill: null,\n        lineAppendWidth: 10,\n      },\n      active: {\n        lineWidth: styleSheet.lineActiveBorder,\n      },\n      selected: {\n        lineWidth: styleSheet.lineSelectedBorder,\n      },\n      inactive: {\n        strokeOpacity: styleSheet.lineInactiveBorderOpacity,\n      },\n    },\n  };\n  const axisStyles = {\n    title: {\n      autoRotate: true,\n      position: 'center', // start, center, end\n      style: {\n        fill: styleSheet.axisTitleTextFillColor,\n        fontSize: styleSheet.axisTitleTextFontSize,\n        lineHeight: styleSheet.axisTitleTextLineHeight,\n        textBaseline: 'middle',\n        fontFamily: styleSheet.fontFamily,\n      },\n    },\n    label: {\n      autoRotate: true,\n      autoEllipsis: true,\n      autoHide: true,\n      offset: 16,\n      style: {\n        fill: styleSheet.axisLabelFillColor,\n        fontSize: styleSheet.axisLabelFontSize,\n        lineHeight: styleSheet.axisLabelLineHeight,\n        textBaseline: 'middle',\n        fontFamily: styleSheet.fontFamily,\n      },\n    },\n    line: {\n      style: {\n        lineWidth: styleSheet.axisLineBorder,\n        stroke: styleSheet.axisLineBorderColor,\n      },\n    },\n    tickLine: {\n      style: {\n        lineWidth: styleSheet.axisTickLineBorder,\n        stroke: styleSheet.axisTickLineBorderColor,\n      },\n      alignTick: true, // 默认刻度线和文本对齐\n      length: styleSheet.axisTickLineLength,\n    },\n    subTickLine: null,\n    animate: true,\n  };\n  const axisGridStyles = {\n    line: {\n      type: 'line',\n      style: {\n        stroke: styleSheet.axisGridBorderColor,\n        lineWidth: styleSheet.axisGridBorder,\n        lineDash: styleSheet.axisGridLineDash,\n      },\n    },\n    alignTick: true,\n    animate: true,\n  };\n  const legendStyles = {\n    title: null,\n    marker: {\n      symbol: 'circle',\n      style: {\n        r: styleSheet.legendCircleMarkerSize,\n        fill: styleSheet.legendMarkerColor,\n      },\n    },\n    itemName: {\n      spacing: 5, // 如果右边有 value 使用这个间距\n      style: {\n        fill: styleSheet.legendItemNameFillColor,\n        fontFamily: styleSheet.fontFamily,\n        fontSize: styleSheet.legendItemNameFontSize,\n        lineHeight: styleSheet.legendItemNameLineHeight,\n        fontWeight: styleSheet.legendItemNameFontWeight,\n        textAlign: 'start',\n        textBaseline: 'middle',\n      },\n    },\n    flipPage: true,\n    animate: false,\n    maxItemWidth: 0.2,\n  };\n\n  return {\n    background: styleSheet.backgroundColor,\n    defaultColor: styleSheet.brandColor,\n    padding: 'auto',\n    fontFamily: styleSheet.fontFamily,\n    /** 一般柱状图宽度占比 */\n    columnWidthRatio: 1 / 2,\n    /** 柱状图最大宽度 */\n    maxColumnWidth: null,\n    /** 柱状图最小宽度 */\n    minColumnWidth: null,\n    /** 玫瑰图占比 */\n    roseWidthRatio: 0.9999999,\n    /** 多层饼图/环图占比 */\n    multiplePieWidthRatio: 1 / 1.3,\n    colors10: styleSheet.paletteQualitative10,\n    colors20: styleSheet.paletteQualitative20,\n    shapes: {\n      point: [\n        'hollow-circle',\n        'hollow-square',\n        'hollow-bowtie',\n        'hollow-diamond',\n        'hollow-hexagon',\n        'hollow-triangle',\n        'hollow-triangle-down',\n        'circle',\n        'square',\n        'bowtie',\n        'diamond',\n        'hexagon',\n        'triangle',\n        'triangle-down',\n        'cross',\n        'tick',\n        'plus',\n        'hyphen',\n        'line',\n      ],\n      line: ['line', 'dash', 'dot', 'smooth'],\n      area: ['area', 'smooth', 'line', 'smooth-line'],\n      interval: ['rect', 'hollow-rect', 'line', 'tick'],\n    },\n    sizes: [1, 10],\n    geometries: {\n      interval: {\n        rect: {\n          default: {\n            style: shapeStyles.interval.default,\n          },\n          active: {\n            style: shapeStyles.interval.active,\n          },\n          inactive: {\n            style: shapeStyles.interval.inactive,\n          },\n          selected: {\n            style: (element: Element) => {\n              const coordinate = element.geometry.coordinate;\n              if (coordinate.isPolar && coordinate.isTransposed) {\n                const { startAngle, endAngle } = getAngle(element.getModel(), coordinate);\n                const middleAngle = (startAngle + endAngle) / 2;\n                const r = 7.5;\n                const x = r * Math.cos(middleAngle);\n                const y = r * Math.sin(middleAngle);\n                return {\n                  matrix: ext.transform(null, [['t', x, y]]),\n                };\n              }\n              return shapeStyles.interval.selected;\n            },\n          },\n        },\n        'hollow-rect': {\n          default: {\n            style: shapeStyles.hollowInterval.default,\n          },\n          active: {\n            style: shapeStyles.hollowInterval.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowInterval.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowInterval.selected,\n          },\n        },\n        line: {\n          default: {\n            style: shapeStyles.hollowInterval.default,\n          },\n          active: {\n            style: shapeStyles.hollowInterval.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowInterval.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowInterval.selected,\n          },\n        },\n        tick: {\n          default: {\n            style: shapeStyles.hollowInterval.default,\n          },\n          active: {\n            style: shapeStyles.hollowInterval.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowInterval.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowInterval.selected,\n          },\n        },\n        funnel: {\n          default: {\n            style: shapeStyles.interval.default,\n          },\n          active: {\n            style: shapeStyles.interval.active,\n          },\n          inactive: {\n            style: shapeStyles.interval.inactive,\n          },\n          selected: {\n            style: shapeStyles.interval.selected,\n          },\n        },\n        pyramid: {\n          default: {\n            style: shapeStyles.interval.default,\n          },\n          active: {\n            style: shapeStyles.interval.active,\n          },\n          inactive: {\n            style: shapeStyles.interval.inactive,\n          },\n          selected: {\n            style: shapeStyles.interval.selected,\n          },\n        },\n      },\n      line: {\n        line: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        dot: {\n          default: {\n            style: {\n              ...shapeStyles.line.default,\n              lineDash: [1, 1],\n            },\n          },\n          active: {\n            style: {\n              ...shapeStyles.line.active,\n              lineDash: [1, 1],\n            },\n          },\n          inactive: {\n            style: {\n              ...shapeStyles.line.inactive,\n              lineDash: [1, 1],\n            },\n          },\n          selected: {\n            style: {\n              ...shapeStyles.line.selected,\n              lineDash: [1, 1],\n            },\n          },\n        },\n        dash: {\n          default: {\n            style: {\n              ...shapeStyles.line.default,\n              lineDash: [5.5, 1],\n            },\n          },\n          active: {\n            style: {\n              ...shapeStyles.line.active,\n              lineDash: [5.5, 1],\n            },\n          },\n          inactive: {\n            style: {\n              ...shapeStyles.line.inactive,\n              lineDash: [5.5, 1],\n            },\n          },\n          selected: {\n            style: {\n              ...shapeStyles.line.selected,\n              lineDash: [5.5, 1],\n            },\n          },\n        },\n        smooth: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        hv: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        vh: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        hvh: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        vhv: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n      },\n      polygon: {\n        polygon: {\n          default: {\n            style: shapeStyles.interval.default,\n          },\n          active: {\n            style: shapeStyles.interval.active,\n          },\n          inactive: {\n            style: shapeStyles.interval.inactive,\n          },\n          selected: {\n            style: shapeStyles.interval.selected,\n          },\n        },\n      },\n      point: {\n        circle: {\n          default: {\n            style: shapeStyles.point.default,\n          },\n          active: {\n            style: shapeStyles.point.active,\n          },\n          inactive: {\n            style: shapeStyles.point.inactive,\n          },\n          selected: {\n            style: shapeStyles.point.selected,\n          },\n        },\n        square: {\n          default: {\n            style: shapeStyles.point.default,\n          },\n          active: {\n            style: shapeStyles.point.active,\n          },\n          inactive: {\n            style: shapeStyles.point.inactive,\n          },\n          selected: {\n            style: shapeStyles.point.selected,\n          },\n        },\n        bowtie: {\n          default: {\n            style: shapeStyles.point.default,\n          },\n          active: {\n            style: shapeStyles.point.active,\n          },\n          inactive: {\n            style: shapeStyles.point.inactive,\n          },\n          selected: {\n            style: shapeStyles.point.selected,\n          },\n        },\n        diamond: {\n          default: {\n            style: shapeStyles.point.default,\n          },\n          active: {\n            style: shapeStyles.point.active,\n          },\n          inactive: {\n            style: shapeStyles.point.inactive,\n          },\n          selected: {\n            style: shapeStyles.point.selected,\n          },\n        },\n        hexagon: {\n          default: {\n            style: shapeStyles.point.default,\n          },\n          active: {\n            style: shapeStyles.point.active,\n          },\n          inactive: {\n            style: shapeStyles.point.inactive,\n          },\n          selected: {\n            style: shapeStyles.point.selected,\n          },\n        },\n        triangle: {\n          default: {\n            style: shapeStyles.point.default,\n          },\n          active: {\n            style: shapeStyles.point.active,\n          },\n          inactive: {\n            style: shapeStyles.point.inactive,\n          },\n          selected: {\n            style: shapeStyles.point.selected,\n          },\n        },\n        'triangle-down': {\n          default: {\n            style: shapeStyles.point.default,\n          },\n          active: {\n            style: shapeStyles.point.active,\n          },\n          inactive: {\n            style: shapeStyles.point.inactive,\n          },\n          selected: {\n            style: shapeStyles.point.selected,\n          },\n        },\n        'hollow-circle': {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        'hollow-square': {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        'hollow-bowtie': {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        'hollow-diamond': {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        'hollow-hexagon': {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        'hollow-triangle': {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        'hollow-triangle-down': {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        cross: {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        tick: {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        plus: {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        hyphen: {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n        line: {\n          default: {\n            style: shapeStyles.hollowPoint.default,\n          },\n          active: {\n            style: shapeStyles.hollowPoint.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowPoint.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowPoint.selected,\n          },\n        },\n      },\n      area: {\n        area: {\n          default: {\n            style: shapeStyles.area.default,\n          },\n          active: {\n            style: shapeStyles.area.active,\n          },\n          inactive: {\n            style: shapeStyles.area.inactive,\n          },\n          selected: {\n            style: shapeStyles.area.selected,\n          },\n        },\n        smooth: {\n          default: {\n            style: shapeStyles.area.default,\n          },\n          active: {\n            style: shapeStyles.area.active,\n          },\n          inactive: {\n            style: shapeStyles.area.inactive,\n          },\n          selected: {\n            style: shapeStyles.area.selected,\n          },\n        },\n        line: {\n          default: {\n            style: shapeStyles.hollowArea.default,\n          },\n          active: {\n            style: shapeStyles.hollowArea.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowArea.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowArea.selected,\n          },\n        },\n        'smooth-line': {\n          default: {\n            style: shapeStyles.hollowArea.default,\n          },\n          active: {\n            style: shapeStyles.hollowArea.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowArea.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowArea.selected,\n          },\n        },\n      },\n      schema: {\n        candle: {\n          default: {\n            style: shapeStyles.hollowInterval.default,\n          },\n          active: {\n            style: shapeStyles.hollowInterval.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowInterval.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowInterval.selected,\n          },\n        },\n        box: {\n          default: {\n            style: shapeStyles.hollowInterval.default,\n          },\n          active: {\n            style: shapeStyles.hollowInterval.active,\n          },\n          inactive: {\n            style: shapeStyles.hollowInterval.inactive,\n          },\n          selected: {\n            style: shapeStyles.hollowInterval.selected,\n          },\n        },\n      },\n      edge: {\n        line: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        vhv: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        smooth: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n        arc: {\n          default: {\n            style: shapeStyles.line.default,\n          },\n          active: {\n            style: shapeStyles.line.active,\n          },\n          inactive: {\n            style: shapeStyles.line.inactive,\n          },\n          selected: {\n            style: shapeStyles.line.selected,\n          },\n        },\n      },\n    },\n    components: {\n      axis: {\n        top: deepMix({}, axisStyles, {\n          position: 'top',\n          grid: null,\n          title: null,\n          verticalLimitLength: 1 / 2,\n        }),\n        bottom: deepMix({}, axisStyles, {\n          position: 'bottom',\n          grid: null,\n          title: null,\n          verticalLimitLength: 1 / 2,\n        }),\n        left: deepMix({}, axisStyles, {\n          position: 'left',\n          label: {\n            offset: 8,\n          },\n          title: null,\n          line: null,\n          tickLine: null,\n          grid: axisGridStyles,\n          verticalLimitLength: 1 / 3,\n        }),\n        right: deepMix({}, axisStyles, {\n          position: 'right',\n          label: {\n            offset: 8,\n          },\n          title: null,\n          line: null,\n          tickLine: null,\n          grid: axisGridStyles,\n          verticalLimitLength: 1 / 3,\n        }),\n        circle: deepMix({}, axisStyles, {\n          title: null,\n          label: {\n            offset: 8,\n          },\n          grid: deepMix({}, axisGridStyles, { line: { type: 'line' } }),\n        }),\n        radius: deepMix({}, axisStyles, {\n          title: null,\n          label: {\n            offset: 8,\n          },\n          grid: deepMix({}, axisGridStyles, { line: { type: 'circle' } }),\n        }),\n      },\n      legend: {\n        right: deepMix({}, legendStyles, {\n          layout: 'vertical',\n        }),\n        left: deepMix({}, legendStyles, {\n          layout: 'vertical',\n        }),\n        top: deepMix({}, legendStyles, {\n          layout: 'horizontal',\n        }),\n        bottom: deepMix({}, legendStyles, {\n          layout: 'horizontal',\n        }),\n        continuous: {\n          title: null,\n          background: null,\n          track: {},\n          rail: {\n            type: 'color',\n            size: styleSheet.sliderRailHeight,\n            defaultLength: styleSheet.sliderRailWidth,\n            style: {\n              fill: styleSheet.sliderRailFillColor,\n              stroke: styleSheet.sliderRailBorderColor,\n              lineWidth: styleSheet.sliderRailBorder,\n            },\n          },\n          label: {\n            align: 'rail',\n            spacing: 4, // 文本和 rail 的间距\n            formatter: null,\n            style: {\n              fill: styleSheet.sliderLabelTextFillColor,\n              fontSize: styleSheet.sliderLabelTextFontSize,\n              lineHeight: styleSheet.sliderLabelTextLineHeight,\n              textBaseline: 'middle',\n              fontFamily: styleSheet.fontFamily,\n            },\n          },\n          handler: {\n            size: styleSheet.sliderHandlerWidth,\n            style: {\n              fill: styleSheet.sliderHandlerFillColor,\n              stroke: styleSheet.sliderHandlerBorderColor,\n            },\n          },\n          slidable: true,\n        },\n        // 图例与四条边之间的间距\n        margin: [0, 0, 0, 0],\n      },\n      tooltip: {\n        showContent: true,\n        follow: true,\n        showCrosshairs: false,\n        showMarkers: true,\n        shared: false,\n        enterable: false,\n        position: 'auto',\n        marker: {\n          symbol: 'circle',\n          stroke: '#fff',\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowOffSetY: 0,\n          shadowColor: 'rgba(0,0,0,0.09)',\n          lineWidth: 2,\n          r: 4,\n        },\n        crosshairs: {\n          line: {\n            style: {\n              stroke: styleSheet.tooltipCrosshairsBorderColor,\n              lineWidth: styleSheet.tooltipCrosshairsBorder,\n            },\n          },\n          text: null,\n          textBackground: {\n            padding: 2,\n            style: {\n              fill: 'rgba(0, 0, 0, 0.25)',\n              lineWidth: 0,\n              stroke: null,\n            },\n          },\n          follow: false,\n        },\n        // tooltip dom 样式\n        domStyles: {\n          [`${TOOLTIP_CSS_CONST.CONTAINER_CLASS}`]: {\n            position: 'absolute',\n            visibility: 'hidden',\n            zIndex: 8,\n            transition: 'left 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s, top 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s',\n            backgroundColor: styleSheet.tooltipContainerFillColor,\n            opacity: styleSheet.tooltipContainerFillOpacity,\n            boxShadow: styleSheet.tooltipContainerShadow,\n            borderRadius: `${styleSheet.tooltipContainerBorderRadius}px`,\n            color: styleSheet.tooltipTextFillColor,\n            fontSize: `${styleSheet.tooltipTextFontSize}px`,\n            fontFamily: styleSheet.fontFamily,\n            lineHeight: `${styleSheet.tooltipTextLineHeight}px`,\n            padding: '0 12px 0 12px',\n          },\n          [`${TOOLTIP_CSS_CONST.TITLE_CLASS}`]: {\n            marginBottom: '12px',\n            marginTop: '12px',\n          },\n          [`${TOOLTIP_CSS_CONST.LIST_CLASS}`]: {\n            margin: 0,\n            listStyleType: 'none',\n            padding: 0,\n          },\n          [`${TOOLTIP_CSS_CONST.LIST_ITEM_CLASS}`]: {\n            listStyleType: 'none',\n            padding: 0,\n            marginBottom: '12px',\n            marginTop: '12px',\n            marginLeft: 0,\n            marginRight: 0,\n          },\n          [`${TOOLTIP_CSS_CONST.MARKER_CLASS}`]: {\n            width: '8px',\n            height: '8px',\n            borderRadius: '50%',\n            display: 'inline-block',\n            marginRight: '8px',\n          },\n          [`${TOOLTIP_CSS_CONST.VALUE_CLASS}`]: {\n            display: 'inline-block',\n            float: 'right',\n            marginLeft: '30px',\n          },\n        },\n      },\n      annotation: {\n        arc: {\n          style: {\n            stroke: styleSheet.annotationArcBorderColor,\n            lineWidth: styleSheet.annotationArcBorder,\n          },\n          animate: true,\n        },\n        line: {\n          style: {\n            stroke: styleSheet.annotationLineBorderColor,\n            lineDash: styleSheet.annotationLineDash,\n            lineWidth: styleSheet.annotationLineBorder,\n          },\n          text: {\n            position: 'start',\n            autoRotate: true,\n            style: {\n              fill: styleSheet.annotationTextFillColor,\n              stroke: styleSheet.annotationTextBorderColor,\n              lineWidth: styleSheet.annotationTextBorder,\n              fontSize: styleSheet.annotationTextFontSize,\n              textAlign: 'start',\n              fontFamily: styleSheet.fontFamily,\n              textBaseline: 'bottom',\n            },\n          },\n          animate: true,\n        },\n        text: {\n          style: {\n            fill: styleSheet.annotationTextFillColor,\n            stroke: styleSheet.annotationTextBorderColor,\n            lineWidth: styleSheet.annotationTextBorder,\n            fontSize: styleSheet.annotationTextFontSize,\n            textBaseline: 'middle',\n            textAlign: 'start',\n            fontFamily: styleSheet.fontFamily,\n          },\n          animate: true,\n        },\n        region: {\n          top: false,\n          style: {\n            lineWidth: styleSheet.annotationRegionBorder,\n            stroke: styleSheet.annotationRegionBorderColor,\n            fill: styleSheet.annotationRegionFillColor,\n            fillOpacity: styleSheet.annotationRegionFillOpacity,\n          }, // 辅助框的图形样式属性\n          animate: true,\n        },\n        image: {\n          top: false,\n          animate: true,\n        },\n        dataMarker: {\n          top: true,\n          point: {\n            style: {\n              r: 3,\n              stroke: styleSheet.brandColor,\n              lineWidth: 2,\n            },\n          },\n          line: {\n            style: {\n              stroke: styleSheet.annotationLineBorderColor,\n              lineWidth: styleSheet.annotationLineBorder,\n            },\n            length: styleSheet.annotationDataMarkerLineLength,\n          },\n          text: {\n            style: {\n              textAlign: 'start',\n              fill: styleSheet.annotationTextFillColor,\n              stroke: styleSheet.annotationTextBorderColor,\n              lineWidth: styleSheet.annotationTextBorder,\n              fontSize: styleSheet.annotationTextFontSize,\n              fontFamily: styleSheet.fontFamily,\n            },\n          },\n          direction: 'upward',\n          autoAdjust: true,\n          animate: true,\n        },\n        dataRegion: {\n          style: {\n            region: {\n              fill: styleSheet.annotationRegionFillColor,\n              fillOpacity: styleSheet.annotationRegionFillOpacity,\n            },\n            text: {\n              textAlign: 'center',\n              textBaseline: 'bottom',\n              fill: styleSheet.annotationTextFillColor,\n              stroke: styleSheet.annotationTextBorderColor,\n              lineWidth: styleSheet.annotationTextBorder,\n              fontSize: styleSheet.annotationTextFontSize,\n              fontFamily: styleSheet.fontFamily,\n            },\n          },\n          animate: true,\n        },\n      },\n    },\n    labels: {\n      offset: 12,\n      style: {\n        fill: styleSheet.labelFillColor,\n        fontSize: styleSheet.labelFontSize,\n        fontFamily: styleSheet.fontFamily,\n        stroke: styleSheet.labelBorderColor,\n        lineWidth: styleSheet.labelBorder,\n      },\n      autoRotate: true,\n    },\n    innerLabels: {\n      style: {\n        fill: styleSheet.innerLabelFillColor,\n        fontSize: styleSheet.innerLabelFontSize,\n        fontFamily: styleSheet.fontFamily,\n        stroke: styleSheet.innerLabelBorderColor,\n        lineWidth: styleSheet.innerLabelBorder,\n      },\n      autoRotate: true,\n    },\n    pieLabels: {\n      labelHeight: 14,\n      offset: 30,\n      labelLine: {\n        style: {\n          lineWidth: styleSheet.labelLineBorder,\n        },\n      },\n      autoRotate: true,\n    },\n  };\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/* 依赖的模块，在这里统一引入，方便打包优化 */\n\n// G\nexport { ICanvas, IElement, IGroup, IShape } from '@antv/g-base/lib/interfaces';\nexport { PathCommand, BBox, Point, ShapeAttrs } from '@antv/g-base/lib/types';\nexport { Event, AbstractGroup, AbstractShape } from '@antv/g-base';\n// 需要有 G-base 提供 g engine 类型定义\nexport type IG = any;\n\n// adjust\nexport { registerAdjust, getAdjust, Adjust } from '@antv/adjust/lib/factory';\n\n// attr\nexport { getAttribute, Attribute } from '@antv/attr/lib/factory';\nexport { Color } from '@antv/attr';\n\n// coordinate\nexport { getCoordinate, registerCoordinate, Coordinate, CoordinateCfg } from '@antv/coord';\n\n// scale\nexport { getScale, registerScale, Scale, ScaleConfig } from '@antv/scale';\nexport { Tick } from '@antv/scale/lib/types';\n\n// component\nimport {\n  Annotation,\n  Axis,\n  Component,\n  Crosshair,\n  Grid,\n  GroupComponent,\n  HtmlComponent,\n  Legend,\n  Slider,\n  Tooltip,\n} from '@antv/component';\nexport { IComponent, IList } from '@antv/component/lib/interfaces';\nexport {\n  CategoryLegendCfg,\n  CircleAxisCfg,\n  LineAxisCfg,\n  GroupComponentCfg,\n  ListItem,\n  AxisLineCfg,\n  AxisTickLineCfg,\n  AxisSubTickLineCfg,\n  AxisTitleCfg,\n  AxisLabelCfg,\n  GridLineCfg,\n  LegendMarkerCfg,\n  LegendTitleCfg,\n  LegendBackgroundCfg,\n  LegendItemNameCfg,\n  LegendItemValueCfg,\n  ContinueLegendCfg,\n  ContinueLegendTrackCfg,\n  ContinueLegendRailCfg,\n  ContinueLegendLabelCfg,\n  ContinueLegendHandlerCfg,\n  CrosshairLineCfg,\n  CrosshairTextCfg,\n  CrosshairTextBackgroundCfg,\n  SliderCfg,\n  TrendCfg,\n  EnhancedTextCfg,\n  LineAnnotationTextCfg,\n} from '@antv/component/lib/types';\nexport { HtmlComponent, GroupComponent, Component, Crosshair };\nexport { Annotation };\n// axis\nconst { Line: LineAxis, Circle: CircleAxis } = Axis;\nexport { LineAxis, CircleAxis };\n// grid\nconst { Line: LineGrid, Circle: CircleGrid } = Grid;\nexport { LineGrid, CircleGrid };\n// legend\nconst { Category: CategoryLegend, Continuous: ContinuousLegend } = Legend;\nexport { CategoryLegend, ContinuousLegend };\n// Tooltip\nconst { Html: HtmlTooltip } = Tooltip;\nexport { HtmlTooltip };\n// Slider\nexport { Slider };\n","import { firstValue, get, isEmpty, isNil, isNumber, isString, valuesOfKey } from '@antv/util';\nimport { getScale, Scale } from '../dependents';\nimport { LooseObject, ScaleOption } from '../interface';\n\nconst dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]+)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\n\n/**\n * 获取字段对应数据的类型\n * @param field 数据字段名\n * @param data 数据源\n * @returns default type 返回对应的数据类型\n */\nfunction getDefaultType(value: any): string {\n  let type = 'linear';\n  if (dateRegex.test(value)) {\n    type = 'time';\n  } else if (isString(value)) {\n    type = 'cat';\n  }\n  return type;\n}\n\n/**\n * @ignore\n * 为指定的 `field` 字段数据创建 scale\n * @param field 字段名\n * @param [data] 数据集，可为空\n * @param [scaleDef] 列定义，可为空\n * @returns scale 返回创建的 Scale 实例\n */\nexport function createScaleByField(field: string | number, data?: LooseObject[] | [], scaleDef?: ScaleOption): Scale {\n  const validData = data || [];\n\n  if (isNumber(field) || (isNil(firstValue(validData, field)) && isEmpty(scaleDef))) {\n    const Identity = getScale('identity');\n    return new Identity({\n      field: field.toString(),\n      values: [field],\n    });\n  }\n\n  const values = valuesOfKey(validData, field);\n\n  // 如果已经定义过这个度量\n  const type = get(scaleDef, 'type', getDefaultType(values[0]));\n  const ScaleCtor = getScale(type);\n  return new ScaleCtor({\n    field,\n    values,\n    ...scaleDef,\n  });\n}\n\n/**\n * @ignore\n * 同步 scale\n * @todo 是否可以通过 scale.update() 方法进行更新\n * @param scale 需要同步的 scale 实例\n * @param newScale 同步源 Scale\n */\nexport function syncScale(scale: Scale, newScale: Scale) {\n  if (scale.type !== 'identity' && newScale.type !== 'identity') {\n    const obj = {};\n    for (const k in newScale) {\n      if (Object.prototype.hasOwnProperty.call(newScale, k)) {\n        obj[k] = newScale[k];\n      }\n    }\n\n    scale.change(obj);\n  }\n}\n\n/**\n * @ignore\n * get the scale name, if alias exist, return alias, or else field\n * @param scale\n * @returns the name of field\n */\nexport function getName(scale: Scale): string {\n  return scale.alias || scale.field;\n}\n","import { get, isBoolean } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Coordinate, Scale } from '../dependents';\nimport { AxisCfg, AxisOption, Point, Region } from '../interface';\nimport { getName } from './scale';\nimport { vec2 } from '@antv/matrix-util';\n\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is rect\n * @param direction\n * @returns axis coordinate region\n */\nexport function getLineAxisRelativeRegion(direction: DIRECTION): Region {\n  let start;\n  let end;\n\n  switch (direction) {\n    case DIRECTION.TOP:\n      start = { x: 0, y: 1 };\n      end = { x: 1, y: 1 };\n      break;\n    case DIRECTION.RIGHT:\n      start = { x: 1, y: 0 };\n      end = { x: 1, y: 1 };\n      break;\n    case DIRECTION.BOTTOM:\n      start = { x: 0, y: 0 };\n      end = { x: 1, y: 0 };\n      break;\n    case DIRECTION.LEFT:\n      start = { x: 0, y: 0 };\n      end = { x: 0, y: 1 };\n      break;\n    default:\n      start = end = { x: 0, y: 0 };\n  }\n\n  return { start, end };\n}\n\n/**\n * @ignore\n * get axis relative region ( 0 ~ 1) by direction when coordinate is polar\n * @param coordinate\n * @returns axis coordinate region\n */\nexport function getCircleAxisRelativeRegion(coordinate: Coordinate) {\n  let start;\n  let end;\n  if (coordinate.isTransposed) {\n    start = {\n      x: 0,\n      y: 0,\n    };\n    end = {\n      x: 1,\n      y: 0,\n    };\n  } else {\n    start = {\n      x: 0,\n      y: 0,\n    };\n    end = {\n      x: 0,\n      y: 1,\n    };\n  }\n\n  return { start, end };\n}\n\n/**\n * @ignore\n * get the axis region from coordinate\n * @param coordinate\n * @param direction\n * @returns the axis region (start point, end point)\n */\nexport function getAxisRegion(coordinate: Coordinate, direction: DIRECTION): Region {\n  let region = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\n  if (coordinate.isRect) {\n    region = getLineAxisRelativeRegion(direction);\n  } else if (coordinate.isPolar) {\n    region = getCircleAxisRelativeRegion(coordinate);\n  }\n\n  const { start, end } = region;\n  return {\n    start: coordinate.convert(start),\n    end: coordinate.convert(end),\n  };\n}\n\n/**\n * @ignore\n * get axis factor\n * @param coordinate\n * @param direction\n * @returns factor\n */\nexport function getAxisFactor(coordinate: Coordinate, direction: DIRECTION): number {\n  // rect coordinate, by direction\n  if (coordinate.isRect) {\n    return coordinate.isTransposed\n      ? [DIRECTION.RIGHT, DIRECTION.BOTTOM].includes(direction)\n        ? 1\n        : -1\n      : [DIRECTION.BOTTOM, DIRECTION.RIGHT].includes(direction)\n      ? -1\n      : 1;\n  }\n\n  // polar y axis, by angle\n  if (coordinate.isPolar) {\n    const startAngle = coordinate.x.start;\n    return startAngle < 0 ? -1 : 1;\n  }\n\n  return 1;\n}\n\n/**\n * @ignore\n * whether the axis isVertical\n * @param region\n * @returns isVertical\n */\nexport function isVertical(region: Region): boolean {\n  const { start, end } = region;\n\n  return start.x === end.x;\n}\n\n/**\n * @ignore\n * get factor by region (real position)\n * @param region\n * @param center\n * @returns factor\n */\nexport function getAxisFactorByRegion(region: Region, center: Point): number {\n  const { start, end } = region;\n\n  const isAxisVertical = isVertical(region);\n\n  // 垂直\n  if (isAxisVertical) {\n    // 左方,从下到上、右方,从上到下\n    if ((start.y - end.y) * (center.x - start.x) > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  } else {\n    // 下方,从左到右、上方,从右到做\n    if ((end.x - start.x) * (start.y - center.y) > 0) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\n/**\n * @ignore\n * get the axis cfg from theme\n * @param theme view theme object\n * @param direction axis direction\n * @returns axis theme cfg\n */\nexport function getAxisThemeCfg(theme: object, direction: string): object {\n  return get(theme, ['components', 'axis', direction], {});\n}\n\n/**\n * @ignore\n * get circle axis center and radius\n * @param coordinate\n */\nexport function getCircleAxisCenterRadius(coordinate: Coordinate) {\n  // @ts-ignore\n  const { x, y, circleCenter: center } = coordinate;\n  const isReflectY = y.start > y.end;\n  const start = coordinate.isTransposed\n    ? coordinate.convert({\n        x: isReflectY ? 0 : 1,\n        y: 0,\n      })\n    : coordinate.convert({\n        x: 0,\n        y: isReflectY ? 0 : 1,\n      });\n\n  const startVector: [number, number] = [start.x - center.x, start.y - center.y];\n  const normalVector: [number, number] = [1, 0];\n  const startAngle =\n    start.y > center.y ? vec2.angle(startVector, normalVector) : vec2.angle(startVector, normalVector) * -1;\n  const endAngle = startAngle + (x.end - x.start);\n  const radius = Math.sqrt((start.x - center.x) ** 2 + (start.y - center.y) ** 2);\n\n  return {\n    center,\n    radius,\n    startAngle,\n    endAngle,\n  };\n}\n\n/**\n * @ignore\n * 从配置中获取单个字段的 axis 配置\n * @param axes\n * @param field\n * @returns the axis option of field\n */\nexport function getAxisOption(axes: Record<string, AxisOption> | boolean, field: string) {\n  if (isBoolean(axes)) {\n    return axes === false ? false : {};\n  }\n  return get(axes, [field]);\n}\n\n/**\n * @ignore\n * 如果配置了 position，则使用配置\n * @param axisOption\n * @param def\n */\nexport function getAxisDirection(axisOption: AxisOption, def: DIRECTION): DIRECTION {\n  return get(axisOption, 'position', def);\n}\n\n/**\n * 获取 axis 的 title 文本\n * @param scale\n * @param axisOption\n */\nexport function getAxisTitleText(scale: Scale, axisOption: AxisCfg): string {\n  return get(axisOption, ['title', 'text'], getName(scale));\n}\n","import { deepMix, each, every, get, isNil } from '@antv/util';\nimport { LAYER } from '../constant';\nimport { IGroup } from '../dependents';\nimport { AxisCfg, Condition, Datum, FacetCfg, FacetData, FacetDataFilter, Region } from '../interface';\n\nimport View from '../chart/view';\nimport { getAxisOption } from '../util/axis';\n\n/**\n * facet 基类\n *  - 定义生命周期，方便自定义 facet\n *  - 提供基础的生命流程方法\n *\n * 生命周期：\n *\n * 初始化 init\n * 1. 初始化容器\n * 2. 数据分面，生成分面布局信息\n *\n * 渲染阶段 render\n * 1. view 创建\n * 2. title\n * 3. axis\n *\n * 清除阶段 clear\n * 1. 清除 view\n *\n * 销毁阶段 destroy\n * 1. clear\n * 2. 清除事件\n * 3. 清除 group\n */\nexport abstract class Facet<C extends FacetCfg<FacetData> = FacetCfg<FacetData>, F extends FacetData = FacetData> {\n  /** 分面所在的 view */\n  public view: View;\n  /** 分面容器 */\n  public container: IGroup;\n  /** 是否销毁 */\n  public destroyed: boolean = false;\n\n  /** 分面的配置项 */\n  protected cfg: C;\n  /** 分面之后的所有分面数据结构 */\n  protected facets: F[] = [];\n\n  constructor(view: View, cfg: C) {\n    this.view = view;\n    this.cfg = deepMix({}, this.getDefaultCfg(), cfg);\n  }\n\n  /**\n   * 初始化过程\n   */\n  public init() {\n    // 初始化容器\n    if (!this.container) {\n      this.container = this.createContainer();\n    }\n\n    // 生成分面布局信息\n    const data = this.view.getData();\n    this.facets = this.generateFacets(data);\n  }\n\n  /**\n   * 渲染分面，由上层 view 调用。包括：\n   *  - 分面 view\n   *  - 轴\n   *  - title\n   *\n   *  子类可以复写，添加一些其他组件，比如滚动条等\n   */\n  public render() {\n    this.renderViews();\n  }\n\n  /**\n   * 更新 facet\n   */\n  public update() {\n    // 其实不用做任何事情，因为 facet 最终生成的 View 和 Geometry 都在父 view 的更新中处理了\n  }\n\n  /**\n   * 清空，clear 之后如果还需要使用，需要重新调用 init 初始化过程\n   * 一般在数据有变更的时候调用，重新进行数据的分面逻辑\n   */\n  public clear() {\n    this.clearFacetViews();\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.clear();\n\n    if (this.container) {\n      this.container.remove(true);\n      this.container = undefined;\n    }\n\n    this.destroyed = true;\n    this.view = undefined;\n    this.facets = [];\n  }\n\n  /**\n   * 根据 facet 生成 view，可以给上层自定义使用\n   * @param facet\n   */\n  protected facetToView(facet: F): View {\n    const { region, data, padding = this.cfg.padding } = facet;\n\n    const view = this.view.createView({\n      region,\n      padding,\n    });\n\n    // 设置分面的数据\n    view.data(data || []);\n    facet.view = view;\n\n    // 前置钩子\n    this.beforeEachView(view, facet);\n\n    const { eachView } = this.cfg;\n    if (eachView) {\n      eachView(view, facet);\n    }\n\n    // 后置钩子\n    this.afterEachView(view, facet);\n\n    return view;\n  }\n\n  // 创建容器\n  private createContainer(): IGroup {\n    const foregroundGroup = this.view.getLayer(LAYER.FORE);\n    return foregroundGroup.addGroup();\n  }\n\n  /**\n   * 初始化 view\n   */\n  private renderViews() {\n    this.createFacetViews();\n  }\n\n  /**\n   * 创建 分面 view\n   */\n  private createFacetViews(): View[] {\n    // 使用分面数据 创建分面 view\n    return this.facets.map(\n      (facet): View => {\n        return this.facetToView(facet);\n      }\n    );\n  }\n\n  /**\n   * 从 view 中清除 facetView\n   */\n  private clearFacetViews() {\n    // 从 view 中移除分面 view\n    each(this.facets, (facet) => {\n      if (facet.view) {\n        this.view.removeView(facet.view);\n        facet.view = undefined;\n      }\n    });\n  }\n\n  // 其他一些提供给子类使用的方法\n\n  /**\n   * 获取这个字段对应的所有值，数组\n   * @protected\n   * @param data 数据\n   * @param field 字段名\n   * @return 字段对应的值\n   */\n  protected getFieldValues(data: Datum[], field: string): string[] {\n    const rst = [];\n    const cache: Record<string, boolean> = {};\n\n    // 去重、去除 Nil 值\n    each(data, (d: Datum) => {\n      const value = d[field];\n      if (!isNil(value) && !cache[value]) {\n        rst.push(value);\n        cache[value] = true;\n      }\n    });\n\n    return rst;\n  }\n\n  /**\n   * 获得每个分面的 region，平分区域\n   * @param rows row 总数\n   * @param cols col 总数\n   * @param xIndex x 方向 index\n   * @param yIndex y 方向 index\n   */\n  protected getRegion(rows: number, cols: number, xIndex: number, yIndex: number): Region {\n    // x, y 方向均分 100% 宽高\n    const xRatio = 1 / (cols === 0 ? 1 : cols);\n    const yRatio = 1 / (rows === 0 ? 1 : rows);\n\n    const start = {\n      x: xRatio * xIndex,\n      y: yRatio * yIndex,\n    };\n\n    const end = {\n      x: xRatio * (xIndex + 1),\n      y: yRatio * (yIndex + 1),\n    };\n\n    return {\n      start,\n      end,\n    };\n  }\n\n  protected getDefaultCfg() {\n    return {\n      eachView: undefined,\n      showTitle: true,\n      padding: 10,\n      fields: [],\n    };\n  }\n\n  /**\n   * 默认的 title 样式，因为有的分面是 title，有的分面配置是 columnTitle、rowTitle\n   */\n  protected getDefaultTitleCfg() {\n    // @ts-ignore\n    const fontFamily = this.view.getTheme().fontFamily;\n    return {\n      style: {\n        fontSize: 14,\n        fill: '#666',\n        fontFamily,\n      },\n    };\n  }\n\n  /**\n   * 处理 axis 的默认配置\n   * @param view\n   * @param facet\n   */\n  protected processAxis(view: View, facet: F) {\n    const options = view.getOptions();\n\n    const coordinateOption = options.coordinate;\n    const geometries = view.geometries;\n\n    const coordinateType = get(coordinateOption, 'type', 'rect');\n\n    if (coordinateType === 'rect' && geometries.length) {\n      if (isNil(options.axes)) {\n        // @ts-ignore\n        options.axes = {};\n      }\n      const axes = options.axes;\n\n      const [x, y] = geometries[0].getXYFields();\n\n      const xOption = getAxisOption(axes, x);\n      const yOption = getAxisOption(axes, y);\n\n      if (xOption !== false) {\n        options.axes[x] = this.getXAxisOption(x, axes, xOption, facet);\n      }\n\n      if (yOption !== false) {\n        options.axes[y] = this.getYAxisOption(y, axes, yOption, facet);\n      }\n    }\n  }\n\n  /**\n   * 获取分面数据\n   * @param conditions\n   */\n  protected getFacetDataFilter(conditions: Condition[]): FacetDataFilter {\n    return (datum: Datum) => {\n      // 过滤出全部满足条件的数据\n      return every(conditions, (condition) => {\n        const { field, value } = condition;\n\n        if (!isNil(value) && field) {\n          return datum[field] === value;\n        }\n        return true;\n      });\n    };\n  }\n\n  /**\n   * @override 开始处理 eachView\n   * @param view\n   * @param facet\n   */\n  protected abstract beforeEachView(view: View, facet: F);\n\n  /**\n   * @override 处理 eachView 之后\n   * @param view\n   * @param facet\n   */\n  protected abstract afterEachView(view: View, facet: F);\n\n  /**\n   * @override 生成分面数据，包含布局\n   * @param data\n   */\n  protected abstract generateFacets(data: Datum[]): F[];\n\n  /**\n   * 获取 x 轴的配置\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected abstract getXAxisOption(x: string, axes: any, option: AxisCfg, facet: F): object;\n\n  /**\n   * 获取 y 轴的配置\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected abstract getYAxisOption(y: string, axes: any, option: AxisCfg, facet: F): object;\n}\n","import { lowerCase } from '@antv/util';\nimport { FacetCtor } from '../interface';\nexport { Facet } from './facet';\n\n/**\n * 所有的 Facet 类\n */\nconst Facets: Record<string, FacetCtor> = {};\n\n/**\n * 根据 type 获取 facet 类\n * @param type 分面类型\n */\nexport const getFacet = (type: string): FacetCtor => {\n  return Facets[lowerCase(type)];\n};\n\n/**\n * 注册一个 Facet 类\n * @param type 分面类型\n * @param ctor 分面类\n */\nexport const registerFacet = (type: string, ctor: FacetCtor) => {\n  Facets[lowerCase(type)] = ctor;\n};\n","import { assign } from '@antv/util';\nimport { IAction, IInteractionContext, LooseObject } from '../../interface';\n\n/**\n * Action 的基类\n */\nabstract class Action<T = LooseObject> implements IAction {\n  /** Action 名字 */\n  public name;\n  /** 上下文对象 */\n  public context: IInteractionContext;\n  /** Action 配置 */\n  protected cfg: T;\n  /** 配置项的字段，自动负值到 this 上 */\n  protected cfgFields: string[];\n\n  constructor(context: IInteractionContext, cfg?: T) {\n    this.context = context;\n    this.cfg = cfg;\n    context.addAction(this);\n  }\n\n  /**\n   * 设置配置项传入的值\n   * @param cfg\n   */\n  protected applyCfg(cfg) {\n    assign(this, cfg);\n  }\n\n  /**\n   * Inits action，提供给子类用于继承\n   */\n  public init() {\n    this.applyCfg(this.cfg);\n  }\n\n  /**\n   * Destroys action\n   */\n  public destroy() {\n    // 移除 action\n    this.context.removeAction(this);\n    // 清空\n    this.context = null;\n  }\n}\n\nexport default Action;\n","import { ActionCallback } from '../../interface';\nimport Action from './base';\n\n/** 回调函数构建的 Action */\nexport default class CallbackAction extends Action {\n  /**\n   * 回调函数\n   */\n  public callback: ActionCallback;\n  /**\n   * 执行\n   */\n  public execute() {\n    if (this.callback) {\n      this.callback(this.context);\n    }\n  }\n  /**\n   * 销毁\n   */\n  public destroy() {\n    super.destroy();\n    this.callback = null;\n  }\n}\n","import { ActionCallback, IInteractionContext, LooseObject } from '../../interface';\nimport Action from './base';\nimport CallbackAction from './callback';\nimport { get } from '@antv/util';\n\n/** Action 构造函数 */\ntype ActionConstructor = new (context: IInteractionContext, cfg?: LooseObject) => Action;\n\n/** @ignore */\ninterface ActionOption {\n  ActionClass: ActionConstructor;\n  cfg: LooseObject;\n}\n\n// Action 类的缓存\nconst ActionCache: Record<string, ActionOption> = {};\n\n/**\n * 根据名称获取 Action 实例\n * @param actionName - action 的名称\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createAction(actionName: string, context: IInteractionContext): Action {\n  const actionOption = ActionCache[actionName];\n  let action = null;\n  if (actionOption) {\n    const { ActionClass, cfg } = actionOption;\n    action = new ActionClass(context, cfg);\n    action.name = actionName;\n    action.init();\n  }\n  return action;\n}\n\n/**\n * 根据 action 的 name 获取定义的类\n * @param actionName action 的 name\n */\nexport function getActionClass(actionName: string) {\n  const actionOption = ActionCache[actionName];\n  return get(actionOption, 'ActionClass');\n}\n\n/**\n * 注册 Action\n * @param actionName - action 的名称\n * @param ActionClass - 继承自 action 的类\n */\nexport function registerAction(actionName: string, ActionClass: ActionConstructor, cfg?: LooseObject) {\n  ActionCache[actionName] = {\n    ActionClass,\n    cfg,\n  };\n}\n\n/**\n * 取消注册 Action\n * @param actionName action 名称\n */\nexport function unregisterAction(actionName: string) {\n  delete ActionCache[actionName];\n}\n\n/**\n * 根据回调函数获取 Action 实例\n * @param callback - action 的回调函数\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createCallbackAction(callback: ActionCallback, context: IInteractionContext): CallbackAction {\n  const action = new CallbackAction(context);\n  action.callback = callback;\n  action.name = 'callback';\n  return action;\n}\n","import { each, isEmpty, isNumber, isNumberEqual } from '@antv/util';\nimport { Coordinate, IShape } from '../dependents';\nimport { ShapeInfo } from '../interface';\n\n// 获取图形的包围盒\nfunction getPointsBox(points) {\n  if (isEmpty(points)) {\n    return null;\n  }\n\n  let minX = points[0].x;\n  let maxX = points[0].x;\n  let minY = points[0].y;\n  let maxY = points[0].y;\n  each(points, (point) => {\n    minX = minX > point.x ? point.x : minX;\n    maxX = maxX < point.x ? point.x : maxX;\n    minY = minY > point.y ? point.y : minY;\n    maxY = maxY < point.y ? point.y : maxY;\n  });\n\n  return {\n    minX,\n    maxX,\n    minY,\n    maxY,\n    centerX: (minX + maxX) / 2,\n    centerY: (minY + maxY) / 2,\n  };\n}\n\n/**\n * @ignore\n * 根据弧度计算极坐标系下的坐标点\n * @param centerX\n * @param centerY\n * @param radius\n * @param angleInRadian\n * @returns\n */\nexport function polarToCartesian(centerX: number, centerY: number, radius: number, angleInRadian: number) {\n  return {\n    x: centerX + radius * Math.cos(angleInRadian),\n    y: centerY + radius * Math.sin(angleInRadian),\n  };\n}\n\n/**\n * @ignore\n * 根据起始角度计算绘制扇形的 path\n * @param centerX\n * @param centerY\n * @param radius\n * @param startAngleInRadian\n * @param endAngleInRadian\n * @returns\n */\nexport function getSectorPath(\n  centerX: number,\n  centerY: number,\n  radius: number,\n  startAngleInRadian: number,\n  endAngleInRadian: number,\n  innerRadius: number = 0\n) {\n  const start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);\n  const end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);\n\n  const innerStart = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian);\n  const innerEnd = polarToCartesian(centerX, centerY, innerRadius, endAngleInRadian);\n\n  if (endAngleInRadian - startAngleInRadian === Math.PI * 2) {\n    // 整个圆是分割成两个圆\n    const middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);\n    const innerMiddlePoint = polarToCartesian(centerX, centerY, innerRadius, startAngleInRadian + Math.PI);\n    const circlePathCommands = [\n      ['M', start.x, start.y],\n      ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y],\n      ['A', radius, radius, 0, 1, 1, end.x, end.y],\n      ['M', innerStart.x, innerStart.y],\n    ];\n    if (innerRadius) {\n      circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerMiddlePoint.x, innerMiddlePoint.y]);\n      circlePathCommands.push(['A', innerRadius, innerRadius, 0, 1, 0, innerEnd.x, innerEnd.y]);\n    }\n\n    circlePathCommands.push(['M', start.x, start.y]);\n    circlePathCommands.push(['Z']);\n\n    return circlePathCommands;\n  }\n\n  const arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;\n  const sectorPathCommands = [\n    ['M', start.x, start.y],\n    ['A', radius, radius, 0, arcSweep, 1, end.x, end.y],\n    ['L', innerEnd.x, innerEnd.y],\n  ];\n  if (innerRadius) {\n    sectorPathCommands.push(['A', innerRadius, innerRadius, 0, arcSweep, 0, innerStart.x, innerStart.y]);\n  }\n  sectorPathCommands.push(['L', start.x, start.y]);\n  sectorPathCommands.push(['Z']);\n\n  return sectorPathCommands;\n}\n\n/**\n * @ignore\n * Gets arc path\n * @param centerX\n * @param centerY\n * @param radius\n * @param startAngleInRadian\n * @param endAngleInRadian\n * @returns\n */\nexport function getArcPath(\n  centerX: number,\n  centerY: number,\n  radius: number,\n  startAngleInRadian: number,\n  endAngleInRadian: number\n) {\n  const start = polarToCartesian(centerX, centerY, radius, startAngleInRadian);\n  const end = polarToCartesian(centerX, centerY, radius, endAngleInRadian);\n\n  if (isNumberEqual(endAngleInRadian - startAngleInRadian, Math.PI * 2)) {\n    const middlePoint = polarToCartesian(centerX, centerY, radius, startAngleInRadian + Math.PI);\n    return [\n      ['M', start.x, start.y],\n      ['A', radius, radius, 0, 1, 1, middlePoint.x, middlePoint.y],\n      ['A', radius, radius, 0, 1, 1, start.x, start.y],\n      ['A', radius, radius, 0, 1, 0, middlePoint.x, middlePoint.y],\n      ['A', radius, radius, 0, 1, 0, start.x, start.y],\n      ['Z'],\n    ];\n  }\n  const arcSweep = endAngleInRadian - startAngleInRadian <= Math.PI ? 0 : 1;\n  return [\n    ['M', start.x, start.y],\n    ['A', radius, radius, 0, arcSweep, 1, end.x, end.y],\n  ];\n}\n\n/**\n * @ignore\n * 从数据模型中的 points 换算角度\n * @param shapeModel\n * @param coordinate\n * @returns\n */\nexport function getAngle(shapeModel: ShapeInfo, coordinate: Coordinate) {\n  const points = shapeModel.points;\n  const box = getPointsBox(points);\n  let endAngle;\n  let startAngle;\n  const { startAngle: coordStartAngle, endAngle: coordEndAngle } = coordinate;\n  const diffAngle = coordEndAngle - coordStartAngle;\n\n  if (coordinate.isTransposed) {\n    endAngle = box.maxY * diffAngle;\n    startAngle = box.minY * diffAngle;\n  } else {\n    endAngle = box.maxX * diffAngle;\n    startAngle = box.minX * diffAngle;\n  }\n  endAngle += coordStartAngle;\n  startAngle += coordStartAngle;\n  return {\n    startAngle,\n    endAngle,\n  };\n}\n\n/**\n * @ignore\n * 计算多边形重心: https://en.wikipedia.org/wiki/Centroid#Of_a_polygon\n */\nexport function getPolygonCentroid(xs: number | number[], ys: number | number[]) {\n  if (isNumber(xs) && isNumber(ys)) {\n    // 普通色块图，xs 和 ys 是数值\n    return [xs, ys];\n  }\n  let i = -1;\n  let x = 0;\n  let y = 0;\n  let former;\n  let current = (xs as number[]).length - 1;\n  let diff;\n  let k = 0;\n  while (++i < (xs as number[]).length) {\n    former = current;\n    current = i;\n    k += diff = xs[former] * ys[current] - xs[current] * ys[former];\n    x += (xs[former] + xs[current]) * diff;\n    y += (ys[former] + ys[current]) * diff;\n  }\n  k *= 3;\n  return [x / k, y / k];\n}\n\n/**\n * @ignore\n * 获取需要替换的属性，如果原先图形元素存在，而新图形不存在，则设置 undefined\n */\nexport function getReplaceAttrs(sourceShape: IShape, targetShape: IShape) {\n  const originAttrs = sourceShape.attr();\n  const newAttrs = targetShape.attr();\n  each(originAttrs, (v, k) => {\n    if (newAttrs[k] === undefined) {\n      newAttrs[k] = undefined;\n    }\n  });\n  return newAttrs;\n}\n","import { isArray, isString } from '@antv/util';\n\n/**\n * @ignore\n * Determines whether between is\n * @param value\n * @param start\n * @param end\n * @returns true if between\n */\nexport function isBetween(value: number, start: number, end: number): boolean {\n  const min = Math.min(start, end);\n  const max = Math.max(start, end);\n\n  return value >= min && value <= max;\n}\n\n/**\n * @ignore\n * pads the current string/array with a given value (repeated, if needed) so that the resulting reaches a given length.\n * The padding is applied from the end of the current value.\n *\n * @param source\n * @param targetLength\n * @param padValue\n * @returns\n */\nexport function padEnd(source: string | any[], targetLength: number, padValue: any) {\n  if (isString(source)) {\n    return source.padEnd(targetLength, padValue);\n  } else if (isArray(source)) {\n    const sourceLength = source.length;\n    if (sourceLength < targetLength) {\n      const diff = targetLength - sourceLength;\n      for (let i = 0; i < diff; i++) {\n        source.push(padValue);\n      }\n    }\n  }\n\n  return source;\n}\n\n/**\n * @ignore\n * omit keys of an object.\n * @param obj\n * @param keys\n */\nexport function omit<T = any>(obj: T, keys: string[]): T {\n  keys.forEach((key: string) => {\n    delete obj[key];\n  });\n\n  return obj;\n}\n\n/**\n * @ignore\n * @param sourceArray\n * @param targetArray\n * @param map\n */\nexport function uniq(sourceArray: any[], targetArray: any[] = [], map: object = {}) {\n  for (const source of sourceArray) {\n    if (!map[source]) {\n      targetArray.push(source);\n      map[source] = true;\n    }\n  }\n  return targetArray;\n}\n","import { Coordinate } from '../dependents';\nimport { Point } from '../interface';\nimport { getSectorPath } from './graphics';\nimport { isBetween } from './helper';\n\n/**\n * @ignore\n * Gets x dimension length\n * @param coordinate\n * @returns x dimension length\n */\nexport function getXDimensionLength(coordinate): number {\n  if (coordinate.isPolar && !coordinate.isTransposed) {\n    // 极坐标系下 width 为弧长\n    return (coordinate.endAngle - coordinate.startAngle) * coordinate.getRadius();\n  }\n\n  // 直角坐标系\n  const start = coordinate.convert({ x: 0, y: 0 });\n  const end = coordinate.convert({ x: 1, y: 0 });\n  // 坐标系有可能发生 transpose 等变换，所有通过两点之间的距离进行计算\n  return Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));\n}\n\n/**\n * @ignore\n * Determines whether full circle is\n * @param coordinate\n * @returns true if full circle\n */\nexport function isFullCircle(coordinate: Coordinate): boolean {\n  if (coordinate.isPolar) {\n    const { startAngle, endAngle } = coordinate;\n    return endAngle - startAngle === Math.PI * 2;\n  }\n  return false;\n}\n\n/**\n * @ignore\n * 获取当前点到坐标系圆心的距离\n * @param coordinate 坐标系\n * @param point 当前点\n * @returns distance to center\n */\nexport function getDistanceToCenter(coordinate: Coordinate, point: Point): number {\n  const center = coordinate.getCenter() as Point;\n  return Math.sqrt((point.x - center.x) ** 2 + (point.y - center.y) ** 2);\n}\n\n/**\n * @ignore\n * 坐标点是否在坐标系中\n * @param coordinate\n * @param point\n */\nexport function isPointInCoordinate(coordinate: Coordinate, point: Point) {\n  let result = false;\n\n  if (coordinate) {\n    if (coordinate.type === 'theta') {\n      const { start, end } = coordinate;\n      result = isBetween(point.x, start.x, end.x) && isBetween(point.y, start.y, end.y);\n    } else {\n      const invertPoint = coordinate.invert(point);\n\n      result = isBetween(invertPoint.x, 0, 1) && isBetween(invertPoint.y, 0, 1);\n    }\n  }\n\n  return result;\n}\n\n/**\n * @ignore\n * 获取点到圆心的连线与水平方向的夹角\n */\nexport function getAngleByPoint(coordinate: Coordinate, point: Point): number {\n  const center = coordinate.getCenter();\n  return Math.atan2(point.y - center.y, point.x - center.x);\n}\n\n/**\n * @ignore\n * 获取同坐标系范围相同的剪切区域\n * @param coordinate\n * @returns\n */\nexport function getCoordinateClipCfg(coordinate: Coordinate, margin: number = 0) {\n  const { start, end } = coordinate;\n  const width = coordinate.getWidth();\n  const height = coordinate.getHeight();\n\n  if (coordinate.isPolar) {\n    const { startAngle, endAngle } = coordinate;\n    const center = coordinate.getCenter();\n    const radius = coordinate.getRadius();\n\n    return {\n      type: 'path',\n      startState: {\n        path: getSectorPath(center.x, center.y, radius + margin, startAngle, startAngle),\n      },\n      endState: (ratio) => {\n        const diff = (endAngle - startAngle) * ratio + startAngle;\n        const path = getSectorPath(center.x, center.y, radius + margin, startAngle, diff);\n        return {\n          path,\n        };\n      },\n      attrs: {\n        path: getSectorPath(center.x, center.y, radius + margin, startAngle, endAngle),\n      },\n    };\n  }\n\n  let endState;\n  if (coordinate.isTransposed) {\n    endState = {\n      height: height + margin * 2,\n    };\n  } else {\n    endState = {\n      width: width + margin * 2,\n    };\n  }\n\n  return {\n    type: 'rect',\n    startState: {\n      x: start.x - margin,\n      y: end.y - margin,\n      width: coordinate.isTransposed ? width + margin * 2 : 0,\n      height: coordinate.isTransposed ? 0 : height + margin * 2,\n    },\n    endState,\n    attrs: {\n      x: start.x - margin,\n      y: end.y - margin,\n      width: width + margin * 2,\n      height: height + margin * 2,\n    },\n  };\n}\n","import { vec2 } from '@antv/matrix-util';\nimport { each } from '@antv/util';\nimport { Coordinate, PathCommand } from '../../../dependents';\nimport { Point, Position } from '../../../interface';\nimport { getDistanceToCenter } from '../../../util/coordinate';\n\nfunction _points2path(points: Point[], isInCircle: boolean): PathCommand[] {\n  const path = [];\n  if (points.length) {\n    path.push(['M', points[0].x, points[0].y]);\n    for (let i = 1, length = points.length; i < length; i += 1) {\n      const item = points[i];\n      path.push(['L', item.x, item.y]);\n    }\n\n    if (isInCircle) {\n      path.push(['Z']);\n    }\n  }\n\n  return path;\n}\n\nfunction _convertArr(arr: number[], coord: Coordinate): any[] {\n  const tmp = [arr[0]];\n  for (let i = 1, len = arr.length; i < len; i = i + 2) {\n    const point = coord.convert({\n      x: arr[i],\n      y: arr[i + 1],\n    });\n    tmp.push(point.x, point.y);\n  }\n  return tmp;\n}\n\nfunction _convertPolarPath(pre: PathCommand, cur: PathCommand, coord: Coordinate): PathCommand[] {\n  const { isTransposed, startAngle, endAngle } = coord;\n\n  const prePoint = {\n    x: pre[1],\n    y: pre[2],\n  };\n  const curPoint = {\n    x: cur[1],\n    y: cur[2],\n  };\n  const rst = [];\n  const xDim = isTransposed ? 'y' : 'x';\n  const angleRange = Math.abs(curPoint[xDim] - prePoint[xDim]) * (endAngle - startAngle);\n  const direction = curPoint[xDim] >= prePoint[xDim] ? 1 : 0; // 圆弧的方向\n  const flag = angleRange > Math.PI ? 1 : 0; // 大弧还是小弧标志位\n  const convertPoint = coord.convert(curPoint);\n  const r = getDistanceToCenter(coord, convertPoint);\n  if (r >= 0.5) {\n    // 小于1像素的圆在图像上无法识别\n    if (angleRange === Math.PI * 2) {\n      const middlePoint = {\n        x: (curPoint.x + prePoint.x) / 2,\n        y: (curPoint.y + prePoint.y) / 2,\n      };\n      const middleConvertPoint = coord.convert(middlePoint);\n      rst.push(['A', r, r, 0, flag, direction, middleConvertPoint.x, middleConvertPoint.y]);\n      rst.push(['A', r, r, 0, flag, direction, convertPoint.x, convertPoint.y]);\n    } else {\n      rst.push(['A', r, r, 0, flag, direction, convertPoint.x, convertPoint.y]);\n    }\n  }\n  return rst;\n}\n\n// 当存在整体的圆时，去除圆前面和后面的线，防止出现直线穿过整个圆的情形\nfunction _filterFullCirleLine(path: PathCommand[]) {\n  each(path, (subPath, index) => {\n    const cur = subPath;\n    if (cur[0].toLowerCase() === 'a') {\n      const pre = path[index - 1];\n      const next = path[index + 1];\n      if (next && next[0].toLowerCase() === 'a') {\n        if (pre && pre[0].toLowerCase() === 'l') {\n          pre[0] = 'M';\n        }\n      } else if (pre && pre[0].toLowerCase() === 'a') {\n        if (next && next[0].toLowerCase() === 'l') {\n          next[0] = 'M';\n        }\n      }\n    }\n  });\n}\n\n/**\n * @ignore\n * 计算光滑的贝塞尔曲线\n */\nexport const smoothBezier = (\n  points: Position[],\n  smooth: number,\n  isLoop: boolean,\n  constraint: Position[]\n): Position[] => {\n  const cps = [];\n\n  let prevPoint: Position;\n  let nextPoint: Position;\n  const hasConstraint = !!constraint;\n  let min: Position;\n  let max: Position;\n  if (hasConstraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (let i = 0, l = points.length; i < l; i++) {\n      const point = points[i];\n      min = vec2.min([0, 0], min, point) as [number, number];\n      max = vec2.max([0, 0], max, point) as [number, number];\n    }\n    min = vec2.min([0, 0], min, constraint[0]) as [number, number];\n    max = vec2.max([0, 0], max, constraint[1]) as [number, number];\n  }\n\n  for (let i = 0, len = points.length; i < len; i++) {\n    const point = points[i];\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(point);\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n    let v: [number, number] = [0, 0];\n    v = vec2.sub(v, nextPoint, prevPoint) as [number, number];\n    v = vec2.scale(v, v, smooth) as [number, number];\n\n    let d0 = vec2.distance(point, prevPoint);\n    let d1 = vec2.distance(point, nextPoint);\n\n    const sum = d0 + d1;\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    const v1 = vec2.scale([0, 0], v, -d0);\n    const v2 = vec2.scale([0, 0], v, d1);\n\n    let cp0 = vec2.add([0, 0], point, v1);\n    let cp1 = vec2.add([0, 0], point, v2);\n\n    if (hasConstraint) {\n      cp0 = vec2.max([0, 0], cp0, min);\n      cp0 = vec2.min([0, 0], cp0, max);\n      cp1 = vec2.max([0, 0], cp1, min);\n      cp1 = vec2.min([0, 0], cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n  return cps;\n};\n\n/**\n * @ignore\n * 贝塞尔曲线\n */\nexport function catmullRom2bezier(crp: number[], z: boolean, constraint: Position[]): PathCommand[] {\n  const isLoop = !!z;\n  const pointList = [];\n  for (let i = 0, l = crp.length; i < l; i += 2) {\n    pointList.push([crp[i], crp[i + 1]]);\n  }\n\n  const controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\n  const len = pointList.length;\n  const d1 = [];\n\n  let cp1: Position;\n  let cp2: Position;\n  let p: Position;\n\n  for (let i = 0; i < len - 1; i++) {\n    cp1 = controlPointList[i * 2];\n    cp2 = controlPointList[i * 2 + 1];\n    p = pointList[i + 1];\n\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n\n  if (isLoop) {\n    cp1 = controlPointList[len];\n    cp2 = controlPointList[len + 1];\n    p = pointList[0];\n\n    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]]);\n  }\n  return d1;\n}\n\n/**\n * @ignore\n * 将点连接成路径 path\n */\nexport function getLinePath(points: Point[], isInCircle?: boolean): PathCommand[] {\n  return _points2path(points, isInCircle);\n}\n\n/**\n * @ignore\n * 根据关键点获取限定了范围的平滑线\n */\nexport function getSplinePath(points: Point[], isInCircle?: boolean, constaint?: Position[]): PathCommand[] {\n  const data = [];\n  const first = points[0];\n  let prePoint = null;\n  if (points.length <= 2) {\n    // 两点以内直接绘制成路径\n    return getLinePath(points, isInCircle);\n  }\n  for (let i = 0, len = points.length; i < len; i++) {\n    const point = points[i];\n    if (!prePoint || !(prePoint.x === point.x && prePoint.y === point.y)) {\n      data.push(point.x);\n      data.push(point.y);\n      prePoint = point;\n    }\n  }\n  const constraint = constaint || [\n    // 范围\n    [0, 0],\n    [1, 1],\n  ];\n  const splinePath = catmullRom2bezier(data, isInCircle, constraint);\n  splinePath.unshift(['M', first.x, first.y]);\n  return splinePath;\n}\n\n/**\n * @ignore\n * 将归一化后的路径数据转换成坐标\n */\nexport function convertNormalPath(coord, path: PathCommand[]): PathCommand[] {\n  const tmp = [];\n  each(path, (subPath) => {\n    const action = subPath[0];\n    switch (action.toLowerCase()) {\n      case 'm':\n      case 'l':\n      case 'c':\n        tmp.push(_convertArr(subPath, coord));\n        break;\n      case 'z':\n      default:\n        tmp.push(subPath);\n        break;\n    }\n  });\n  return tmp;\n}\n\n/**\n * @ignore\n * 将路径转换为极坐标下的真实路径\n */\nexport function convertPolarPath(coord, path: PathCommand[]): PathCommand[] {\n  let tmp = [];\n  let pre: PathCommand;\n  let cur: PathCommand;\n  let transposed: boolean;\n  let equals: boolean;\n  each(path, (subPath, index) => {\n    const action = subPath[0];\n\n    switch (action.toLowerCase()) {\n      case 'm':\n      case 'c':\n      case 'q':\n        tmp.push(_convertArr(subPath, coord));\n        break;\n      case 'l':\n        pre = path[index - 1];\n        cur = subPath;\n        transposed = coord.isTransposed;\n        // 是否半径相同，转换成圆弧\n        equals = transposed ? pre[pre.length - 2] === cur[1] : pre[pre.length - 1] === cur[2];\n        if (equals) {\n          tmp = tmp.concat(_convertPolarPath(pre, cur, coord));\n        } else {\n          // y 不相等，所以直接转换\n          tmp.push(_convertArr(subPath, coord));\n        }\n        break;\n      case 'z':\n      default:\n        tmp.push(subPath);\n        break;\n    }\n  });\n  _filterFullCirleLine(tmp); // 过滤多余的直线\n  return tmp;\n}\n","import { each } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Padding, Point, Region } from '../interface';\nimport { parsePadding } from './padding';\n\n/**\n * 用于包围盒计算。\n */\nexport class BBox {\n  /** x 轴坐标系 */\n  public x: number;\n  /** y 轴坐标系 */\n  public y: number;\n  /** 包围盒高度 */\n  public height: number;\n  /** 包围盒宽度 */\n  public width: number;\n\n  public static fromRange(minX: number, minY: number, maxX: number, maxY: number) {\n    return new BBox(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n    this.x = x;\n    this.y = y;\n    this.height = height;\n    this.width = width;\n  }\n\n  public get minX(): number {\n    return this.x;\n  }\n\n  public get maxX(): number {\n    return this.x + this.width;\n  }\n\n  public get minY(): number {\n    return this.y;\n  }\n\n  public get maxY(): number {\n    return this.y + this.height;\n  }\n\n  public get tl(): Point {\n    return { x: this.x, y: this.y };\n  }\n\n  public get tr(): Point {\n    return { x: this.maxX, y: this.y };\n  }\n\n  public get bl(): Point {\n    return { x: this.x, y: this.maxY };\n  }\n\n  public get br(): Point {\n    return { x: this.maxX, y: this.maxY };\n  }\n\n  public get top(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.minY,\n    };\n  }\n\n  public get right(): Point {\n    return {\n      x: this.maxX,\n      y: this.y + this.height / 2,\n    };\n  }\n  public get bottom(): Point {\n    return {\n      x: this.x + this.width / 2,\n      y: this.maxY,\n    };\n  }\n  public get left(): Point {\n    return {\n      x: this.minX,\n      y: this.y + this.height / 2,\n    };\n  }\n  // end 计算属性\n\n  /**\n   * 包围盒是否相等\n   * @param {BBox} bbox 包围盒\n   * @returns      包围盒是否相等\n   */\n  public isEqual(bbox: BBox): boolean {\n    return this.x === bbox.x && this.y === bbox.y && this.width === bbox.width && this.height === bbox.height;\n  }\n\n  /**\n   * 克隆包围盒\n   * @returns 包围盒\n   */\n  public clone(): BBox {\n    return new BBox(this.x, this.y, this.width, this.height);\n  }\n\n  /**\n   * 取并集\n   * @param subBBox\n   */\n  public add(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.min(b.x, bbox.x);\n      bbox.y = Math.min(b.y, bbox.y);\n      bbox.width = Math.max(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.max(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * 取交集\n   * @param subBBox\n   */\n  public merge(...subBBox: BBox[]): BBox {\n    const bbox = this.clone();\n    each(subBBox, (b: BBox) => {\n      bbox.x = Math.max(b.x, bbox.x);\n      bbox.y = Math.max(b.y, bbox.y);\n      bbox.width = Math.min(b.maxX, bbox.maxX) - bbox.x;\n      bbox.height = Math.min(b.maxY, bbox.maxY) - bbox.y;\n    });\n\n    return bbox;\n  }\n\n  /**\n   * bbox 剪裁\n   * @param subBBox\n   * @param direction\n   */\n  public cut(subBBox: BBox, direction: DIRECTION): BBox {\n    const width = subBBox.width;\n    const height = subBBox.height;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        return BBox.fromRange(this.minX, this.minY + height, this.maxX, this.maxY);\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        return BBox.fromRange(this.minX, this.minY, this.maxX - width, this.maxY);\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        return BBox.fromRange(this.minX, this.minY, this.maxX, this.maxY - height);\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        return BBox.fromRange(this.minX + width, this.minY, this.maxX, this.maxY);\n      default:\n        // 其他情况不裁剪，原样返回\n        return this;\n    }\n  }\n\n  /**\n   * 收缩形成新的\n   * @param gap\n   */\n  public shrink(gap: Padding): BBox {\n    const [top, right, bottom, left] = gap;\n\n    return new BBox(this.x + left, this.y + top, this.width - left - right, this.height - top - bottom);\n  }\n\n  /**\n   * get the gap of two bbox, if not exceed, then 0\n   * @param bbox\n   * @returns [top, right, bottom, left]\n   */\n  public exceed(bbox: BBox): Padding {\n    return [\n      Math.max(-this.minY + bbox.minY, 0),\n      Math.max(this.maxX - bbox.maxX, 0),\n      Math.max(this.maxY - bbox.maxY, 0),\n      Math.max(-this.minX + bbox.minX, 0),\n    ];\n  }\n\n  /**\n   * 获取包围盒大小\n   * @returns 包围盒大小\n   */\n  public size(): number {\n    return this.width * this.height;\n  }\n}\n\n/**\n * 从一个 bbox 的 region 获取 bbox\n * @param bbox\n * @param region\n */\nexport const getRegionBBox = (bbox: BBox, region: Region): BBox => {\n  const { start, end } = region;\n\n  return new BBox(\n    bbox.x + bbox.width * start.x,\n    bbox.y + bbox.height * start.y,\n    bbox.width * Math.abs(end.x - start.x),\n    bbox.height * Math.abs(end.y - start.y)\n  );\n};\n\n/**\n * 将 bbox 转换成 points\n * @param bbox\n */\nexport function toPoints(bbox: Partial<BBox>): any[] {\n  return [\n    [bbox.minX, bbox.minY],\n    [bbox.maxX, bbox.minY],\n    [bbox.maxX, bbox.maxY],\n    [bbox.minX, bbox.maxY],\n  ];\n}\n","import { each, isArray } from '@antv/util';\nimport { View } from '../../chart';\nimport { BBox, PathCommand, Point } from '../../dependents';\nimport Geometry from '../../geometry/base';\nimport Element from '../../geometry/element/';\nimport { catmullRom2bezier, getLinePath } from '../../geometry/shape/util/path';\nimport { toPoints } from '../../util/bbox';\nimport isPolygonsIntersect from '@antv/path-util/lib/is-polygons-intersect';\nimport { ComponentOption, IInteractionContext, LooseObject } from '../../interface';\n\nfunction getMaskBBox(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  const maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskBBox;\n}\n\nfunction getMaskPath(context: IInteractionContext, tolerance: number) {\n  const event = context.event;\n  const maskShape = event.target;\n  const maskBBox = maskShape.getCanvasBBox();\n  // 如果 bbox 过小则不返回\n  if (!(maskBBox.width >= tolerance || maskBBox.height >= tolerance)) {\n    return null;\n  }\n  return maskShape.attr('path');\n}\n\n/**\n * 获取当前事件相关的图表元素\n * @param context 交互的上下文\n * @ignore\n */\nexport function getCurrentElement(context: IInteractionContext): Element {\n  const event = context.event;\n  let element;\n  const target = event.target;\n  if (target) {\n    element = target.get('element');\n  }\n  return element;\n}\n\n/**\n * 获取委托对象\n * @param context 上下文\n * @ignore\n */\nexport function getDelegationObject(context: IInteractionContext): LooseObject {\n  const event = context.event;\n  const target = event.target;\n  let delegateObject;\n  if (target) {\n    delegateObject = target.get('delegateObject');\n  }\n  return delegateObject;\n}\n\nexport function isElementChange(context: IInteractionContext) {\n  const event = context.event.gEvent;\n  // 在同一个 element 内部移动，label 和 shape 之间\n  if (event && event.fromShape && event.toShape && event.fromShape.get('element') === event.toShape.get('element')) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * 是否是列表组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isList(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isList();\n}\n\n/**\n * 是否是滑块组件\n * @param delegateObject 委托对象\n * @ignore\n */\nexport function isSlider(delegateObject: LooseObject): boolean {\n  return delegateObject && delegateObject.component && delegateObject.component.isSlider();\n}\n\n/**\n * 是否由 mask 触发\n * @param context 上下文\n * @ignore\n */\nexport function isMask(context: IInteractionContext): boolean {\n  const event = context.event;\n  const target = event.target;\n  return target && target.get('name') === 'mask';\n}\n\n/**\n * 获取被遮挡的 elements\n * @param context 上下文\n * @ignore\n */\nexport function getMaskedElements(context: IInteractionContext, tolerance: number): Element[] {\n  const target = context.event.target;\n  if (target.get('type') === 'path') {\n    const maskPath = getMaskPath(context, tolerance);\n    if (!maskPath) {\n      return;\n    }\n    return getElementsByPath(context.view, maskPath);\n  }\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  return getIntersectElements(context.view, maskBBox);\n}\n\n/**\n * @ignore\n */\nexport function getSiblingMaskElements(context: IInteractionContext, sibling: View, tolerance: number) {\n  const maskBBox = getMaskBBox(context, tolerance);\n  // 如果 bbox 过小则不返回\n  if (!maskBBox) {\n    return null;\n  }\n  const view = context.view;\n  const start = getSiblingPoint(view, sibling, { x: maskBBox.x, y: maskBBox.y });\n  const end = getSiblingPoint(view, sibling, { x: maskBBox.maxX, y: maskBBox.maxY });\n  const box = {\n    minX: start.x,\n    minY: start.y,\n    maxX: end.x,\n    maxY: end.y,\n  };\n  return getIntersectElements(sibling, box);\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @ignore\n */\nexport function getElements(view: View): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.elements;\n    rst = rst.concat(elements);\n  });\n  if (view.views && view.views.length) {\n    each(view.views, (subView) => {\n      rst = rst.concat(getElements(subView));\n    });\n  }\n  return rst;\n}\n\n/**\n * 获取所有的图表元素\n * @param view View/Chart\n * @param field 字段名\n * @param value 字段值\n * @ignore\n */\nexport function getElementsByField(view: View, field: string, value: any) {\n  const elements = getElements(view);\n  return elements.filter((el) => {\n    return getElementValue(el, field) === value;\n  });\n}\n\n/**\n * 根据状态名获取图表元素\n * @param view View/Chart\n * @param stateName 状态名\n * @ignore\n */\nexport function getElementsByState(view: View, stateName: string): Element[] {\n  const geometries = view.geometries;\n  let rst: Element[] = [];\n  each(geometries, (geom: Geometry) => {\n    const elements = geom.getElementsBy((el) => el.hasState(stateName));\n    rst = rst.concat(elements);\n  });\n  return rst;\n}\n\n/**\n * 获取图表元素对应字段的值\n * @param element 图表元素\n * @param field 字段名\n * @ignore\n */\nexport function getElementValue(element: Element, field) {\n  const model = element.getModel();\n  const record = model.data;\n  let value;\n  if (isArray(record)) {\n    value = record[0][field];\n  } else {\n    value = record[field];\n  }\n  return value;\n}\n\n/**\n * 两个包围盒是否相交\n * @param box1 包围盒1\n * @param box2 包围盒2\n * @ignore\n */\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param box 包围盒\n * @ignore\n */\nexport function getIntersectElements(view: View, box) {\n  const elements = getElements(view);\n  const rst = [];\n  each(elements, (el) => {\n    const shape = el.shape;\n    const shapeBBox = shape.getCanvasBBox();\n    if (intersectRect(box, shapeBBox)) {\n      rst.push(el);\n    }\n  });\n  return rst;\n}\nfunction pathToPoints(path: any[]) {\n  const points = [];\n  each(path, (seg) => {\n    const command = seg[0];\n    if (command !== 'A') {\n      for (let i = 1; i < seg.length; i = i + 2) {\n        points.push([seg[i], seg[i + 1]]);\n      }\n    } else {\n      const length = seg.length;\n      points.push([seg[length - 2], seg[length - 1]]);\n    }\n  });\n  return points;\n}\n/**\n * 获取包围盒内的图表元素\n * @param view View/Chart\n * @param path 路径\n * @ignore\n */\nexport function getElementsByPath(view: View, path: any[]) {\n  const elements = getElements(view);\n  const points = pathToPoints(path);\n  const rst = elements.filter((el: Element) => {\n    const shape = el.shape;\n    let shapePoints;\n    if (shape.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      const shapeBBox = shape.getCanvasBBox();\n      shapePoints = toPoints(shapeBBox);\n    }\n    return isPolygonsIntersect(points, shapePoints);\n  });\n  return rst;\n}\n\n/**\n * 获取当前 View 的所有组件\n * @param view View/Chart\n * @ignore\n */\nexport function getComponents(view) {\n  return view.getComponents().map((co: ComponentOption) => co.component);\n}\n\n/** @ignore */\nexport function distance(p1: Point, p2: Point) {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/** @ignore */\nexport function getSpline(points: Point[], z: boolean): PathCommand[] {\n  if (points.length <= 2) {\n    return getLinePath(points, false);\n  }\n  const first = points[0];\n  const arr = [];\n  each(points, (point) => {\n    arr.push(point.x);\n    arr.push(point.y);\n  });\n  const path = catmullRom2bezier(arr, z, null);\n  path.unshift(['M', first.x, first.y]);\n  return path;\n}\n\n/**\n * 检测点是否在包围盒内\n * @param box 包围盒\n * @param point 点\n * @ignore\n */\nexport function isInBox(box: BBox, point: Point) {\n  return box.x <= point.x && box.maxX >= point.x && box.y <= point.y && box.maxY > point.y;\n}\n\n/**\n * 获取同 view 同一级的 views\n * @param view 当前 view\n * @returns 同一级的 views\n * @ignore\n */\nexport function getSilbings(view: View): View[] {\n  const parent = view.parent;\n  let siblings = null;\n  if (parent) {\n    siblings = parent.views.filter((sub) => sub !== view);\n  }\n  return siblings;\n}\n\nfunction point2Normalize(view: View, point: Point): Point {\n  const coord = view.getCoordinate();\n  return coord.invert(point);\n}\n/**\n * 将 view 上的一点转换成另一个 view 的点\n * @param view 当前的 view\n * @param sibling 同一层级的 view\n * @param point 指定点\n * @ignore\n */\nexport function getSiblingPoint(view: View, sibling: View, point: Point): Point {\n  const normalPoint = point2Normalize(view, point);\n  return sibling.getCoordinate().convert(normalPoint);\n}\n\n/**\n * 是否在记录中，临时因为所有的 view 中的数据不是引用，而使用的方法\n * 不同 view 上对数据的引用不相等，导致无法直接用 includes\n * 假设 x, y 值相等时是同一条数据，这个假设不完全正确，而改成 isEqual 则成本太高\n * 后面改成同一个引用时可以修改回来\n * @param records\n * @param record\n * @param xFiled\n * @param yField\n * @returns\n * @ignore\n */\nexport function isInRecords(records: object[], record: object, xFiled: string, yField: string) {\n  let isIn = false;\n  each(records, (r) => {\n    if (r[xFiled] === record[xFiled] && r[yField] === record[yField]) {\n      isIn = true;\n      return false;\n    }\n  });\n  return isIn;\n}\n\n// 级联获取 field 对应的 scale，如果 view 上没有，遍历子 view\nexport function getScaleByField(view: View, field: string) {\n  let scale = view.getScaleByField(field);\n  if (!scale && view.views) {\n    each(view.views, (subView) => {\n      scale = getScaleByField(subView, field);\n      if (scale) {\n        return false; // 终止循环\n      }\n    });\n  }\n  return scale;\n}\n","import { each, get } from '@antv/util';\nimport { View } from '../chart';\nimport { BBox, IShape, Point } from '../dependents';\nimport { IAction, IInteractionContext, LooseObject } from '../interface';\nimport { getComponents, isInBox } from './action/util';\n\n/**\n * 交互的上下文\n */\nexport default class Context implements IInteractionContext {\n  /** 当前所有的 Action */\n  public actions: IAction[] = [];\n  /** 当前 View 实例 */\n  public view: View;\n  /** 当前事件对象 */\n  public event: LooseObject = null;\n\n  private cacheMap: LooseObject = {};\n\n  constructor(view: View) {\n    this.view = view;\n  }\n\n  /**\n   * 缓存信息\n   * @param params 缓存的字段\n   *  - 如果一个字段则获取缓存\n   *  - 两个字段则设置缓存\n   */\n  public cache(...params) {\n    if (params.length === 1) {\n      return this.cacheMap[params[0]];\n    } else if (params.length === 2) {\n      this.cacheMap[params[0]] = params[1];\n    }\n  }\n\n  /**\n   * 获取 Action\n   * @param name Action 的名称\n   */\n  public getAction(name: string): IAction {\n    return this.actions.find((action) => action.name === name);\n  }\n\n  /**\n   * 获取 Action\n   * @param action Action 对象\n   */\n  public addAction(action: IAction) {\n    this.actions.push(action);\n  }\n\n  /**\n   * 移除 Action\n   * @param action Action 对象\n   */\n  public removeAction(action: IAction) {\n    const actions = this.actions;\n    const index = this.actions.indexOf(action);\n    if (index >= 0) {\n      actions.splice(index, 1);\n    }\n  }\n\n  /**\n   * 获取当前的点\n   */\n  public getCurrentPoint(): Point {\n    const event = this.event;\n    if (event) {\n      if (event.target instanceof HTMLElement) {\n        const canvas = this.view.getCanvas();\n        const point = canvas.getPointByClient(event.clientX, event.clientY);\n        return point;\n      } else {\n        return {\n          x: event.x,\n          y: event.y,\n        };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 获取当前 shape\n   * @returns current shape\n   */\n  public getCurrentShape(): IShape {\n    return get(this.event, ['gEvent', 'shape']);\n  }\n\n  /**\n   * 当前的触发是否在 View 内\n   */\n  public isInPlot() {\n    const point = this.getCurrentPoint();\n    if (point) {\n      return this.view.isPointInPlot(point);\n    }\n    return false;\n  }\n\n  /**\n   * 是否在指定的图形内\n   * @param name shape 的 name\n   */\n  public isInShape(name) {\n    const shape = this.getCurrentShape(); // 不再考虑在 shape 的 parent 内的情况\n    if (shape) {\n      return shape.get('name') === name;\n    }\n    return false;\n  }\n\n  /**\n   * 当前的触发是组件内部\n   * @param name 组件名，可以为空\n   */\n  public isInComponent(name?: string) {\n    const components = getComponents(this.view);\n    const point = this.getCurrentPoint();\n    if (point) {\n      return !!components.find((component) => {\n        const bbox = component.getBBox() as BBox;\n        if (name) {\n          return component.get('name') === name && isInBox(bbox, point);\n        } else {\n          return isInBox(bbox, point);\n        }\n      });\n    }\n    return false;\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.view = null;\n    this.event = null;\n    // 先销毁 action 再清空，一边遍历，一边删除，所以数组需要更新引用\n    each(this.actions.slice(), (action) => {\n      action.destroy();\n    });\n    this.actions = null;\n    this.cacheMap = null;\n  }\n}\n","import { View } from '../chart';\nimport { LooseObject } from '../interface';\n\nexport type InteractonConstructor = new (view: View, cfg: LooseObject) => Interaction;\n\n/**\n * 交互的基类。\n */\nexport default class Interaction {\n  /** view 或者 chart */\n  protected view: View;\n  /** 配置项 */\n  protected cfg: LooseObject;\n\n  constructor(view: View, cfg: LooseObject) {\n    this.view = view;\n    this.cfg = cfg;\n  }\n\n  /**\n   * 初始化。\n   */\n  public init() {\n    this.initEvents();\n  }\n\n  /**\n   * 绑定事件\n   */\n  protected initEvents() {}\n\n  /**\n   * 销毁事件\n   */\n  protected clearEvents() {}\n\n  /**\n   * 销毁。\n   */\n  public destroy() {\n    this.clearEvents();\n  }\n}\n","import { each, isArray, isFunction, isString, debounce, throttle } from '@antv/util';\nimport { View } from '../chart';\nimport { ActionCallback, IAction, IInteractionContext, LooseObject } from '../interface';\nimport { createAction, createCallbackAction } from './action/register';\nimport InteractionContext from './context';\nimport Interaction from './interaction';\n\n// 将字符串转换成 action\nfunction parseAction(actionStr: string, context: IInteractionContext): ActionObject {\n  const arr = actionStr.split(':');\n  const actionName = arr[0];\n  // 如果已经初始化过 action ，则直接引用之前的 action\n  const action = context.getAction(actionName) || createAction(actionName, context);\n  if (!action) {\n    throw new Error(`There is no action named ${actionName}`);\n  }\n  const methodName = arr[1];\n  return {\n    action,\n    methodName,\n  };\n}\n\n// 执行 Action\nfunction executeAction(actionObject: ActionObject) {\n  const { action, methodName } = actionObject;\n  if (action[methodName]) {\n    action[methodName]();\n  } else {\n    throw new Error(`Action(${action.name}) doesn't have a method called ${methodName}`);\n  }\n}\n\nconst STEP_NAMES = {\n  START: 'start',\n  SHOW_ENABLE: 'showEnable',\n  END: 'end',\n  ROLLBACK: 'rollback',\n  PROCESSING: 'processing',\n};\n\n/** 交互环节的定义 */\nexport interface InteractionStep {\n  /**\n   * 触发事件，支持 view，chart 的各种事件，也支持 document、window 的事件\n   */\n  trigger: string;\n  /**\n   * 是否可以触发 action\n   * @param context - 交互的上下文\n   */\n  isEnable?: (context: IInteractionContext) => boolean;\n  /**\n   * 反馈，支持三种方式：\n   * - action:method : action 的名字和方法的组合\n   * - [’action1:method1‘, ’action2:method‘]\n   * - ActionCallback: 回调函数\n   */\n  action: string | string[] | ActionCallback;\n  /**\n   * 回调函数，action 执行后执行\n   */\n  callback?: (context: IInteractionContext) => void;\n  /**\n   * @private\n   * 不需要用户传入，通过上面的属性计算出来的属性\n   */\n  actionObject?: ActionObject | ActionObject[];\n  /**\n   * 在一个环节内是否只允许执行一次\n   */\n  once?: boolean;\n  /**\n   * 是否增加节流\n   */\n  throttle?: ThrottleOption;\n  /**\n   * 是否延迟\n   */\n  debounce?: DebounceOption;\n}\n\n// action 执行时支持 debounce 和 throttle，可以参考：https://css-tricks.com/debouncing-throttling-explained-examples/\n/**\n * debounce 的配置\n */\nexport interface DebounceOption {\n  /**\n   * 等待时间\n   */\n  wait: number;\n  /**\n   * 是否马上执行\n   */\n  immediate?: boolean;\n}\n\n/**\n * throttle 的配置\n */\nexport interface ThrottleOption {\n  /**\n   * 等待时间\n   */\n  wait: number;\n  /**\n   * 马上就执行\n   */\n  leading?: boolean;\n  /**\n   * 执行完毕后再执行一次\n   */\n  trailing?: boolean;\n}\n\n/** 缓存 action 对象，仅用于当前文件 */\ninterface ActionObject {\n  /**\n   * 缓存的 action\n   */\n  action: IAction;\n  /**\n   * action 的方法\n   */\n  methodName: string;\n}\n\n/** 交互的所有环节 */\nexport interface InteractionSteps {\n  /**\n   * 显示交互可以进行\n   */\n  showEnable?: InteractionStep[];\n  /**\n   * 交互开始\n   */\n  start?: InteractionStep[];\n  /**\n   * 交互持续\n   */\n  processing?: InteractionStep[];\n  /**\n   * 交互结束\n   */\n  end?: InteractionStep[];\n  /**\n   * 交互回滚\n   */\n  rollback?: InteractionStep[];\n}\n\n/**\n * 支持语法的交互类\n */\nexport default class GrammarInteraction extends Interaction {\n  // 存储的交互环节\n  private steps: InteractionSteps;\n  /** 当前执行到的阶段 */\n  public currentStepName: string;\n  /**\n   * 当前交互的上下文\n   */\n  public context: IInteractionContext;\n\n  private callbackCaches: LooseObject = {};\n  // 某个触发和反馈在本环节是否执行或\n  private emitCaches: LooseObject = {};\n\n  constructor(view: View, steps: InteractionSteps) {\n    super(view, steps);\n    this.steps = steps;\n  }\n\n  /**\n   * 初始化\n   */\n  public init() {\n    this.initContext();\n    super.init();\n  }\n\n  /**\n   * 清理资源\n   */\n  public destroy() {\n    super.destroy(); // 先清理事件\n    this.steps = null;\n    if (this.context) {\n      this.context.destroy();\n      this.context = null;\n    }\n\n    this.callbackCaches = null;\n    this.view = null;\n  }\n\n  /**\n   * 绑定事件\n   */\n  protected initEvents() {\n    each(this.steps, (stepArr, stepName) => {\n      each(stepArr, (step) => {\n        const callback = this.getActionCallback(stepName, step);\n        if (callback) {\n          // 如果存在 callback，才绑定，有时候会出现无 callback 的情况\n          this.bindEvent(step.trigger, callback);\n        }\n      });\n    });\n  }\n\n  /**\n   * 清理绑定的事件\n   */\n  protected clearEvents() {\n    each(this.steps, (stepArr, stepName) => {\n      each(stepArr, (step) => {\n        const callback = this.getActionCallback(stepName, step);\n        if (callback) {\n          this.offEvent(step.trigger, callback);\n        }\n      });\n    });\n  }\n\n  // 初始化上下文，并初始化 action\n  private initContext() {\n    const view = this.view;\n    const context = new InteractionContext(view);\n    this.context = context;\n    const steps = this.steps;\n    // 生成具体的 Action\n    each(steps, (subSteps) => {\n      each(subSteps, (step) => {\n        if (isFunction(step.action)) {\n          // 如果传入回调函数，则直接生成 CallbackAction\n          step.actionObject = {\n            action: createCallbackAction(step.action, context),\n            methodName: 'execute',\n          };\n        } else if (isString(step.action)) {\n          // 如果是字符串\n          step.actionObject = parseAction(step.action, context);\n        } else if (isArray(step.action)) {\n          // 如果是数组\n          const actionArr = step.action;\n          step.actionObject = [];\n          each(actionArr, (actionStr) => {\n            step.actionObject.push(parseAction(actionStr, context));\n          });\n        }\n        // 如果 action 既不是字符串，也不是函数，则不会生成 actionObject\n      });\n    });\n  }\n\n  // 是否允许指定阶段名称执行\n  private isAllowStep(stepName: string): boolean {\n    const currentStepName = this.currentStepName;\n    const steps = this.steps;\n    // 相同的阶段允许同时执行\n    if (currentStepName === stepName) {\n      return true;\n    }\n\n    if (stepName === STEP_NAMES.SHOW_ENABLE) {\n      // 示能在整个过程中都可用\n      return true;\n    }\n\n    if (stepName === STEP_NAMES.PROCESSING) {\n      // 只有当前是 start 时，才允许 processing\n      return currentStepName === STEP_NAMES.START;\n    }\n\n    if (stepName === STEP_NAMES.START) {\n      // 如果当前是 processing，则无法 start，必须等待 end 后才能执行\n      return currentStepName !== STEP_NAMES.PROCESSING;\n    }\n\n    if (stepName === STEP_NAMES.END) {\n      return currentStepName === STEP_NAMES.PROCESSING || currentStepName === STEP_NAMES.START;\n    }\n\n    if (stepName === STEP_NAMES.ROLLBACK) {\n      if (steps[STEP_NAMES.END]) {\n        // 如果定义了 end, 只有 end 时才允许回滚\n        return currentStepName === STEP_NAMES.END;\n      } else if (currentStepName === STEP_NAMES.START) {\n        // 如果未定义 end, 则判断是否是开始\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // 具体的指定阶段是否允许执行\n  private isAllowExcute(stepName: string, step: InteractionStep): boolean {\n    if (this.isAllowStep(stepName)) {\n      const key = this.getKey(stepName, step);\n      // 如果是在本环节内仅允许触发一次，同时已经触发过，则不允许再触发\n      if (step.once && this.emitCaches[key]) {\n        return false;\n      }\n      // 如果是允许的阶段，则验证 isEnable 方法\n      if (step.isEnable) {\n        return step.isEnable(this.context);\n      }\n      return true; // 如果没有 isEnable 则允许执行\n    }\n    return false;\n  }\n\n  private enterStep(stepName: string) {\n    this.currentStepName = stepName;\n    this.emitCaches = {}; // 清除所有本环节触发的缓存\n  }\n\n  // 执行完某个触发和反馈（子环节）\n  private afterExecute(stepName: string, step) {\n    // show enable 不计入正常的流程，其他情况则设置当前的 step\n    if (stepName !== STEP_NAMES.SHOW_ENABLE && this.currentStepName !== stepName) {\n      this.enterStep(stepName);\n    }\n    const key = this.getKey(stepName, step);\n    // 一旦执行，则缓存标记为，一直保持到跳出改环节\n    this.emitCaches[key] = true;\n  }\n  // 获取某个环节的唯一的键值\n  private getKey(stepName, step) {\n    return stepName + step.trigger + step.action;\n  }\n\n  // 获取 step 的回调函数，如果已经生成，则直接返回，如果未生成，则创建\n  private getActionCallback(stepName: string, step: InteractionStep): (e: object) => void {\n    const context = this.context;\n    const callbackCaches = this.callbackCaches;\n    const actionObject = step.actionObject;\n    if (step.action && actionObject) {\n      const key = this.getKey(stepName, step);\n      if (!callbackCaches[key]) {\n        // 动态生成执行的方法，执行对应 action 的名称\n        const actionCallback = (event) => {\n          context.event = event; // 保证检测时的 event\n          if (this.isAllowExcute(stepName, step)) {\n            // 如果是数组时，则依次执行\n            if (isArray(actionObject)) {\n              each(actionObject, (obj: ActionObject) => {\n                context.event = event; // 可能触发新的事件，保证执行前的 context.event 是正确的\n                executeAction(obj);\n              });\n            } else {\n              context.event = event; // 保证执行前的 context.event 是正确的\n              executeAction(actionObject);\n            }\n            this.afterExecute(stepName, step);\n            if (step.callback) {\n              context.event = event; // 保证执行前的 context.event 是正确的\n              step.callback(context);\n            }\n          } else {\n            // 如果未通过验证，则事件不要绑定在上面\n            context.event = null;\n          }\n        };\n        // 如果设置了 debounce\n        if (step.debounce) {\n          callbackCaches[key] = debounce(actionCallback, step.debounce.wait, step.debounce.immediate);\n        } else if (step.throttle) {\n          // 设置 throttle\n          callbackCaches[key] = throttle(actionCallback, step.throttle.wait, {\n            leading: step.throttle.leading,\n            trailing: step.throttle.trailing,\n          });\n        } else {\n          // 直接设置\n          callbackCaches[key] = actionCallback;\n        }\n      }\n      return callbackCaches[key];\n    }\n    return null;\n  }\n\n  private bindEvent(eventName, callback) {\n    const nameArr = eventName.split(':');\n    if (nameArr[0] === 'window') {\n      window.addEventListener(nameArr[1], callback);\n    } else if (nameArr[0] === 'document') {\n      document.addEventListener(nameArr[1], callback);\n    } else {\n      this.view.on(eventName, callback);\n    }\n  }\n\n  private offEvent(eventName, callback) {\n    const nameArr = eventName.split(':');\n    if (nameArr[0] === 'window') {\n      window.removeEventListener(nameArr[1], callback);\n    } else if (nameArr[0] === 'document') {\n      document.removeEventListener(nameArr[1], callback);\n    } else {\n      this.view.off(eventName, callback);\n    }\n  }\n}\n","export { default as Action } from './base'; // 导出 Action 基类\nexport { createAction, registerAction, getActionClass } from './register';\n","import { clone, isPlainObject, lowerCase, mix } from '@antv/util';\nimport { View } from '../chart';\nimport { LooseObject } from '../interface';\nimport GrammarInteraction, { InteractionSteps } from './grammar-interaction';\nimport { InteractonConstructor } from './interaction';\n\nconst Interactions: LooseObject = {};\n\n/**\n * 根据交互行为名字获取对应的交互类\n * @param name 交互名字\n * @returns 交互类\n */\nexport function getInteraction(name: string): InteractionSteps | InteractonConstructor {\n  return Interactions[lowerCase(name)];\n}\n\n/**\n * 注册交互行为\n * @param name 交互行为名字\n * @param interaction 交互类\n */\nexport function registerInteraction(name: string, interaction: InteractionSteps | InteractonConstructor) {\n  Interactions[lowerCase(name)] = interaction;\n}\n\n/**\n * 创建交互实例\n * @param name 交互名\n * @param view 交互应用的 View 实例\n * @param cfg 交互行为配置\n */\nexport function createInteraction(name: string, view: View, cfg?: LooseObject) {\n  const interaciton = getInteraction(name);\n  if (!interaciton) {\n    return null;\n  }\n  if (isPlainObject(interaciton)) {\n    // 如果不 clone 则会多个 interaction 实例共享 step 的定义\n    const steps = mix(clone(interaciton), cfg) as InteractionSteps;\n    return new GrammarInteraction(view, steps);\n  } else {\n    const cls = interaciton as InteractonConstructor;\n    return new cls(view, cfg);\n  }\n}\n\nexport { default as Interaction } from './interaction';\nexport { Action, registerAction, getActionClass } from './action';\n","const BLACK_COLORS = {\n  100: '#000',\n  95: '#0D0D0D',\n  85: '#262626',\n  65: '#595959',\n  45: '#8C8C8C',\n  25: '#BFBFBF',\n  15: '#D9D9D9',\n  6: '#F0F0F0',\n};\n\nconst WHITE_COLORS = {\n  100: '#FFFFFF',\n  95: '#F2F2F2',\n  85: '#D9D9D9',\n  65: '#A6A6A6',\n  45: '#737373',\n  25: '#404040',\n  15: '#262626',\n  6: '#0F0F0F',\n};\n\nconst QUALITATIVE_10 = [\n  '#5B8FF9',\n  '#5AD8A6',\n  '#5D7092',\n  '#F6BD16',\n  '#E86452',\n  '#6DC8EC',\n  '#945FB9',\n  '#FF9845',\n  '#1E9493',\n  '#FF99C3',\n];\n\nconst QUALITATIVE_20 = [\n  '#5B8FF9',\n  '#CDDDFD',\n  '#5AD8A6',\n  '#CDF3E4',\n  '#5D7092',\n  '#CED4DE',\n  '#F6BD16',\n  '#FCEBB9',\n  '#E86452',\n  '#F8D0CB',\n  '#6DC8EC',\n  '#D3EEF9',\n  '#945FB9',\n  '#DECFEA',\n  '#FF9845',\n  '#FFE0C7',\n  '#1E9493',\n  '#BBDEDE',\n  '#FF99C3',\n  '#FFE0ED',\n];\n\nexport const antvLight = {\n  backgroundColor: 'transparent',\n  /** 主题色 */\n  brandColor: QUALITATIVE_10[0],\n  /** 分类色板 1，在数据量小于等于 10 时使用 */\n  paletteQualitative10: QUALITATIVE_10,\n  /** 分类色板 2，在数据量大于 10 时使用 */\n  paletteQualitative20: QUALITATIVE_20,\n  /** 语义色 */\n  paletteSemanticRed: '#F4664A',\n  /** 语义色 */\n  paletteSemanticGreen: '#30BF78',\n  /** 语义色 */\n  paletteSemanticYellow: '#FAAD14',\n  /** 字体 */\n  fontFamily: `\"-apple-system\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial,\n  \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n  \"Noto Color Emoji\"`,\n\n  // -------------------- 坐标轴 --------------------\n  /** 坐标轴线颜色 */\n  axisLineBorderColor: BLACK_COLORS[25],\n  /** 坐标轴线粗细 */\n  axisLineBorder: 0.5,\n  /** 坐标轴线 lineDash 设置 */\n  axisLineDash: null,\n\n  /** 坐标轴标题颜色 */\n  axisTitleTextFillColor: BLACK_COLORS[65],\n  /** 坐标轴标题文本字体大小 */\n  axisTitleTextFontSize: 12,\n  /** 坐标轴标题文本行高 */\n  axisTitleTextLineHeight: 12,\n  /** 坐标轴标题文本字体粗细 */\n  axisTitleTextFontWeight: 'normal',\n\n  /** 坐标轴刻度线颜色 */\n  axisTickLineBorderColor: BLACK_COLORS[25],\n  /** 坐标轴刻度线长度 */\n  axisTickLineLength: 4,\n  /** 坐标轴刻度线粗细 */\n  axisTickLineBorder: 0.5,\n\n  /** 坐标轴次刻度线颜色 */\n  axisSubTickLineBorderColor: BLACK_COLORS[15],\n  /** 坐标轴次刻度线长度 */\n  axisSubTickLineLength: 2,\n  /** 坐标轴次刻度线粗细 */\n  axisSubTickLineBorder: 0.5,\n\n  /** 坐标轴刻度文本颜色 */\n  axisLabelFillColor: BLACK_COLORS[45],\n  /** 坐标轴刻度文本字体大小 */\n  axisLabelFontSize: 12,\n  /** 坐标轴刻度文本行高 */\n  axisLabelLineHeight: 12,\n  /** 坐标轴刻度文本字体粗细 */\n  axisLabelFontWeight: 'normal',\n\n  /** 坐标轴网格线颜色 */\n  axisGridBorderColor: BLACK_COLORS[15],\n  /** 坐标轴网格线粗细 */\n  axisGridBorder: 0.5,\n  /** 坐标轴网格线虚线设置 */\n  axisGridLineDash: null,\n\n  // -------------------- 图例 --------------------\n  /** 图例标题颜色 */\n  legendTitleTextFillColor: BLACK_COLORS[45],\n  /** 图例标题文本字体大小 */\n  legendTitleTextFontSize: 12,\n  /** 图例标题文本行高 */\n  legendTitleTextLineHeight: 21,\n  /** 图例标题文本字体粗细 */\n  legendTitleTextFontWeight: 'normal',\n\n  /** 图例 marker 颜色 */\n  legendMarkerColor: QUALITATIVE_10[0],\n  /** 图例 marker 默认半径大小 */\n  legendMarkerSize: 4,\n  /** 图例 'circle' marker 半径 */\n  legendCircleMarkerSize: 4,\n  /** 图例 'square' marker 半径 */\n  legendSquareMarkerSize: 4,\n  /** 图例 'line' marker 半径 */\n  legendLineMarkerSize: 5,\n\n  /** 图例项文本颜色 */\n  legendItemNameFillColor: BLACK_COLORS[65],\n  /** 图例项文本字体大小 */\n  legendItemNameFontSize: 12,\n  /** 图例项文本行高 */\n  legendItemNameLineHeight: 12,\n  /** 图例项粗细 */\n  legendItemNameFontWeight: 'normal',\n\n  /** 连续图例滑块填充色 */\n  sliderRailFillColor: BLACK_COLORS[15],\n  /** 连续图例滑块边框粗细 */\n  sliderRailBorder: 0,\n  /** 连续图例滑块边框颜色 */\n  sliderRailBorderColor: null,\n  /** 连续图例滑块宽度 */\n  sliderRailWidth: 100,\n  /** 连续图例滑块高度 */\n  sliderRailHeight: 12,\n\n  /** 连续图例文本颜色 */\n  sliderLabelTextFillColor: BLACK_COLORS[45],\n  /** 连续图例文本字体大小 */\n  sliderLabelTextFontSize: 12,\n  /** 连续图例文本行高 */\n  sliderLabelTextLineHeight: 12,\n  /** 连续图例文本字体粗细 */\n  sliderLabelTextFontWeight: 'normal',\n\n  /** 连续图例滑块颜色 */\n  sliderHandlerFillColor: BLACK_COLORS[6],\n  /** 连续图例滑块宽度 */\n  sliderHandlerWidth: 10,\n  /** 连续图例滑块高度 */\n  sliderHandlerHeight: 14,\n  /** 连续图例滑块边框粗细 */\n  sliderHandlerBorder: 1,\n  /** 连续图例滑块边框颜色 */\n  sliderHandlerBorderColor: BLACK_COLORS[25],\n\n  // -------------------- Annotation，图形标注 --------------------\n  /** arc 图形标注描边颜色 */\n  annotationArcBorderColor: BLACK_COLORS[15],\n  /** arc 图形标注粗细 */\n  annotationArcBorder: 0.5,\n\n  /** line 图形标注颜色 */\n  annotationLineBorderColor: BLACK_COLORS[25],\n  /** line 图形标注粗细 */\n  annotationLineBorder: 0.5,\n  /** lube 图形标注的虚线间隔 */\n  annotationLineDash: null,\n\n  /** text 图形标注文本颜色 */\n  annotationTextFillColor: BLACK_COLORS[65],\n  /** text 图形标注文本字体大小 */\n  annotationTextFontSize: 12,\n  /** text 图形标注文本行高 */\n  annotationTextLineHeight: 12,\n  /** text 图形标注文本字体粗细 */\n  annotationTextFontWeight: 'normal',\n  /** text 图形标注文本边框颜色 */\n  annotationTextBorderColor: WHITE_COLORS[95],\n  /** text 图形标注文本边框粗细 */\n  annotationTextBorder: 1.5,\n\n  /** region 图形标注填充颜色 */\n  annotationRegionFillColor: BLACK_COLORS[100],\n  /** region 图形标注填充颜色透明色 */\n  annotationRegionFillOpacity: 0.06,\n  /** region 图形标注描边粗细 */\n  annotationRegionBorder: 0,\n  /** region 图形标注描边颜色 */\n  annotationRegionBorderColor: null,\n\n  /** dataMarker 图形标注线的长度 */\n  annotationDataMarkerLineLength: 16,\n\n  // -------------------- Tooltip --------------------\n  /** tooltip crosshairs 辅助线颜色 */\n  tooltipCrosshairsBorderColor: BLACK_COLORS[25],\n  /** tooltip crosshairs 辅助线粗细 */\n  tooltipCrosshairsBorder: 0.5,\n  /** tooltip crosshairs 辅助线虚线间隔 */\n  tooltipCrosshairsLineDash: null,\n\n  /** tooltip 内容框背景色 */\n  tooltipContainerFillColor: 'rgb(255, 255, 255)',\n  tooltipContainerFillOpacity: 0.95,\n  /** tooltip 内容框阴影 */\n  tooltipContainerShadow: '0px 0px 10px #aeaeae',\n  /** tooltip 内容框圆角 */\n  tooltipContainerBorderRadius: 3,\n\n  /** tooltip 文本颜色 */\n  tooltipTextFillColor: BLACK_COLORS[65],\n  /** tooltip 文本字体大小 */\n  tooltipTextFontSize: 12,\n  /** tooltip 文本行高 */\n  tooltipTextLineHeight: 12,\n  /** tooltip 文本字体粗细 */\n  tooltipTextFontWeight: 'bold',\n\n  // -------------------- Geometry labels --------------------\n  /** Geometry label 文本颜色 */\n  labelFillColor: BLACK_COLORS[65],\n  /** Geometry label 文本字体大小 */\n  labelFontSize: 12,\n  /** Geometry label 文本行高 */\n  labelLineHeight: 12,\n  /** Geometry label 文本字体粗细 */\n  labelFontWeight: 'normal',\n  /** Geometry label 文本描边颜色 */\n  labelBorderColor: null,\n  /** Geometry label 文本描边粗细 */\n  labelBorder: 0,\n\n  /** Geometry innerLabel 文本颜色 */\n  innerLabelFillColor: WHITE_COLORS[100],\n  /** Geometry innerLabel 文本字体大小 */\n  innerLabelFontSize: 12,\n  /** Geometry innerLabel 文本行高 */\n  innerLabelLineHeight: 12,\n  /** Geometry innerLabel 文本字体粗细 */\n  innerLabelFontWeight: 'normal',\n  /** Geometry innerLabel 文本描边颜色 */\n  innerLabelBorderColor: null,\n  /** Geometry innerLabel 文本描边粗细 */\n  innerLabelBorder: 0,\n\n  /** Geometry label　文本连接线粗细 */\n  labelLineBorder: 0.5,\n  /** Geometry label 文本连接线颜色 */\n  labelLineBorderColor: BLACK_COLORS[25],\n\n  // -------------------- Geometry 图形样式--------------------\n  /** 点图填充颜色 */\n  pointFillColor: QUALITATIVE_10[0],\n  /** 点图填充颜色透明度 */\n  pointFillOpacity: 0.95,\n  /** 点图大小 */\n  pointSize: 4,\n  /** 点图描边粗细 */\n  pointBorder: 1,\n  /** 点图描边颜色 */\n  pointBorderColor: WHITE_COLORS[100],\n  /** 点图描边透明度 */\n  pointBorderOpacity: 1,\n\n  /** 点图 active 状态下描边颜色 */\n  pointActiveBorderColor: BLACK_COLORS[100],\n\n  /** 点图 selected 状态下描边粗细 */\n  pointSelectedBorder: 2,\n  /** 点图 selected 状态下描边颜色 */\n  pointSelectedBorderColor: BLACK_COLORS[100],\n\n  /** 点图 inactive 状态下填充颜色透明度 */\n  pointInactiveFillOpacity: 0.3,\n  /** 点图 inactive 状态下描边透明度 */\n  pointInactiveBorderOpacity: 0.3,\n\n  /** 空心点图大小 */\n  hollowPointSize: 4,\n  /** 空心点图描边粗细 */\n  hollowPointBorder: 1,\n  /** 空心点图描边颜色 */\n  hollowPointBorderColor: QUALITATIVE_10[0],\n  /** 空心点图描边透明度 */\n  hollowPointBorderOpacity: 0.95,\n  hollowPointFillColor: WHITE_COLORS[100],\n\n  /** 空心点图 active 状态下描边粗细 */\n  hollowPointActiveBorder: 1,\n  /** 空心点图 active 状态下描边颜色 */\n  hollowPointActiveBorderColor: BLACK_COLORS[100],\n  /** 空心点图 active 状态下描边透明度 */\n  hollowPointActiveBorderOpacity: 1,\n\n  /** 空心点图 selected 状态下描边粗细 */\n  hollowPointSelectedBorder: 2,\n  /** 空心点图 selected 状态下描边颜色 */\n  hollowPointSelectedBorderColor: BLACK_COLORS[100],\n  /** 空心点图 selected 状态下描边透明度 */\n  hollowPointSelectedBorderOpacity: 1,\n\n  /** 空心点图 inactive 状态下描边透明度 */\n  hollowPointInactiveBorderOpacity: 0.3,\n\n  /** 线图粗细 */\n  lineBorder: 2,\n  /** 线图颜色 */\n  lineBorderColor: QUALITATIVE_10[0],\n  /** 线图透明度 */\n  lineBorderOpacity: 1,\n\n  /** 线图 Active 状态下粗细 */\n  lineActiveBorder: 3,\n\n  /** 线图 selected 状态下粗细 */\n  lineSelectedBorder: 3,\n\n  /** 线图 inactive 状态下透明度 */\n  lineInactiveBorderOpacity: 0.3,\n\n  /** area 填充颜色 */\n  areaFillColor: QUALITATIVE_10[0],\n  /** area 填充透明度 */\n  areaFillOpacity: 0.25,\n\n  /** area 在 active 状态下的填充透明度 */\n  areaActiveFillColor: QUALITATIVE_10[0],\n  areaActiveFillOpacity: 0.5,\n\n  /** area 在 selected 状态下的填充透明度 */\n  areaSelectedFillColor: QUALITATIVE_10[0],\n  areaSelectedFillOpacity: 0.5,\n\n  /** area inactive 状态下填充透明度 */\n  areaInactiveFillOpacity: 0.3,\n\n  /** hollowArea 颜色 */\n  hollowAreaBorderColor: QUALITATIVE_10[0],\n  /** hollowArea 边框粗细 */\n  hollowAreaBorder: 2,\n  /** hollowArea 边框透明度 */\n  hollowAreaBorderOpacity: 1,\n\n  /** hollowArea active 状态下的边框粗细 */\n  hollowAreaActiveBorder: 3,\n  hollowAreaActiveBorderColor: BLACK_COLORS[100],\n\n  /** hollowArea selected 状态下的边框粗细 */\n  hollowAreaSelectedBorder: 3,\n  hollowAreaSelectedBorderColor: BLACK_COLORS[100],\n\n  /** hollowArea inactive 状态下的边框透明度 */\n  hollowAreaInactiveBorderOpacity: 0.3,\n\n  /** interval 填充颜色 */\n  intervalFillColor: QUALITATIVE_10[0],\n  /** interval 填充透明度 */\n  intervalFillOpacity: 0.95,\n\n  /** interval active 状态下边框粗细 */\n  intervalActiveBorder: 1,\n  /** interval active 状态下边框颜色 */\n  intervalActiveBorderColor: BLACK_COLORS[100],\n  intervalActiveBorderOpacity: 1,\n\n  /** interval selected 状态下边框粗细 */\n  intervalSelectedBorder: 2,\n  /** interval selected 状态下边框颜色 */\n  intervalSelectedBorderColor: BLACK_COLORS[100],\n  /** interval selected 状态下边框透明度 */\n  intervalSelectedBorderOpacity: 1,\n\n  /** interval inactive 状态下边框透明度 */\n  intervalInactiveBorderOpacity: 0.3,\n  /** interval inactive 状态下填充透明度 */\n  intervalInactiveFillOpacity: 0.3,\n\n  /** interval 边框粗细 */\n  hollowIntervalBorder: 2,\n  /** hollowInterval 边框颜色 */\n  hollowIntervalBorderColor: QUALITATIVE_10[0],\n  /** hollowInterval 边框透明度 */\n  hollowIntervalBorderOpacity: 1,\n  hollowIntervalFillColor: WHITE_COLORS[100],\n\n  /** hollowInterval active 状态下边框粗细 */\n  hollowIntervalActiveBorder: 2,\n  /** hollowInterval active 状态下边框颜色 */\n  hollowIntervalActiveBorderColor: BLACK_COLORS[100],\n\n  /** hollowInterval selected 状态下边框粗细 */\n  hollowIntervalSelectedBorder: 3,\n  /** hollowInterval selected 状态下边框颜色 */\n  hollowIntervalSelectedBorderColor: BLACK_COLORS[100],\n  /** hollowInterval selected 状态下边框透明度 */\n  hollowIntervalSelectedBorderOpacity: 1,\n\n  /** hollowInterval inactive 状态下边框透明度 */\n  hollowIntervalInactiveBorderOpacity: 0.3,\n};\n","import { deepMix, get, lowerCase } from '@antv/util';\nimport { LooseObject, StyleSheet } from '../interface';\n\nimport { createThemeByStylesheet } from '../util/theme';\nimport { antvLight as DefaultStyleSheet } from './style-sheet/light';\n\nconst defaultTheme = createThemeByStylesheet(DefaultStyleSheet as StyleSheet);\n\n// 所有已经存在的主题\nconst Themes: Record<string, LooseObject> = {\n  default: defaultTheme,\n};\n\n/**\n * 获取主题配置信息。\n * @param theme 主题名\n */\nexport function getTheme(theme?: string): LooseObject {\n  return get(Themes, lowerCase(theme), Themes.default);\n}\n\n/**\n * 注册新的主题配置信息。\n * @param theme 主题名。\n * @param value 具体的主题配置。\n */\nexport function registerTheme(theme: string, value: LooseObject) {\n  Themes[lowerCase(theme)] = deepMix({}, Themes.default, value);\n}\n","import { contains, filter, find, hasKey, isArray, isNil, isNumberEqual, isObject, memoize, values } from '@antv/util';\nimport { FIELD_ORIGIN, GROUP_ATTRS } from '../constant';\nimport { Attribute, Scale } from '../dependents';\nimport Geometry from '../geometry/base';\nimport { Data, Datum, MappingDatum, Point } from '../interface';\nimport { getName } from './scale';\n\nfunction snapEqual(v1: any, v2: any, scale: Scale) {\n  const value1 = scale.translate(v1);\n  const value2 = scale.translate(v2);\n\n  return isNumberEqual(value1, value2);\n}\n\nfunction getXValueByPoint(point: Point, geometry: Geometry): number {\n  const coordinate = geometry.coordinate;\n  const xScale = geometry.getXScale();\n  const range = xScale.range;\n  const rangeMax = range[range.length - 1];\n  const rangeMin = range[0];\n\n  const invertPoint = coordinate.invert(point);\n\n  let xValue = invertPoint.x;\n  if (coordinate.isPolar && xValue > (1 + rangeMax) / 2) {\n    xValue = rangeMin; // 极坐标下，scale 的 range 被做过特殊处理\n  }\n  return xScale.translate(xScale.invert(xValue));\n}\n\nfunction filterYValue(data: Data, point: Point, geometry: Geometry) {\n  const coordinate = geometry.coordinate;\n  const yScale = geometry.getYScale();\n  const yField = yScale.field;\n  const invertPoint = coordinate.invert(point);\n  const yValue = yScale.invert(invertPoint.y);\n\n  const result = find(data, (obj: Datum) => {\n    const originData = obj[FIELD_ORIGIN];\n    return originData[yField][0] <= yValue && originData[yField][1] >= yValue;\n  });\n  return result || data[data.length - 1];\n}\n\nconst getXDistance = memoize((scale: Scale) => {\n  if (scale.isCategory) {\n    return 1;\n  }\n  const scaleValues = scale.values; // values 是无序的\n  const length = scaleValues.length;\n  let min = scale.translate(scaleValues[0]);\n  let max = min;\n\n  for (let index = 0; index < length; index++) {\n    const value = scaleValues[index];\n    // 时间类型需要 translate\n    const numericValue = scale.translate(value);\n    if (numericValue < min) {\n      min = numericValue;\n    }\n    if (numericValue > max) {\n      max = numericValue;\n    }\n  }\n  return (max - min) / (length - 1);\n});\n\nfunction getTooltipTitle(originData: Datum, geometry: Geometry, title: string) {\n  let titleField = title;\n  if (!title) {\n    const positionAttr = geometry.getAttribute('position');\n    const fields = positionAttr.getFields();\n    titleField = fields[0];\n  }\n  const scales = geometry.scales;\n  if (scales[titleField]) {\n    // 如果创建了该字段对应的 scale，则通过 scale.getText() 方式取值，因为用户可能对数据进行了格式化\n    return scales[titleField].getText(originData[titleField]);\n  }\n  // 如果没有对应的 scale，则从原始数据中取值，如果原始数据中仍不存在，则直接放回 title 值\n  return hasKey(originData, titleField) ? originData[titleField] : titleField;\n}\n\nfunction getAttributesForLegend(geometry: Geometry) {\n  const attributes = values(geometry.attributes);\n  return filter(attributes, (attribute: Attribute) => contains(GROUP_ATTRS, attribute.type));\n}\n\nfunction getTooltipValueScale(geometry: Geometry) {\n  const attributes = getAttributesForLegend(geometry);\n  let scale;\n  for (const attribute of attributes) {\n    const tmpScale = attribute.getScale(attribute.type);\n    if (tmpScale && tmpScale.isLinear) {\n      // 如果指定字段是非 position 的，同时是连续的\n      scale = tmpScale;\n      break;\n    }\n  }\n\n  const xScale = geometry.getXScale();\n  const yScale = geometry.getYScale();\n\n  return scale || yScale || xScale;\n}\n\nfunction getTooltipValue(originData: Datum, valueScale: Scale) {\n  const field = valueScale.field;\n  const value = originData[field];\n\n  if (isArray(value)) {\n    const texts = value.map((eachValue) => {\n      return valueScale.getText(eachValue);\n    });\n    return texts.join('-');\n  }\n  return valueScale.getText(value);\n}\n\n// 根据原始数据获取 tooltip item 中 name 值\nfunction getTooltipName(originData: Datum, geometry: Geometry) {\n  let nameScale: Scale;\n  const groupScales = geometry.getGroupScales();\n  if (groupScales.length) {\n    // 如果存在分组类型，取第一个分组类型\n    nameScale = groupScales[0];\n  }\n  if (nameScale) {\n    const field = nameScale.field;\n    return nameScale.getText(originData[field]);\n  }\n\n  const valueScale = getTooltipValueScale(geometry);\n  return getName(valueScale);\n}\n\n/**\n * @ignore\n * Finds data from geometry by point\n * @param point canvas point\n * @param data an item of geometry.dataArray\n * @param geometry\n * @returns\n */\nexport function findDataByPoint(point: Point, data: MappingDatum[], geometry: Geometry) {\n  if (data.length === 0) {\n    return null;\n  }\n\n  const geometryType = geometry.type;\n  const xScale = geometry.getXScale();\n  const yScale = geometry.getYScale();\n\n  const xField = xScale.field;\n  const yField = yScale.field;\n\n  let rst = null;\n\n  // 热力图采用最小逼近策略查找 point 击中的数据\n  if (geometryType === 'heatmap' || geometryType === 'point') {\n    // 将 point 画布坐标转换为原始数据值\n    const coordinate = geometry.coordinate;\n    const invertPoint = coordinate.invert(point); // 转换成归一化的数据\n    const x = xScale.invert(invertPoint.x); // 转换为原始值\n    const y = yScale.invert(invertPoint.y); // 转换为原始值\n\n    let min = Infinity;\n    for (let index = 0; index < data.length; index++) {\n      const obj = data[index];\n      const originData = obj[FIELD_ORIGIN];\n      const range = (originData[xField] - x) ** 2 + (originData[yField] - y) ** 2;\n      if (range < min) {\n        min = range;\n        rst = obj;\n      }\n    }\n\n    return rst;\n  }\n\n  // 其他 Geometry 类型按照 x 字段数据进行查找\n  const first = data[0];\n  let last = data[data.length - 1];\n  const xValue = getXValueByPoint(point, geometry);\n  const firstXValue = first[FIELD_ORIGIN][xField];\n  const firstYValue = first[FIELD_ORIGIN][yField];\n  const lastXValue = last[FIELD_ORIGIN][xField];\n  const isYArray = yScale.isLinear && isArray(firstYValue); // 考虑 x 维度相同，y 是数组区间的情况\n\n  // 如果 x 的值是数组\n  if (isArray(firstXValue)) {\n    for (let index = 0; index < data.length; index++) {\n      const record = data[index];\n      const originData = record[FIELD_ORIGIN];\n      // xValue 在 originData[xField] 的数值区间内\n      if (xScale.translate(originData[xField][0]) <= xValue && xScale.translate(originData[xField][1]) >= xValue) {\n        if (isYArray) {\n          // 层叠直方图场景，x 和 y 都是数组区间\n          if (!isArray(rst)) {\n            rst = [];\n          }\n          rst.push(record);\n        } else {\n          rst = record;\n          break;\n        }\n      }\n    }\n    if (isArray(rst)) {\n      rst = filterYValue(rst, point, geometry);\n    }\n  } else {\n    let next;\n    if (!xScale.isLinear && xScale.type !== 'timeCat') {\n      // x 轴对应的数据为非线性以及非时间类型的数据采用遍历查找\n      for (let index = 0; index < data.length; index++) {\n        const record = data[index];\n        const originData = record[FIELD_ORIGIN];\n        if (snapEqual(originData[xField], xValue, xScale)) {\n          if (isYArray) {\n            if (!isArray(rst)) {\n              rst = [];\n            }\n            rst.push(record);\n          } else {\n            rst = record;\n            break;\n          }\n        } else if (xScale.translate(originData[xField]) <= xValue) {\n          last = record;\n          next = data[index + 1];\n        }\n      }\n\n      if (isArray(rst)) {\n        rst = filterYValue(rst, point, geometry);\n      }\n    } else {\n      // x 轴对应的数据为线性以及时间类型，进行二分查找，性能更好\n      if (\n        (xValue > xScale.translate(lastXValue) || xValue < xScale.translate(firstXValue)) &&\n        (xValue > xScale.max || xValue < xScale.min)\n      ) {\n        // 不在数据范围内\n        return null;\n      }\n\n      let firstIdx = 0;\n      let lastIdx = data.length - 1;\n      let middleIdx;\n      while (firstIdx <= lastIdx) {\n        middleIdx = Math.floor((firstIdx + lastIdx) / 2);\n        const item = data[middleIdx][FIELD_ORIGIN][xField];\n        if (snapEqual(item, xValue, xScale)) {\n          return data[middleIdx];\n        }\n\n        if (xScale.translate(item) <= xScale.translate(xValue)) {\n          firstIdx = middleIdx + 1;\n          last = data[middleIdx];\n          next = data[middleIdx + 1];\n        } else {\n          if (lastIdx === 0) {\n            last = data[0];\n          }\n          lastIdx = middleIdx - 1;\n        }\n      }\n    }\n\n    if (last && next) {\n      // 计算最逼近的\n      if (\n        Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) >\n        Math.abs(xScale.translate(next[FIELD_ORIGIN][xField]) - xValue)\n      ) {\n        last = next;\n      }\n    }\n  }\n\n  const distance = getXDistance(geometry.getXScale()); // 每个分类间的平均间距\n  if (!rst && Math.abs(xScale.translate(last[FIELD_ORIGIN][xField]) - xValue) <= distance / 2) {\n    rst = last;\n  }\n\n  return rst;\n}\n\n/**\n * @ignore\n * Gets tooltip items\n * @param data\n * @param geometry\n * @param [title]\n * @returns\n */\nexport function getTooltipItems(data: MappingDatum, geometry: Geometry, title: string = '') {\n  const originData = data[FIELD_ORIGIN];\n  const tooltipTitle = getTooltipTitle(originData, geometry, title);\n  const tooltipOption = geometry.tooltipOption;\n  const { defaultColor } = geometry.theme;\n  const items = [];\n  let name;\n  let value;\n\n  function addItem(itemName, itemValue) {\n    if (!isNil(itemValue) && itemValue !== '') {\n      // 值为 null的时候，忽视\n      const item = {\n        title: tooltipTitle,\n        data: originData, // 原始数据\n        mappingData: data, // 映射后的数据\n        name: itemName,\n        value: itemValue,\n        color: data.color || defaultColor,\n        marker: true,\n      };\n\n      items.push(item);\n    }\n  }\n\n  if (isObject(tooltipOption)) {\n    const { fields, callback } = tooltipOption;\n    if (callback) {\n      // 用户定义了回调函数\n      const callbackParams = fields.map((field: string) => {\n        return data[FIELD_ORIGIN][field];\n      });\n      const cfg = callback(...callbackParams);\n      const itemCfg = {\n        data: data[FIELD_ORIGIN], // 原始数据\n        mappingData: data, // 映射后的数据\n        title: tooltipTitle,\n        color: data.color || defaultColor,\n        marker: true, // 默认展示 marker\n        ...cfg,\n      };\n\n      items.push(itemCfg);\n    } else {\n      const scales = geometry.scales;\n      for (const field of fields) {\n        if (!isNil(originData[field])) {\n          // 字段数据为null, undefined 时不显示\n          const scale = scales[field];\n          name = getName(scale);\n          value = scale.getText(originData[field]);\n          addItem(name, value);\n        }\n      }\n    }\n  } else {\n    const valueScale = getTooltipValueScale(geometry);\n    if (!isNil(originData[valueScale.field])) {\n      // 字段数据为null ,undefined时不显示\n      value = getTooltipValue(originData, valueScale);\n      name = getTooltipName(originData, geometry);\n      addItem(name, value);\n    }\n  }\n  return items;\n}\n","import { ControllerCtor } from './base';\n\nconst LOAD_COMPONENT_CONTROLLERS: Record<string, ControllerCtor> = {};\n\n/**\n * 全局注册组件。\n * @param name 组件名称\n * @param plugin 注册的组件类\n * @returns void\n */\nexport function registerComponentController(name: string, plugin: ControllerCtor) {\n  LOAD_COMPONENT_CONTROLLERS[name] = plugin;\n}\n\n/**\n * 删除全局组件。\n * @param name 组件名\n * @returns void\n */\nexport function unregisterComponentController(name: string) {\n  delete LOAD_COMPONENT_CONTROLLERS[name];\n}\n\n/**\n * 获取以注册的组件名。\n * @returns string[] 返回已注册的组件名称\n */\nexport function getComponentControllerNames(): string[] {\n  return Object.keys(LOAD_COMPONENT_CONTROLLERS);\n}\n\n/**\n * 根据组件名获取组件类。\n * @param name 组件名\n * @returns 返回组件类\n */\nexport function getComponentController(name: string): ControllerCtor {\n  return LOAD_COMPONENT_CONTROLLERS[name];\n}\n","import { each, isNil, some } from '@antv/util';\nimport { Coordinate, getCoordinate, Point } from '../../dependents';\nimport { CoordinateOption } from '../../interface';\n\n/**\n * coordinate controller，职责：\n * 1. 创建实例\n * 2. 暂存配置\n */\nexport default class CoordinateController {\n  private option: CoordinateOption;\n  private coordinate: Coordinate;\n\n  constructor(option?: CoordinateOption) {\n    // 设置默认值，并存储配置\n    this.option = this.wrapperOption(option);\n  }\n\n  /**\n   * 更新配置\n   * @param option\n   */\n  public update(option: CoordinateOption) {\n    this.option = this.wrapperOption(option);\n    return this;\n  }\n\n  /**\n   * 是否存在某一个 action\n   * @param actionName\n   */\n  public hasAction(actionName: string) {\n    const { actions } = this.option;\n\n    return some(actions, (action) => action[0] === actionName);\n  }\n  /**\n   * 创建坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  public create(start: Point, end: Point) {\n    const { type, cfg } = this.option;\n    const isTheta = type === 'theta';\n\n    // 1. 起始位置\n    const props = {\n      start,\n      end,\n      ...cfg,\n    };\n\n    // 2. 创建实例\n    const C = getCoordinate(isTheta ? 'polar' : type);\n\n    this.coordinate = new C(props);\n\n    // @ts-ignore FIXME coordinate 包问题导致 type 不正确\n    this.coordinate.type = type;\n\n    // 3. 添加默认 action\n    if (isTheta) {\n      // 不存在 transpose，为其自动设置一个 action\n      if (!this.hasAction('transpose')) {\n        this.transpose();\n      }\n    }\n\n    // 4. 执行 action\n    this.execActions();\n\n    return this.coordinate;\n  }\n\n  /**\n   * 更新坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  public adjust(start: Point, end: Point) {\n    this.coordinate.update({\n      start,\n      end,\n    });\n\n    // 更新坐标系大小的时候，需要：\n    // 1. 重置 matrix\n    // 2. 重新执行作用于 matrix 的 action\n    this.coordinate.resetMatrix();\n    this.execActions(['scale', 'rotate', 'translate']);\n\n    return this.coordinate;\n  }\n\n  /**\n   * 旋转弧度\n   * @param angle\n   */\n  public rotate(angle: number) {\n    this.option.actions.push(['rotate', angle]);\n    return this;\n  }\n\n  /**\n   * 镜像\n   * @param dim\n   */\n  public reflect(dim: 'x' | 'y') {\n    this.option.actions.push(['reflect', dim]);\n    return this;\n  }\n\n  /**\n   * scale\n   * @param sx\n   * @param sy\n   */\n  public scale(sx: number, sy: number) {\n    this.option.actions.push(['scale', sx, sy]);\n    return this;\n  }\n\n  /**\n   * 对角变换\n   */\n  public transpose() {\n    this.option.actions.push(['transpose']);\n    return this;\n  }\n\n  /**\n   * 获取配置\n   */\n  public getOption(): CoordinateOption {\n    return this.option;\n  }\n\n  /**\n   * 获得 coordinate 实例\n   */\n  public getCoordinate() {\n    return this.coordinate;\n  }\n\n  /**\n   * 包装配置的默认值\n   * @param option\n   */\n  private wrapperOption(option: CoordinateOption): CoordinateOption {\n    return {\n      type: 'rect',\n      actions: [],\n      cfg: {},\n      ...option,\n    };\n  }\n\n  /**\n   * coordinate 实例执行 actions\n   * @params includeActions 如果没有指定，则执行全部，否则，执行指定的 action\n   */\n  private execActions(includeActions?: string[]) {\n    const { actions } = this.option;\n\n    each(actions, (action) => {\n      const [actionName, ...args] = action;\n\n      const shouldExec = isNil(includeActions) ? true : includeActions.includes(actionName);\n\n      if (shouldExec) {\n        this.coordinate[actionName](...args);\n      }\n    });\n  }\n}\n","import { Event as GEvent, IShape } from '../dependents';\nimport { Datum } from '../interface';\nimport View from './view';\n\n/**\n * @todo Whether it can(or necessary to) keep consistent with the structure of G.Event or directly use the structure of G.Event\n * G2 事件的事件包装类，基于 G.Event\n */\nexport default class Event {\n  /** 当前 target 归属的 view 实例 */\n  public view: View;\n  /** 被包装的原声 G 事件 */\n  public gEvent: GEvent;\n  /** 原始数据 */\n  public data?: Datum;\n  /** 事件类型 */\n  public type: string;\n\n  constructor(view: View, gEvent: GEvent, data?: Datum) {\n    this.view = view;\n    this.gEvent = gEvent;\n    this.data = data;\n    this.type = gEvent.type;\n  }\n\n  // below props are proxy props of G.event convenient\n\n  /** the real trigger shape of the event */\n  public get target(): IShape {\n    // @todo G 中事件定义为 object 不正确，这里先 ignore\n    // @ts-ignore\n    return this.gEvent.target;\n  }\n\n  /** 获取对应的 dom 原生时间 */\n  public get event(): any {\n    return this.gEvent.originalEvent;\n  }\n\n  /** x 画布坐标 */\n  public get x(): number {\n    return this.gEvent.x;\n  }\n\n  /** y 画布坐标 */\n  public get y(): number {\n    return this.gEvent.y;\n  }\n\n  /** x 窗口坐标 */\n  public get clientX(): number {\n    return this.gEvent.clientX;\n  }\n\n  /** y 窗口坐标 */\n  public get clientY(): number {\n    return this.gEvent.clientY;\n  }\n  // end for proxy events\n\n  /**\n   * event string\n   * @returns string\n   */\n  public toString(): string {\n    return `[Event (type=${this.type})]`;\n  }\n\n  /**\n   * clone a new event with same attributes\n   * @returns [[Event]]\n   */\n  public clone(): Event {\n    return new Event(this.view, this.gEvent, this.data);\n  }\n}\n","import { isArray, isNumber } from '@antv/util';\nimport { Padding, ViewPadding } from '../interface';\n\n/**\n * @ignore\n * 是否是自动 padding\n * @param padding\n */\nexport function isAutoPadding(padding: ViewPadding): padding is 'auto' {\n  return !isNumber(padding) && !isArray(padding);\n}\n\n/**\n * @ignore\n * padding 的解析逻辑\n * @param padding\n * @return [ top, right, bottom, left ]\n */\nexport function parsePadding(padding: number[] | number = 0): Padding {\n  let paddingArray = isArray(padding) ? padding : [padding];\n\n  switch (paddingArray.length) {\n    case 0:\n      paddingArray = [0, 0, 0, 0];\n      break;\n    case 1:\n      paddingArray = new Array(4).fill(paddingArray[0]);\n      break;\n    case 2:\n      paddingArray = [...paddingArray, ...paddingArray];\n      break;\n    case 3:\n      paddingArray = [...paddingArray, paddingArray[1]];\n      break;\n    default:\n      // 其他情况，只去四个\n      paddingArray = paddingArray.slice(0, 4);\n      break;\n  }\n\n  return paddingArray as [number, number, number, number];\n}\n","import { DIRECTION } from '../../constant';\nimport { BBox } from '../../dependents';\nimport { Padding } from '../../interface';\n\n/** @ignore */\nexport class PaddingCal {\n  private top: number;\n  private right: number;\n  private bottom: number;\n  private left: number;\n\n  /**\n   * 初始的 padding 数据\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  constructor(top: number = 0, right: number = 0, bottom: number = 0, left: number = 0) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n\n  /**\n   * 四周增加 padding\n   * @param padding\n   */\n  public shrink(padding: Padding): PaddingCal {\n    const [top, right, bottom, left] = padding;\n\n    this.top += top;\n    this.right += right;\n    this.bottom += bottom;\n    this.left += left;\n\n    return this;\n  }\n\n  /**\n   * 在某一个方向增加 padding\n   * @param bbox\n   * @param direction\n   */\n  public inc(bbox: BBox, direction: DIRECTION): PaddingCal {\n    const { width, height } = bbox;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        this.top += height;\n        break;\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        this.right += width;\n        break;\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        this.bottom += height;\n        break;\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        this.left += width;\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  /**\n   * 获得最终的 padding\n   */\n  public getPadding(): Padding {\n    return [this.top, this.right, this.bottom, this.left];\n  }\n}\n","import { each } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../constant';\nimport { ComponentOption, Padding } from '../../interface';\nimport { BBox } from '../../util/bbox';\nimport { isAutoPadding, parsePadding } from '../../util/padding';\nimport View from '../view';\nimport { PaddingCal } from './padding-cal';\n\n/**\n * @ignore\n * 根据 view 中的组件，计算实际的 padding 数值\n * @param view\n */\nexport function calculatePadding(view: View): Padding {\n  const padding = view.padding;\n\n  // 如果不是 auto padding，那么直接解析之后返回\n  if (!isAutoPadding(padding)) {\n    return parsePadding(padding);\n  }\n\n  // 是 auto padding，根据组件的情况，来计算 padding\n  const { viewBBox, autoPadding } = view;\n\n  const paddingCal = new PaddingCal();\n\n  each(view.getComponents(), (co: ComponentOption) => {\n    const { component, type } = co;\n\n    // grid, tooltip 不参入 padding 布局\n    if (type === COMPONENT_TYPE.GRID || type === COMPONENT_TYPE.TOOLTIP) {\n      return;\n    }\n\n    const bboxObject = component.getLayoutBBox();\n    const componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n\n    if (type === COMPONENT_TYPE.AXIS) {\n      const exceed = componentBBox.exceed(viewBBox);\n      paddingCal.shrink(exceed);\n    } else {\n      // 按照方向计算 padding\n      const direction = co.direction;\n\n      // const direction =\n      //   type === COMPONENT_TYPE.AXIS ? getTranslateDirection(co.direction, view.getCoordinate()) : co.direction;\n      paddingCal.inc(componentBBox, direction);\n    }\n  });\n\n  const calculatedPadding = paddingCal.getPadding();\n\n  if (autoPadding) {\n    const appendPadding = parsePadding(view.appendPadding);\n    // 取上一次以及当前计算结果的最大区间\n    return [\n      Math.max(autoPadding[0] - appendPadding[0], calculatedPadding[0]),\n      Math.max(autoPadding[1] - appendPadding[1], calculatedPadding[1]),\n      Math.max(autoPadding[2] - appendPadding[2], calculatedPadding[2]),\n      Math.max(autoPadding[3] - appendPadding[3], calculatedPadding[3]),\n    ];\n  }\n\n  return calculatedPadding;\n}\n","import { Controller } from '../controller/base';\nimport View from '../view';\nimport { parsePadding } from '../../util/padding';\nimport { calculatePadding } from './auto';\n\n// 布局函数的定义\n// 布局函数的职责：根据 view 中组件信息，计算出最终的图形 padding 数值，以及最终各个组件的布局和位置\nexport type Layout = (view: View) => void;\n\n/**\n * @ignore\n * G2 默认提供的 layout 函数\n * 内置布局函数处理的逻辑：\n *\n * 1. 如果 padding = 'auto'，那么自动根据组件的 direction 来计算 padding 数组\n * 2. 根据 padding 和 direction 去分配对应方向的 padding 数值\n * 3. 移动组件位置\n *\n * 对于组件响应式布局，可以尝试使用约束布局的方式去求解位置信息。\n * @param view\n */\nexport default function defaultLayout(view: View): void {\n  const axis = view.getController('axis');\n  const legend = view.getController('legend');\n  const annotation = view.getController('annotation');\n  const slider = view.getController('slider');\n\n  // 1. 自动加 auto padding -> absolute padding\n  const padding = calculatePadding(view);\n\n  // 2. 计算出新的 coordinateBBox\n  view.coordinateBBox = view.viewBBox.shrink(padding).shrink(parsePadding(view.appendPadding));\n\n  view.adjustCoordinate();\n\n  // 3. 根据最新的 coordinate 重新布局组件\n  [axis, slider, legend, annotation].forEach((controller: Controller) => {\n    if (controller) {\n      controller.layout();\n    }\n  });\n}\n","/**\n * view 中缓存 scale 的类\n */\nimport { deepMix, each, get, isNumber, last } from '@antv/util';\nimport { Scale } from '../../dependents';\nimport { Data, LooseObject, ScaleOption } from '../../interface';\nimport { createScaleByField, syncScale } from '../../util/scale';\n\n/** @ignore */\ninterface ScaleMeta {\n  readonly key: string;\n  readonly scale: Scale;\n  scaleDef: ScaleOption;\n  syncKey?: string;\n}\n\n/** @ignore */\nexport class ScalePool {\n  /** 所有的 scales */\n  private scales = new Map<string, ScaleMeta>();\n  /** 需要同步的 scale 分组， key: scaleKeyArray */\n  private syncScales = new Map<string, string[]>();\n\n  /**\n   * 创建 scale\n   * @param field\n   * @param data\n   * @param scaleDef\n   * @param key\n   */\n  public createScale(field: string, data: Data, scaleDef: ScaleOption, key: string): Scale {\n    let finalScaleDef = scaleDef;\n\n    const cacheScaleMeta = this.getScaleMeta(key);\n    if (data.length === 0 && cacheScaleMeta) {\n      // 在更新过程中数据变为空，同时 key 对应的 scale 已存在则保持 scale 同类型\n      const cacheScale = cacheScaleMeta.scale;\n      const cacheScaleDef: LooseObject = {\n        type: cacheScale.type,\n      };\n      if (cacheScale.isCategory) {\n        // 如果是分类类型，保持 values\n        cacheScaleDef.values = cacheScale.values;\n      }\n      finalScaleDef = deepMix(cacheScaleDef, cacheScaleMeta.scaleDef, scaleDef);\n    }\n\n    const scale = createScaleByField(field, data, finalScaleDef);\n\n    // 缓存起来\n    this.cacheScale(scale, scaleDef, key);\n\n    return scale;\n  }\n\n  /**\n   * 同步 scale\n   */\n  public sync() {\n    // 对于 syncScales 中每一个 syncKey 下面的 scale 数组进行同步处理\n    this.syncScales.forEach((scaleKeys: string[], syncKey: string) => {\n      // min, max, values\n      let min = Number.MAX_SAFE_INTEGER;\n      let max = Number.MIN_SAFE_INTEGER;\n      const values = [];\n\n      // 1. 遍历求得最大最小值，values 等\n      each(scaleKeys, (key: string) => {\n        const scale = this.getScale(key);\n\n        max = isNumber(scale.max) ? Math.max(max, scale.max) : max;\n        min = isNumber(scale.min) ? Math.min(min, scale.min) : min;\n\n        // 去重\n        each(scale.values, (v: any) => {\n          if (!values.includes(v)) {\n            values.push(v);\n          }\n        });\n      });\n\n      // 2. 同步\n      each(scaleKeys, (key: string) => {\n        const scale = this.getScale(key);\n\n        if (scale.isContinuous) {\n          scale.change({\n            min,\n            max,\n            values,\n          });\n        } else if (scale.isCategory) {\n          scale.change({\n            values,\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * 缓存一个 scale\n   * @param scale\n   * @param scaleDef\n   * @param key\n   */\n  private cacheScale(scale: Scale, scaleDef: ScaleOption, key: string) {\n    // 1. 缓存到 scales\n\n    let sm = this.getScaleMeta(key);\n    // 存在则更新，同时检测类型是否一致\n    if (sm && sm.scale.type === scale.type) {\n      syncScale(sm.scale, scale);\n      sm.scaleDef = scaleDef;\n      // 更新 scaleDef\n    } else {\n      sm = {\n        key,\n        scale,\n        scaleDef,\n      };\n\n      this.scales.set(key, sm);\n    }\n\n    // 2. 缓存到 syncScales，构造 Record<sync, string[]> 数据结构\n    const syncKey = this.getSyncKey(sm);\n    sm.syncKey = syncKey; // 设置 sync 同步的 key\n\n    // 因为存在更新 scale 机制，所以在缓存之前，先从原 syncScales 中去除 sync 的缓存引用\n    this.removeFromSyncScales(key);\n\n    // 存在 sync 标记才进行 sync\n    if (syncKey) {\n      // 不存在这个 syncKey，则创建一个空数组\n      let scaleKeys = this.syncScales.get(syncKey);\n      if (!scaleKeys) {\n        scaleKeys = [];\n        this.syncScales.set(syncKey, scaleKeys);\n      }\n      scaleKeys.push(key);\n    }\n  }\n\n  /**\n   * 通过 key 获取 scale\n   * @param key\n   */\n  public getScale(key: string): Scale {\n    let scaleMeta = this.getScaleMeta(key);\n    if (!scaleMeta) {\n      const field = last(key.split('-'));\n      const scaleKeys = this.syncScales.get(field);\n      if (scaleKeys && scaleKeys.length) {\n        scaleMeta = this.getScaleMeta(scaleKeys[0]);\n      }\n    }\n    return scaleMeta && scaleMeta.scale;\n  }\n\n  /**\n   * 在 view 销毁的时候，删除 scale 实例，防止内存泄露\n   * @param key\n   */\n  public deleteScale(key: string) {\n    const scaleMeta = this.getScaleMeta(key);\n    if (scaleMeta) {\n      const { syncKey } = scaleMeta;\n\n      const scaleKeys = this.syncScales.get(syncKey);\n\n      // 移除同步的关系\n      if (scaleKeys && scaleKeys.length) {\n        const idx = scaleKeys.indexOf(key);\n\n        if (idx !== -1) {\n          scaleKeys.splice(idx, 1);\n        }\n      }\n    }\n\n    // 删除 scale 实例\n    this.scales.delete(key);\n  }\n\n  /**\n   * 清空\n   */\n  public clear() {\n    this.scales.clear();\n    this.syncScales.clear();\n  }\n\n  /**\n   * 删除 sync scale 引用\n   * @param key\n   */\n  private removeFromSyncScales(key: string) {\n    this.syncScales.forEach((scaleKeys: string[], syncKey: string) => {\n      const idx = scaleKeys.indexOf(key);\n\n      if (idx !== -1) {\n        scaleKeys.splice(idx, 1);\n\n        // 删除空数组值\n        if (scaleKeys.length === 0) {\n          this.syncScales.delete(syncKey);\n        }\n\n        return false; // 跳出循环\n      }\n    });\n  }\n\n  /**\n   * get sync key\n   * @param sm\n   */\n  private getSyncKey(sm: ScaleMeta): string {\n    const { scale, scaleDef } = sm;\n    const { field } = scale;\n    const sync = get(scaleDef, ['sync']);\n\n    // 如果 sync = true，则直接使用字段名作为 syncKey\n    return sync === true ? field : sync === false ? undefined : sync;\n  }\n\n  /**\n   * 通过 key 获取 scale\n   * @param key\n   */\n  private getScaleMeta(key: string): ScaleMeta {\n    return this.scales.get(key);\n  }\n}\n","import {\n  clone,\n  deepMix,\n  each,\n  filter,\n  find,\n  flatten,\n  get,\n  isBoolean,\n  isFunction,\n  isNil,\n  isObject,\n  isString,\n  isUndefined,\n  mix,\n  remove,\n  set,\n  size,\n  uniqueId,\n  isEqual,\n} from '@antv/util';\nimport { Attribute, Coordinate, Event as GEvent, GroupComponent, ICanvas, IGroup, IShape, Scale } from '../dependents';\nimport {\n  AxisOption,\n  ComponentOption,\n  CoordinateCfg,\n  CoordinateOption,\n  Data,\n  Datum,\n  FacetCfgMap,\n  FilterCondition,\n  GeometryOption,\n  LegendOption,\n  LooseObject,\n  Options,\n  Point,\n  Region,\n  ScaleOption,\n  TooltipOption,\n  ViewCfg,\n  ViewPadding,\n  ViewAppendPadding,\n} from '../interface';\n\nimport { GROUP_Z_INDEX, LAYER, PLOT_EVENTS, VIEW_LIFE_CIRCLE } from '../constant';\n\nimport Base from '../base';\nimport { Facet, getFacet } from '../facet';\nimport Geometry from '../geometry/base';\nimport { createInteraction, Interaction } from '../interaction';\nimport { getTheme } from '../theme';\nimport { BBox } from '../util/bbox';\nimport { getCoordinateClipCfg, isFullCircle, isPointInCoordinate } from '../util/coordinate';\nimport { uniq } from '../util/helper';\nimport { findDataByPoint } from '../util/tooltip';\nimport Chart from './chart';\nimport { getComponentController, getComponentControllerNames } from './controller';\nimport Annotation from './controller/annotation';\nimport { Controller } from './controller/base';\nimport CoordinateController from './controller/coordinate';\nimport TooltipComponent from './controller/tooltip';\nimport Event from './event';\nimport defaultLayout, { Layout } from './layout';\nimport { ScalePool } from './util/scale-pool';\nimport { isAutoPadding } from '../util/padding';\n\n/**\n * G2 视图 View 类\n */\nexport class View extends Base {\n  /** view id，全局唯一。 */\n  public id: string = uniqueId('view');\n  /** 父级 view，如果没有父级，则为空。 */\n  public parent: View;\n  /** 所有的子 view。 */\n  public views: View[] = [];\n  /** 所有的 geometry 实例。 */\n  public geometries: Geometry[] = [];\n  /** 所有的组件 controllers。 */\n  public controllers: Controller[] = [];\n  /** 所有的 Interaction 实例。 */\n  public interactions: Record<string, Interaction> = {};\n\n  /** view 区域空间。 */\n  public viewBBox: BBox;\n  /** 坐标系的位置大小，ViewBBox - padding = coordinateBBox。 */\n  public coordinateBBox: BBox;\n  /** view 的 padding 大小，传入的配置（不是解析之后的值）。 */\n  public padding: ViewPadding;\n  /** padding的基础上增加的调整值 */\n  public appendPadding: ViewAppendPadding;\n  /** G.Canvas 实例。 */\n  public canvas: ICanvas;\n  /** 存储自动计算的 padding 值 */\n  public autoPadding: number[];\n\n  /** 三层 Group 图形中的背景层。 */\n  public backgroundGroup: IGroup;\n  /** 三层 Group 图形中的中间层。 */\n  public middleGroup: IGroup;\n  /** 三层 Group 图形中的前景层。 */\n  public foregroundGroup: IGroup;\n  /** 是否对超出坐标系范围的 Geometry 进行剪切 */\n  public limitInPlot: boolean = false;\n\n  /**\n   * 标记 view 的大小位置范围，均是 0 ~ 1 范围，便于开发者使用，起始点为左上角。\n   */\n  protected region: Region;\n  /** 主题配置，存储当前主题配置。 */\n  protected themeObject: LooseObject;\n\n  // 配置信息存储\n  protected options: Options = {\n    data: [],\n    animate: true, // 默认开启动画\n  }; // 初始化为空\n\n  /** 过滤之后的数据 */\n  protected filteredData: Data;\n\n  /** 配置开启的组件插件，默认为全局配置的组件。 */\n  private usedControllers: string[] = getComponentControllerNames();\n\n  /** 所有的 scales */\n  private scalePool: ScalePool = new ScalePool();\n\n  /** 布局函数 */\n  protected layoutFunc: Layout = defaultLayout;\n  /** 生成的坐标系实例，{@link https://github.com/antvis/coord/blob/master/src/coord/base.ts|Coordinate} */\n  protected coordinateInstance: Coordinate;\n  /** Coordinate 相关的控制器类，负责坐标系实例的创建、更新、变换等 */\n  protected coordinateController: CoordinateController;\n  /** 分面类实例 */\n  protected facetInstance: Facet;\n\n  /** 当前鼠标是否在 plot 内（CoordinateBBox） */\n  private isPreMouseInPlot: boolean = false;\n  /** 默认标识位，用于判定数据是否更新 */\n  private isDataChanged: boolean = false;\n  /** 用于判断坐标系范围是否发生变化的标志位 */\n  private isCoordinateChanged: boolean = false;\n  /** 从当前这个 view 创建的 scale key */\n  private createdScaleKeys = new Map<string, boolean>();\n  /** 背景色样式的 shape */\n  private backgruondStyleRectShape;\n\n  constructor(props: ViewCfg) {\n    super({ visible: props.visible });\n\n    const {\n      parent,\n      canvas,\n      backgroundGroup,\n      middleGroup,\n      foregroundGroup,\n      region = { start: { x: 0, y: 0 }, end: { x: 1, y: 1 } },\n      padding,\n      appendPadding,\n      theme,\n      options,\n      limitInPlot,\n    } = props;\n\n    this.parent = parent;\n    this.canvas = canvas;\n    this.backgroundGroup = backgroundGroup;\n    this.middleGroup = middleGroup;\n    this.foregroundGroup = foregroundGroup;\n    this.region = region;\n    this.padding = padding;\n    this.appendPadding = appendPadding;\n    // 接受父 view 传入的参数\n    this.options = { ...this.options, ...options };\n    this.limitInPlot = limitInPlot;\n\n    // 初始化 theme\n    this.themeObject = isObject(theme) ? deepMix({}, getTheme('default'), theme) : getTheme(theme);\n    this.init();\n  }\n\n  /**\n   * 设置 layout 布局函数\n   * @param layout 布局函数\n   * @returns void\n   */\n  public setLayout(layout: Layout) {\n    this.layoutFunc = layout;\n  }\n\n  /**\n   * 生命周期：初始化\n   * @returns voids\n   */\n  public init() {\n    // 计算画布的 viewBBox\n    this.calculateViewBBox();\n\n    // 事件委托机制\n    this.initEvents();\n\n    // 初始化组件 controller\n    this.initComponentController();\n\n    // 创建 coordinate controller\n    this.coordinateController = new CoordinateController(this.options.coordinate);\n\n    this.initOptions();\n\n    // 递归初始化子 view\n    const views = this.views;\n    for (let i = 0; i < views.length; i++) {\n      views[i].init();\n    }\n  }\n\n  /**\n   * 生命周期：渲染流程，渲染过程需要处理数据更新的情况。\n   * render 函数仅仅会处理 view 和子 view。\n   * @param isUpdate 是否触发更新流程。\n   */\n  public render(isUpdate: boolean = false) {\n    this.emit(VIEW_LIFE_CIRCLE.BEFORE_RENDER);\n    // 递归渲染\n    this.paint(isUpdate);\n\n    this.emit(VIEW_LIFE_CIRCLE.AFTER_RENDER);\n\n    if (this.visible === false) {\n      // 用户在初始化的时候声明 visible: false\n      this.changeVisible(false);\n    }\n  }\n\n  /**\n   * 生命周期：清空图表上所有的绘制内容，但是不销毁图表，chart 仍可使用。\n   * @returns void\n   */\n  public clear() {\n    this.emit(VIEW_LIFE_CIRCLE.BEFORE_CLEAR);\n    // 1. 清空缓存和计算数据\n    this.filteredData = [];\n    this.coordinateInstance = undefined;\n    this.isDataChanged = false; // 复位\n    this.isCoordinateChanged = false; // 复位\n\n    // 2. 清空 geometries\n    const geometries = this.geometries;\n    for (let i = 0; i < geometries.length; i++) {\n      geometries[i].clear();\n    }\n    this.geometries = [];\n\n    // 3. 清空 controllers\n    const controllers = this.controllers;\n    for (let i = 0; i < controllers.length; i++) {\n      controllers[i].clear();\n    }\n\n    // 4. 删除 scale 缓存\n    this.createdScaleKeys.forEach((v: boolean, k: string) => {\n      this.getRootView().scalePool.deleteScale(k);\n    });\n    this.createdScaleKeys.clear();\n\n    // 递归处理子 view\n    const views = this.views;\n    for (let i = 0; i < views.length; i++) {\n      views[i].clear();\n    }\n\n    this.emit(VIEW_LIFE_CIRCLE.AFTER_CLEAR);\n  }\n\n  /**\n   * 生命周期：销毁，完全无法使用。\n   * @returns void\n   */\n  public destroy() {\n    // 销毁前事件，销毁之后已经没有意义了，所以不抛出事件\n    this.emit(VIEW_LIFE_CIRCLE.BEFORE_DESTROY);\n    const interactions = this.interactions;\n    // 销毁 interactions\n    each(interactions, (interaction) => {\n      if (interaction) {\n        // 有可能已经销毁，设置了 undefined\n        interaction.destroy();\n      }\n    });\n\n    this.clear();\n\n    // 销毁 controller 中的组件\n    const controllers = this.controllers;\n    for (let i = 0, len = controllers.length; i < len; i++) {\n      const controller = controllers[i];\n      controller.destroy();\n    }\n\n    this.backgroundGroup.remove(true);\n    this.middleGroup.remove(true);\n    this.foregroundGroup.remove(true);\n\n    super.destroy();\n  }\n  /* end 生命周期函数 */\n\n  /**\n   * 显示或者隐藏整个 view。\n   * @param visible 是否可见\n   * @returns View\n   */\n  public changeVisible(visible: boolean): View {\n    super.changeVisible(visible);\n\n    const geometries = this.geometries;\n    for (let i = 0, len = geometries.length; i < len; i++) {\n      const geometry = geometries[i];\n      geometry.changeVisible(visible);\n    }\n\n    const controllers = this.controllers;\n    for (let i = 0, len = controllers.length; i < len; i++) {\n      const controller = controllers[i];\n      controller.changeVisible(visible);\n    }\n\n    this.foregroundGroup.set('visible', visible);\n    this.middleGroup.set('visible', visible);\n    this.backgroundGroup.set('visible', visible);\n\n    // group.set('visible', visible) 不会触发自动刷新\n    this.getCanvas().draw();\n\n    return this;\n  }\n\n  /**\n   * 装载数据源。\n   *\n   * ```ts\n   * view.data([{ city: '杭州', sale: 100 }, { city: '上海', sale: 110 } ]);\n   * ```\n   *\n   * @param data 数据源，json 数组。\n   * @returns View\n   */\n  public data(data: Data): View {\n    set(this.options, 'data', data);\n    this.isDataChanged = true;\n    return this;\n  }\n\n  /**\n   * @deprecated\n   * This method will be removed at G2 V4.1. Replaced by {@link #data(data)}\n   */\n  public source(data: Data): View {\n    console.warn('This method will be removed at G2 V4.1. Please use chart.data() instead.');\n    return this.data(data);\n  }\n\n  /**\n   * 设置数据筛选规则。\n   *\n   * ```ts\n   * view.filter('city', (value: any, datum: Datum) => value !== '杭州');\n   *\n   * // 删除 'city' 字段对应的筛选规则。\n   * view.filter('city', null);\n   * ```\n   *\n   * @param field 数据字段\n   * @param condition 筛选规则\n   * @returns View\n   */\n  public filter(field: string, condition: FilterCondition | null): View {\n    if (isFunction(condition)) {\n      set(this.options, ['filters', field], condition);\n      return this;\n    }\n    // condition 为空，则表示删除过滤条件\n    if (!condition && get(this.options, ['filters', field])) {\n      delete this.options.filters[field];\n    }\n\n    return this;\n  }\n\n  /**\n   * 开启或者关闭坐标轴。\n   *\n   * ```ts\n   *  view.axis(false); // 不展示坐标轴\n   * ```\n   * @param field 坐标轴开关\n   */\n  public axis(field: boolean): View;\n  /**\n   * 对特定的某条坐标轴进行配置。\n   *\n   * @example\n   * ```ts\n   * view.axis('city', false); // 不展示 'city' 字段对应的坐标轴\n   *\n   * // 将 'city' 字段对应的坐标轴的标题隐藏\n   * view.axis('city', {\n   *   title: null,\n   * });\n   * ```\n   *\n   * @param field 要配置的坐标轴对应的字段名称\n   * @param axisOption 坐标轴具体配置，更详细的配置项可以参考：https://github.com/antvis/component#axis\n   */\n  public axis(field: string, axisOption: AxisOption): View;\n  public axis(field: string | boolean, axisOption?: AxisOption): View {\n    if (isBoolean(field)) {\n      set(this.options, ['axes'], field);\n    } else {\n      set(this.options, ['axes', field], axisOption);\n    }\n\n    return this;\n  }\n\n  /**\n   * 对图例进行整体配置。\n   *\n   * ```ts\n   * view.legend(false); // 关闭图例\n   *\n   * view.legend({\n   *   position: 'right',\n   * }); // 图例进行整体配置\n   * ```\n   * @param field\n   * @returns View\n   */\n  public legend(field: LegendOption): View;\n  /**\n   * 对特定的图例进行配置。\n   *\n   * @example\n   * ```ts\n   * view.legend('city', false); // 关闭某个图例，通过数据字段名进行关联\n   *\n   * // 对特定的图例进行配置\n   * view.legend('city', {\n   *   position: 'right',\n   * });\n   * ```\n   *\n   * @param field 图例对应的数据字段名称\n   * @param legendOption 图例配置，更详细的配置项可以参考：https://github.com/antvis/component#axis\n   * @returns View\n   */\n  public legend(field: string, legendOption: LegendOption): View;\n  public legend(field: string | LegendOption, legendOption?: LegendOption): View {\n    if (isBoolean(field)) {\n      set(this.options, ['legends'], field);\n    } else if (isString(field)) {\n      set(this.options, ['legends', field], legendOption);\n    } else {\n      // 设置全局的 legend 配置\n      set(this.options, ['legends'], field);\n    }\n\n    return this;\n  }\n\n  /**\n   * 批量设置 scale 配置。\n   *\n   * ```ts\n   * view.scale({\n   *   sale: {\n   *     min: 0,\n   *     max: 100,\n   *   }\n   * });\n   * ```\n   * Scale 的详细配置项可以参考：https://github.com/antvis/scale#api\n   * @returns View\n   */\n  public scale(field: Record<string, ScaleOption>): View;\n  /**\n   * 为特性的数据字段进行 scale 配置。\n   *\n   * ```ts\n   * view.scale('sale', {\n   *   min: 0,\n   *   max: 100,\n   * });\n   * ```\n   *\n   * @returns View\n   */\n  public scale(field: string, scaleOption: ScaleOption): View;\n  public scale(field: string | Record<string, ScaleOption>, scaleOption?: ScaleOption): View {\n    if (isString(field)) {\n      set(this.options, ['scales', field], scaleOption);\n    } else if (isObject(field)) {\n      each(field, (v: ScaleOption, k: string) => {\n        set(this.options, ['scales', k], v);\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * tooltip 提示信息配置。\n   *\n   * ```ts\n   * view.tooltip(false); // 关闭 tooltip\n   *\n   * view.tooltip({\n   *   shared: true\n   * });\n   * ```\n   *\n   * @param cfg Tooltip 配置，更详细的配置项参考：https://github.com/antvis/component#tooltip\n   * @returns View\n   */\n  public tooltip(cfg: boolean | TooltipOption): View {\n    set(this.options, 'tooltip', cfg);\n\n    return this;\n  }\n\n  /**\n   * 辅助标记配置。\n   *\n   * ```ts\n   * view.annotation().line({\n   *   start: ['min', 85],\n   *   end: ['max', 85],\n   *   style: {\n   *     stroke: '#595959',\n   *     lineWidth: 1,\n   *     lineDash: [3, 3],\n   *   },\n   * });\n   * ```\n   * 更详细的配置项：https://github.com/antvis/component#annotation\n   * @returns [[Annotation]]\n   */\n  public annotation(): Annotation {\n    return this.getController('annotation') as Annotation;\n  }\n\n  /**\n   * @deprecated\n   * This method will be removed at G2 V4.1. Replaced by {@link #guide()}\n   */\n  public guide(): Annotation {\n    console.warn('This method will be removed at G2 V4.1. Please use chart.annotation() instead.');\n    return this.annotation();\n  }\n\n  /**\n   * 坐标系配置。\n   *\n   * @example\n   * ```ts\n   * view.coordinate({\n   *   type: 'polar',\n   *   cfg: {\n   *     radius: 0.85,\n   *   },\n   *   actions: [\n   *     [ 'transpose' ],\n   *   ],\n   * });\n   * ```\n   *\n   * @param option\n   * @returns\n   */\n  public coordinate(option?: CoordinateOption): CoordinateController;\n  /**\n   * 声明坐标系类型，并进行配置。\n   *\n   * ```ts\n   * // 直角坐标系，并进行转置变换\n   * view.coordinate('rect').transpose();\n   *\n   * // 默认创建直角坐标系\n   * view.coordinate();\n   * ```\n   *\n   * @param type 坐标系类型\n   * @param [coordinateCfg] 坐标系配置\n   * @returns\n   */\n  public coordinate(type: string, coordinateCfg?: CoordinateCfg): CoordinateController;\n  public coordinate(type: string | CoordinateOption, coordinateCfg?: CoordinateCfg): CoordinateController {\n    // 提供语法糖，使用更简单\n    if (isString(type)) {\n      set(this.options, 'coordinate', { type, cfg: coordinateCfg } as CoordinateOption);\n    } else {\n      set(this.options, 'coordinate', type);\n    }\n\n    // 更新 coordinate 配置\n    this.coordinateController.update(this.options.coordinate);\n\n    return this.coordinateController;\n  }\n\n  /**\n   * @deprecated\n   * This method will be removed at G2 V4.1. Replaced by {@link #coordinate()}\n   */\n  public coord(type: string | CoordinateOption, coordinateCfg?: CoordinateCfg): CoordinateController {\n    console.warn('This method will be removed at G2 V4.1. Please use chart.coordinate() instead.');\n    // @ts-ignore\n    return this.coordinate(type, coordinateCfg);\n  }\n\n  /**\n   * view 分面绘制。\n   *\n   * ```ts\n   * view.facet('rect', {\n   *   rowField: 'province',\n   *   columnField: 'category',\n   *   eachView: (innerView: View, facet?: FacetData) => {\n   *     innerView.line().position('city*sale');\n   *   },\n   * });\n   * ```\n   *\n   * @param type 分面类型\n   * @param cfg 分面配置， [[FacetCfgMap]]\n   * @returns View\n   */\n  public facet<T extends keyof FacetCfgMap>(type: T, cfg: FacetCfgMap[T]): View {\n    // 先销毁掉之前的分面\n    if (this.facetInstance) {\n      this.facetInstance.destroy();\n    }\n\n    // 创建新的分面\n    const Ctor = getFacet(type);\n\n    if (!Ctor) {\n      throw new Error(`facet '${type}' is not exist!`);\n    }\n\n    this.facetInstance = new Ctor(this, { ...cfg, type });\n\n    return this;\n  }\n\n  /*\n   * 开启或者关闭动画。\n   *\n   * ```ts\n   * view.animate(false);\n   * ```\n   *\n   * @param status 动画状态，true 表示开始，false 表示关闭\n   * @returns View\n   */\n  public animate(status: boolean): View {\n    set(this.options, 'animate', status);\n    return this;\n  }\n\n  /**\n   * 更新配置项，用于配置项式声明。\n   * @param options 配置项\n   */\n  public updateOptions(options: Options) {\n    this.clear(); // 清空\n    mix(this.options, options);\n\n    this.initOptions();\n    return this;\n  }\n\n  /**\n   * 往 `view.options` 属性中存储配置项。\n   * @param name 属性名称\n   * @param opt 属性值\n   * @returns view\n   */\n  public option(name: string, opt: any): View {\n    // 对于内置的 option，避免覆盖。\n    // name 在原型上，说明可能是内置 API，存在 option 被覆盖的风险，不处理\n    if (View.prototype[name]) {\n      throw new Error(`Can't use built in variable name \"${name}\", please change another one.`);\n    }\n\n    // 存入到 option 中\n    set(this.options, name, opt);\n    return this;\n  }\n\n  /**\n   * 设置主题。\n   *\n   * ```ts\n   * view.theme('dark'); // 'dark' 需要事先通过 `registerTheme()` 接口注册完成\n   *\n   * view.theme({ defaultColor: 'red' });\n   * ```\n   *\n   * @param theme 主题名或者主题配置\n   * @returns View\n   */\n  public theme(theme: string | LooseObject): View {\n    this.themeObject = isObject(theme) ? deepMix({}, this.themeObject, theme) : getTheme(theme);\n\n    return this;\n  }\n\n  /* end 一系列传入配置的 API */\n\n  /**\n   * Call the interaction based on the interaction name\n   *\n   * ```ts\n   * view.interaction('my-interaction', { extra: 'hello world' });\n   * ```\n   * 详细文档可以参考：https://g2.antv.vision/zh/docs/manual/tutorial/interaction\n   * @param name interaction name\n   * @param cfg interaction config\n   * @returns\n   */\n  public interaction(name: string, cfg?: LooseObject): View {\n    const existInteraction = this.interactions[name];\n    // 存在则先销毁已有的\n    if (existInteraction) {\n      existInteraction.destroy();\n    }\n\n    // 新建交互实例\n    const interaction = createInteraction(name, this, cfg);\n    if (interaction) {\n      interaction.init();\n      this.interactions[name] = interaction;\n    }\n    return this;\n  }\n\n  /**\n   * 移除当前 View 的 interaction\n   * ```ts\n   * view.removeInteraction('my-interaction');\n   * ```\n   * @param name interaction name\n   */\n  public removeInteraction(name: string) {\n    const existInteraction = this.interactions[name];\n    // 存在则先销毁已有的\n    if (existInteraction) {\n      existInteraction.destroy();\n      this.interactions[name] = undefined;\n    }\n  }\n\n  /**\n   * 修改数据，数据更新逻辑，数据更新仅仅影响当前这一层的 view\n   *\n   * ```ts\n   * view.changeData([{ city: '北京', sale: '200' }]);\n   * ```\n   *\n   * @param data\n   * @returns void\n   */\n  public changeData(data: Data) {\n    this.isDataChanged = true;\n    this.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA);\n    // 1. 保存数据\n    this.data(data);\n\n    // 2. 渲染\n    this.paint(true);\n\n    // 3. 遍历子 view 进行 change data\n    const views = this.views;\n    for (let i = 0, len = views.length; i < len; i++) {\n      const view = views[i];\n      // FIXME 子 view 有自己的数据的情况，该如何处理？\n      view.changeData(data);\n    }\n\n    this.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA);\n  }\n\n  /* View 管理相关的 API */\n\n  /**\n   * 创建子 view\n   *\n   * ```ts\n   * const innerView = view.createView({\n   *   start: { x: 0, y: 0 },\n   *   end: { x: 0.5, y: 0.5 },\n   *   padding: 8,\n   * });\n   * ```\n   *\n   * @param cfg\n   * @returns View\n   */\n  public createView(cfg?: Partial<ViewCfg>): View {\n    // 子 view 共享 options 配置数据\n    const sharedOptions = {\n      data: this.options.data,\n      scales: clone(this.options.scales),\n      axes: clone(this.options.axes),\n      coordinate: clone(this.coordinateController.getOption()),\n      tooltip: clone(this.options.tooltip),\n      legends: clone(this.options.legends),\n      animate: this.options.animate,\n      visible: this.visible,\n    };\n\n    const v = new View({\n      parent: this,\n      canvas: this.canvas,\n      // 子 view 共用三层 group\n      backgroundGroup: this.backgroundGroup.addGroup({ zIndex: GROUP_Z_INDEX.BG }),\n      middleGroup: this.middleGroup.addGroup({ zIndex: GROUP_Z_INDEX.MID }),\n      foregroundGroup: this.foregroundGroup.addGroup({ zIndex: GROUP_Z_INDEX.FORE }),\n      theme: this.themeObject,\n      padding: this.padding,\n      ...cfg,\n      options: {\n        ...sharedOptions,\n        ...get(cfg, 'options', {}),\n      },\n    });\n\n    this.views.push(v);\n\n    return v;\n  }\n\n  /**\n   * @deprecated\n   * This method will be removed at G2 V4.1. Replaced by {@link #createView()}\n   */\n  public view(cfg?: Partial<ViewCfg>) {\n    console.warn('This method will be removed at G2 V4.1. Please use chart.createView() instead.');\n    return this.createView(cfg);\n  }\n\n  /**\n   * 删除一个子 view\n   * @param view\n   * @return removedView\n   */\n  public removeView(view: View): View {\n    const removedView = remove(this.views, (v: View) => v === view)[0];\n\n    if (removedView) {\n      removedView.destroy();\n    }\n\n    return removedView;\n  }\n  /* end View 管理相关的 API */\n\n  // 一些 get 方法\n\n  /**\n   * 获取当前坐标系实例。\n   * @returns [[Coordinate]]\n   */\n  public getCoordinate() {\n    return this.coordinateInstance;\n  }\n\n  /**\n   * 获取当前 view 的主题配置。\n   * @returns themeObject\n   */\n  public getTheme(): LooseObject {\n    return this.themeObject;\n  }\n\n  /**\n   * 获得 x 轴字段的 scale 实例。\n   * @returns view 中 Geometry 对于的 x scale\n   */\n  public getXScale(): Scale {\n    // 拿第一个 Geometry 的 X scale\n    // 隐藏逻辑：一个 view 中的 Geometry 必须 x 字段一致\n    const g = this.geometries[0];\n    return g ? g.getXScale() : null;\n  }\n\n  /**\n   * 获取 y 轴字段的 scales 实例。\n   * @returns view 中 Geometry 对于的 y scale 数组\n   */\n  public getYScales(): Scale[] {\n    // 拿到所有的 Geometry 的 Y scale，然后去重\n    const tmpMap = {};\n    return this.geometries.map((g: Geometry) => {\n      const yScale = g.getYScale();\n      const field = yScale.field;\n      if (!tmpMap[field]) {\n        tmpMap[field] = true;\n        return yScale;\n      }\n    });\n  }\n\n  /**\n   * 获取 x 轴或者 y 轴对应的所有 scale 实例。\n   * @param dimType x | y\n   * @returns x 轴或者 y 轴对应的所有 scale 实例。\n   */\n  public getScalesByDim(dimType: 'x' | 'y'): Record<string, Scale> {\n    const geometries = this.geometries;\n    const scales = {};\n\n    for (let i = 0, len = geometries.length; i < len; i++) {\n      const geometry = geometries[i];\n      const scale = dimType === 'x' ? geometry.getXScale() : geometry.getYScale();\n      if (scale && !scales[scale.field]) {\n        scales[scale.field] = scale;\n      }\n    }\n\n    return scales;\n  }\n\n  /**\n   * 根据字段名去获取 scale 实例。\n   * @param field 数据字段名称\n   * @param key id\n   */\n  public getScaleByField(field: string, key?: string): Scale {\n    const defaultKey = key ? key : this.getScaleKey(field);\n    // 调用根节点 view 的方法获取\n    return this.getRootView().scalePool.getScale(defaultKey);\n  }\n\n  /**\n   * 返回所有配置信息。\n   * @returns 所有的 view API 配置。\n   */\n  public getOptions(): Options {\n    return this.options;\n  }\n\n  /**\n   * 获取 view 的数据（过滤后的数据）。\n   * @returns 处理过滤器之后的数据。\n   */\n  public getData() {\n    return this.filteredData;\n  }\n\n  /**\n   * 获得绘制的层级 group。\n   * @param layer 层级名称。\n   * @returns 对应层级的 Group。\n   */\n  public getLayer(layer: LAYER): IGroup {\n    return layer === LAYER.BG\n      ? this.backgroundGroup\n      : layer === LAYER.MID\n      ? this.middleGroup\n      : layer === LAYER.FORE\n      ? this.foregroundGroup\n      : this.foregroundGroup;\n  }\n\n  /**\n   * 对外暴露方法，判断一个点是否在绘图区域（即坐标系范围）内部。\n   * @param point 坐标点\n   */\n  public isPointInPlot(point: Point): boolean {\n    return isPointInCoordinate(this.getCoordinate(), point);\n  }\n\n  /**\n   * 获得所有的 legend 对应的 attribute 实例。\n   * @returns 维度字段的 Attribute 数组\n   */\n  public getLegendAttributes(): Attribute[] {\n    return (flatten(this.geometries.map((g: Geometry) => g.getGroupAttributes())) as unknown) as Attribute[];\n  }\n\n  /**\n   * 获取所有的分组字段的 scale 实例。\n   * @returns 获得分组字段的 scale 实例数组。\n   */\n  public getGroupScales(): Scale[] {\n    // 拿到所有的 Geometry 的 分组字段 scale，然后打平去重\n    const scales = this.geometries.map((g: Geometry) => g.getGroupScales());\n    return uniq(flatten(scales));\n  }\n\n  /**\n   * 获取 G.Canvas 实例。\n   * @returns G.Canvas 画布实例。\n   */\n  public getCanvas(): ICanvas {\n    return ((this.getRootView() as unknown) as Chart).canvas;\n  }\n\n  /**\n   * 获得根节点 view。\n   */\n  public getRootView(): View {\n    let v = this as View;\n\n    while (true) {\n      if (v.parent) {\n        v = v.parent;\n        continue;\n      }\n      break;\n    }\n    return v;\n  }\n\n  /**\n   * 获取该数据在可视化后，对应的画布坐标点。\n   * @param data 原始数据记录\n   * @returns 对应的画布坐标点\n   */\n  public getXY(data: Datum): Point {\n    const coordinate = this.getCoordinate();\n    const xScales = this.getScalesByDim('x');\n    const yScales = this.getScalesByDim('y');\n    let x;\n    let y;\n\n    each(data, (value, key) => {\n      if (xScales[key]) {\n        x = xScales[key].scale(value);\n      }\n      if (yScales[key]) {\n        y = yScales[key].scale(value);\n      }\n    });\n\n    if (!isNil(x) && !isNil(y)) {\n      return coordinate.convert({ x, y });\n    }\n  }\n\n  /**\n   * 获取 name 对应的 controller 实例\n   * @param name\n   */\n  public getController(name: string): Controller {\n    return find(this.controllers, (c: Controller) => c.name === name);\n  }\n\n  /**\n   * 显示 point 坐标点对应的 tooltip。\n   * @param point 画布坐标点\n   * @returns View\n   */\n  public showTooltip(point: Point): View {\n    const tooltip = this.getController('tooltip') as TooltipComponent;\n    if (tooltip) {\n      tooltip.showTooltip(point);\n    }\n    return this;\n  }\n\n  /**\n   * 隐藏 tooltip。\n   * @returns View\n   */\n  public hideTooltip(): View {\n    const tooltip = this.getController('tooltip') as TooltipComponent;\n    if (tooltip) {\n      tooltip.hideTooltip();\n    }\n    return this;\n  }\n\n  /**\n   * 将 tooltip 锁定到当前位置不能移动。\n   * @returns View\n   */\n  public lockTooltip(): View {\n    const tooltip = this.getController('tooltip') as TooltipComponent;\n    if (tooltip) {\n      tooltip.lockTooltip();\n    }\n    return this;\n  }\n\n  /**\n   * 将 tooltip 锁定解除。\n   * @returns View\n   */\n  public unlockTooltip(): View {\n    const tooltip = this.getController('tooltip') as TooltipComponent;\n    if (tooltip) {\n      tooltip.unlockTooltip();\n    }\n    return this;\n  }\n\n  /**\n   * 是否锁定 tooltip。\n   * @returns 是否锁定\n   */\n  public isTooltipLocked() {\n    const tooltip = this.getController('tooltip') as TooltipComponent;\n    return tooltip && tooltip.isTooltipLocked();\n  }\n\n  /**\n   * 获取当前 point 对应的 tooltip 数据项。\n   * @param point 坐标点\n   * @returns tooltip 数据项\n   */\n  public getTooltipItems(point: Point) {\n    const tooltip = this.getController('tooltip') as TooltipComponent;\n\n    return tooltip ? tooltip.getTooltipItems(point) : [];\n  }\n\n  /**\n   * 获取逼近的点的数据集合\n   * @param point 当前坐标点\n   * @returns  数据\n   */\n  public getSnapRecords(point: Point) {\n    const geometries = this.geometries;\n    let rst = [];\n    for (let i = 0, len = geometries.length; i < len; i++) {\n      const geom = geometries[i];\n      const dataArray = geom.dataArray;\n      geom.sort(dataArray); // 先进行排序，便于 tooltip 查找\n      let record;\n      for (let j = 0, dataLen = dataArray.length; j < dataLen; j++) {\n        const data = dataArray[j];\n        record = findDataByPoint(point, data, geom);\n        if (record) {\n          rst.push(record);\n        }\n      }\n    }\n\n    // 同样递归处理子 views\n    const views = this.views;\n    for (let i = 0, len = views.length; i < len; i++) {\n      const view = views[i];\n      const snapRecords = view.getSnapRecords(point);\n      rst = rst.concat(snapRecords);\n    }\n\n    return rst;\n  }\n\n  /**\n   * 获取所有的 pure component 组件，用于布局。\n   */\n  public getComponents(): ComponentOption[] {\n    let components = [];\n    const controllers = this.controllers;\n    for (let i = 0, len = controllers.length; i < len; i++) {\n      const controller = controllers[i];\n      components = components.concat(controller.getComponents());\n    }\n\n    return components;\n  }\n\n  /**\n   * 将 data 数据进行过滤。\n   * @param data\n   * @returns 过滤之后的数据\n   */\n  public filterData(data: Data): Data {\n    const { filters } = this.options;\n    // 不存在 filters，则不需要进行数据过滤\n    if (size(filters) === 0) {\n      return data;\n    }\n\n    // 存在过滤器，则逐个执行过滤，过滤器之间是 与 的关系\n    return filter(data, (datum: Datum, idx: number) => {\n      // 所有的 filter 字段\n      const fields = Object.keys(filters);\n\n      // 所有的条件都通过，才算通过\n      return fields.every((field: string) => {\n        const condition = filters[field];\n\n        // condition 返回 true，则保留\n        return condition(datum[field], datum, idx);\n      });\n    });\n  }\n\n  /**\n   * 对某一个字段进行过滤\n   * @param field\n   * @param data\n   */\n  public filterFieldData(field: string, data: Data): Data {\n    const { filters } = this.options;\n    const condition = get(filters, field);\n\n    if (isUndefined(condition)) {\n      return data;\n    }\n    return data.filter((datum: Datum, idx: number) => condition(datum[field], datum, idx));\n  }\n\n  /**\n   * 调整 coordinate 的坐标范围。\n   */\n  public adjustCoordinate() {\n    const { start: curStart, end: curEnd } = this.getCoordinate();\n    const start = this.coordinateBBox.bl;\n    const end = this.coordinateBBox.tr;\n\n    // 在 defaultLayoutFn 中只会在 coordinateBBox 发生变化的时候会调用 adjustCoorinate()，所以不用担心被置位\n    if (isEqual(curStart, start) && isEqual(curEnd, end)) {\n      this.isCoordinateChanged = false;\n      // 如果大小没有变化则不更新\n      return;\n    }\n    this.isCoordinateChanged = true;\n    this.coordinateInstance = this.coordinateController.adjust(start, end);\n  }\n\n  protected paint(isUpdate: boolean) {\n    this.renderDataRecursive(isUpdate);\n\n    // 处理 sync scale 的逻辑\n    this.syncScale();\n\n    this.emit(VIEW_LIFE_CIRCLE.BEFORE_PAINT);\n\n    this.renderBackgroundStyleShape();\n\n    this.renderLayoutRecursive(isUpdate);\n\n    this.renderPaintRecursive(isUpdate);\n\n    this.emit(VIEW_LIFE_CIRCLE.AFTER_PAINT);\n\n    this.isDataChanged = false; // 渲染完毕复位\n  }\n\n  /** 渲染背景样式的 shape */\n  private renderBackgroundStyleShape() {\n    // 只有根节点才处理\n    if (!this.parent) {\n      const background = get(this.themeObject, 'background');\n      // 1. 配置了背景色\n      if (background) {\n        // 1. 不存在则创建\n        if (!this.backgruondStyleRectShape) {\n          this.backgruondStyleRectShape = this.backgroundGroup.addShape('rect', {\n            attrs: {\n              zIndex: -1,\n            },\n          });\n        }\n\n        // 2. 有了 shape 之后设置背景，位置（更新的时候）\n        const { x, y, width, height } = this.viewBBox;\n        this.backgruondStyleRectShape.attr({\n          fill: background,\n          x,\n          y,\n          width,\n          height,\n        });\n      } else {\n        // 没有配置背景色\n        if (this.backgruondStyleRectShape) {\n          this.backgruondStyleRectShape.remove(true);\n          this.backgruondStyleRectShape = undefined;\n        }\n      }\n    }\n  }\n\n  /**\n   * 替换处理 view 的布局，最终是计算各个 view 的 coordinateBBox 和 coordinateInstance\n   * @param isUpdate\n   */\n  protected renderLayoutRecursive(isUpdate: boolean) {\n    // 1. 子 view 大小相对 coordinateBBox，changeSize 的时候需要重新计算\n    this.calculateViewBBox();\n    // 2. 更新 coordinate\n    this.adjustCoordinate();\n    // 3. 初始化组件 component\n    this.initComponents(isUpdate);\n    // 4. 进行布局，计算 coordinateBBox，进行组件布局，update 位置\n    this.doLayout();\n    // 5. 更新并存储最终的 padding 值\n    const viewBBox = this.viewBBox;\n    const coordinateBBox = this.coordinateBBox;\n\n    if (isAutoPadding(this.padding)) {\n      // 用户未设置 padding 时，将自动计算的 padding 保存至 autoPadding 属性中\n      this.autoPadding = [\n        coordinateBBox.tl.y - viewBBox.tl.y,\n        viewBBox.tr.x - coordinateBBox.tr.x,\n        viewBBox.bl.y - coordinateBBox.bl.y,\n        coordinateBBox.tl.x - viewBBox.tl.x,\n      ];\n    }\n\n    // 同样递归处理子 views\n    const views = this.views;\n    for (let i = 0, len = views.length; i < len; i++) {\n      const view = views[i];\n      view.renderLayoutRecursive(isUpdate);\n    }\n  }\n\n  /**\n   * 最终递归绘制组件和图形\n   * @param isUpdate\n   */\n  protected renderPaintRecursive(isUpdate: boolean) {\n    if (this.limitInPlot) {\n      const middleGroup = this.middleGroup;\n      const { type, attrs } = getCoordinateClipCfg(this.coordinateInstance);\n      middleGroup.setClip({\n        type,\n        attrs,\n      });\n    }\n\n    // 1. 渲染几何标记\n    this.paintGeometries(isUpdate);\n    // 2. 绘制组件\n    this.renderComponents(isUpdate);\n\n    // 同样递归处理子 views\n    const views = this.views;\n    for (let i = 0, len = views.length; i < len; i++) {\n      const view = views[i];\n      view.renderPaintRecursive(isUpdate);\n    }\n  }\n\n  // end Get 方法\n\n  /**\n   * 创建 scale，递归到顶层 view 去创建和缓存 scale\n   * @param field\n   * @param data\n   * @param scaleDef\n   * @param key\n   */\n  protected createScale(field: string, data: Data, scaleDef: ScaleOption, key: string): Scale {\n    // 1. 合并 field 对应的 scaleDef，合并原则是底层覆盖顶层（就近原则）\n    const currentScaleDef = get(this.options.scales, [field]);\n    const mergedScaleDef = { ...currentScaleDef, ...scaleDef };\n\n    // 2. 是否存在父 view，在则递归，否则创建\n    if (this.parent) {\n      return this.parent.createScale(field, data, mergedScaleDef, key);\n    }\n\n    // 3. 在根节点 view 通过 scalePool 创建\n    return this.scalePool.createScale(field, data, mergedScaleDef, key);\n  }\n\n  /**\n   * 递归渲染中的数据处理\n   * @param isUpdate\n   */\n  private renderDataRecursive(isUpdate: boolean) {\n    // 1. 处理数据\n    this.doFilterData();\n    // 2. 创建实例\n    this.createCoordinate();\n    // 3. 初始化 Geometry\n    this.initGeometries(isUpdate);\n    // 4. 处理分面逻辑，最终都是生成子 view 和 geometry\n    this.renderFacet(isUpdate);\n\n    // 同样递归处理子 views\n    const views = this.views;\n    for (let i = 0, len = views.length; i < len; i++) {\n      const view = views[i];\n      view.renderDataRecursive(isUpdate);\n    }\n  }\n\n  /**\n   * 计算 region，计算实际的像素范围坐标\n   * @private\n   */\n  private calculateViewBBox() {\n    let x;\n    let y;\n    let width;\n    let height;\n\n    if (this.parent) {\n      const bbox = this.parent.coordinateBBox;\n      // 存在 parent， 那么就是通过父容器大小计算\n      x = bbox.x;\n      y = bbox.y;\n      width = bbox.width;\n      height = bbox.height;\n    } else {\n      // 顶层容器，从 canvas 中取值 宽高\n      x = 0;\n      y = 0;\n      width = this.canvas.get('width');\n      height = this.canvas.get('height');\n    }\n\n    const { start, end } = this.region;\n\n    // 根据 region 计算当前 view 的 bbox 大小。\n    const viewBBox = new BBox(\n      x + width * start.x,\n      y + height * start.y,\n      width * (end.x - start.x),\n      height * (end.y - start.y)\n    );\n\n    if (!this.viewBBox || !this.viewBBox.isEqual(viewBBox)) {\n      // viewBBox 发生变化的时候进行更新\n      this.viewBBox = new BBox(\n        x + width * start.x,\n        y + height * start.y,\n        width * (end.x - start.x),\n        height * (end.y - start.y)\n      );\n\n      // 初始的 coordinate bbox 大小\n      this.coordinateBBox = this.viewBBox;\n    }\n  }\n\n  /**\n   * 初始化事件机制：G 4.0 底层内置支持 name:event 的机制，那么只要所有组件都有自己的 name 即可。\n   *\n   * G2 的事件只是获取事件委托，然后在 view 嵌套结构中，形成事件冒泡机制。\n   * 当前 view 只委托自己 view 中的 Component 和 Geometry 事件，并向上冒泡\n   * @private\n   */\n  private initEvents() {\n    // 三层 group 中的 shape 事件都会通过 G 冒泡上来的\n    this.foregroundGroup.on('*', this.onDelegateEvents);\n    this.middleGroup.on('*', this.onDelegateEvents);\n    this.backgroundGroup.on('*', this.onDelegateEvents);\n\n    this.canvas.on('*', this.onCanvasEvent);\n  }\n\n  private onCanvasEvent = (evt: GEvent): void => {\n    const name = evt.name;\n    if (!name.includes(':')) {\n      // 非委托事件\n      const e = this.createViewEvent(evt);\n      // 处理 plot 事件\n      this.doPlotEvent(e);\n      this.emit(name, e);\n    }\n  };\n\n  /**\n   * 初始化插件\n   */\n  private initComponentController() {\n    const usedControllers = this.usedControllers;\n    for (let i = 0, len = usedControllers.length; i < len; i++) {\n      const controllerName = usedControllers[i];\n      const Ctor = getComponentController(controllerName);\n      if (Ctor) {\n        this.controllers.push(new Ctor(this));\n      }\n    }\n  }\n\n  private createViewEvent(evt: GEvent) {\n    const { shape, name } = evt;\n\n    const data = shape ? shape.get('origin') : null;\n    // 事件在 view 嵌套中冒泡（暂不提供阻止冒泡的机制）\n    const e = new Event(this, evt, data);\n    e.type = name;\n    return e;\n  }\n  /**\n   * 触发事件之后\n   * @param evt\n   */\n  private onDelegateEvents = (evt: GEvent): void => {\n    // 阻止继续冒泡，防止重复事件触发\n    // evt.preventDefault();\n    const { name } = evt;\n    if (!name.includes(':')) {\n      return;\n    }\n    // 事件在 view 嵌套中冒泡（暂不提供阻止冒泡的机制）\n    const e = this.createViewEvent(evt);\n\n    // 包含有基本事件、组合事件\n    this.emit(name, e);\n    // const currentTarget = evt.currentTarget as IShape;\n    // const inheritNames = currentTarget.get('inheritNames');\n    // if (evt.delegateObject || inheritNames) {\n    //   const events = this.getEvents();\n    //   each(inheritNames, (subName) => {\n    //     const eventName = `${subName}:${type}`;\n    //     if (events[eventName]) {\n    //       this.emit(eventName, e);\n    //     }\n    //   });\n    // }\n  };\n\n  /**\n   * 处理 PLOT_EVENTS\n   * plot event 需要处理所有的基础事件，并判断是否在画布中，然后再决定是否要 emit。\n   * 对于 mouseenter、mouseleave 比较特殊，需要做一下数学比较。\n   * @param e\n   */\n  private doPlotEvent(e: Event) {\n    const { type, x, y } = e;\n\n    const point = { x, y };\n\n    const ALL_EVENTS = [\n      'mousedown',\n      'mouseup',\n      'mousemove',\n      'mouseleave',\n      'mousewheel',\n      'touchstart',\n      'touchmove',\n      'touchend',\n      'touchcancel',\n      'click',\n      'dblclick',\n      'contextmenu',\n    ];\n\n    if (ALL_EVENTS.includes(type)) {\n      const currentInPlot = this.isPointInPlot(point);\n\n      if (currentInPlot) {\n        const TYPE = `plot:${type}`; // 组合 plot 事件\n        e.type = TYPE;\n        this.emit(TYPE, e);\n        if (type === 'mouseleave' || type === 'touchend') {\n          // 在plot 内部却离开画布\n          this.isPreMouseInPlot = false;\n        }\n      }\n\n      // 对于 mouseenter, mouseleave 的计算处理\n      if (type === 'mousemove' || type === 'touchmove') {\n        if (this.isPreMouseInPlot && !currentInPlot) {\n          if (type === 'mousemove') {\n            e.type = PLOT_EVENTS.MOUSE_LEAVE;\n            this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);\n          }\n          e.type = PLOT_EVENTS.LEAVE;\n          this.emit(PLOT_EVENTS.LEAVE, e);\n        } else if (!this.isPreMouseInPlot && currentInPlot) {\n          if (type === 'mousemove') {\n            e.type = PLOT_EVENTS.MOUSE_ENTER;\n            this.emit(PLOT_EVENTS.MOUSE_ENTER, e);\n          }\n          e.type = PLOT_EVENTS.ENTER;\n          this.emit(PLOT_EVENTS.ENTER, e);\n        }\n        // 赋新的状态值\n        this.isPreMouseInPlot = currentInPlot;\n      } else if (type === 'mouseleave' || type === 'touchend') {\n        // 可能不在 currentInPlot 中\n        if (this.isPreMouseInPlot) {\n          if (type === 'mouseleave') {\n            e.type = PLOT_EVENTS.MOUSE_LEAVE;\n            this.emit(PLOT_EVENTS.MOUSE_LEAVE, e);\n          }\n          e.type = PLOT_EVENTS.LEAVE;\n          this.emit(PLOT_EVENTS.LEAVE, e);\n\n          this.isPreMouseInPlot = false;\n        }\n      }\n    }\n  }\n\n  // view 生命周期 —— 渲染流程\n\n  /**\n   * 处理筛选器，筛选数据\n   * @private\n   */\n  private doFilterData() {\n    const { data } = this.options;\n    this.filteredData = this.filterData(data);\n  }\n\n  /**\n   * 初始化 Geometries\n   * @private\n   */\n  private initGeometries(isUpdate: boolean) {\n    // 初始化图形的之前，先创建 / 更新 scales\n    this.createOrUpdateScales();\n    // 实例化 Geometry，然后 view 将所有的 scale 管理起来\n    const coordinate = this.getCoordinate();\n    const scaleDefs = get(this.options, 'scales', {});\n    const geometries = this.geometries;\n    for (let i = 0, len = geometries.length; i < len; i++) {\n      const geometry = geometries[i];\n      // 保持 scales 引用不要变化\n      geometry.scales = this.getGeometryScales();\n      const cfg = {\n        coordinate, // 使用 coordinate 引用，可以保持 coordinate 的同步更新\n        scaleDefs,\n        data: this.filteredData,\n        theme: this.themeObject,\n        isDataChanged: this.isDataChanged,\n        isCoordinateChanged: this.isCoordinateChanged,\n      };\n\n      if (isUpdate) {\n        // 数据发生更新\n        geometry.update(cfg);\n      } else {\n        geometry.init(cfg);\n      }\n    }\n\n    // Geometry 初始化之后，生成了 scale，然后进行调整 scale 配置\n    this.adjustScales();\n  }\n\n  /**\n   * 根据 Geometry 的所有字段创建 scales\n   * 如果存在，则更新，不存在则创建\n   */\n  private createOrUpdateScales() {\n    const fields = this.getScaleFields();\n    const groupedFields = this.getGroupedFields();\n\n    const { data, scales = {} } = this.getOptions();\n    const filteredData = this.filteredData;\n\n    for (let i = 0, len = fields.length; i < len; i++) {\n      const field = fields[i];\n      const scaleDef = scales[field];\n\n      // 调用方法，递归去创建\n      const key = this.getScaleKey(field);\n      this.createScale(\n        field,\n        // 分组字段的 scale 使用未过滤的数据创建\n        groupedFields.includes(field) ? data : filteredData,\n        scaleDef,\n        key\n      );\n\n      // 缓存从当前 view 创建的 scale key\n      this.createdScaleKeys.set(key, true);\n    }\n  }\n\n  /**\n   * 处理 scale 同步逻辑\n   */\n  private syncScale() {\n    // 最终调用 root view 的\n    this.getRootView().scalePool.sync();\n  }\n\n  /**\n   * 获得 Geometry 中的 scale 对象\n   */\n  private getGeometryScales(): Record<string, Scale> {\n    const fields = this.getScaleFields();\n\n    const scales = {};\n    for (let i = 0; i < fields.length; i++) {\n      const field = fields[i];\n      scales[field] = this.getScaleByField(field);\n    }\n\n    return scales;\n  }\n\n  private getScaleFields() {\n    const fields = [];\n    const tmpMap = {};\n    const geometries = this.geometries;\n    for (let i = 0; i < geometries.length; i++) {\n      const geometry = geometries[i];\n      const geometryScales = geometry.getScaleFields();\n      uniq(geometryScales, fields, tmpMap);\n    }\n    return fields;\n  }\n\n  private getGroupedFields() {\n    const fields = [];\n    const tmpMap = {};\n    const geometries = this.geometries;\n    for (let i = 0; i < geometries.length; i++) {\n      const geometry = geometries[i];\n      const groupFields = geometry.getGroupFields();\n      uniq(groupFields, fields, tmpMap);\n    }\n    return fields;\n  }\n\n  /**\n   * 调整 scale 配置\n   * @private\n   */\n  private adjustScales() {\n    // 调整目前包括：\n    // 分类 scale，调整 range 范围\n    this.adjustCategoryScaleRange();\n  }\n\n  /**\n   * 调整分类 scale 的 range，防止超出坐标系外面\n   * @private\n   */\n  private adjustCategoryScaleRange() {\n    const xyScales = [this.getXScale(), ...this.getYScales()].filter((e) => !!e);\n    const coordinate = this.getCoordinate();\n    const scaleOptions = this.options.scales;\n\n    each(xyScales, (scale: Scale) => {\n      const { field, values, isCategory, isIdentity } = scale;\n\n      // 分类或者 identity 的 scale 才进行处理\n      if (isCategory || isIdentity) {\n        // 存在 value 值，且用户没有配置 range 配置\n        if (values && !get(scaleOptions, [field, 'range'])) {\n          const count = values.length;\n          let range;\n\n          if (count === 1) {\n            range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5] 的状态\n          } else {\n            let widthRatio = 1;\n            let offset = 0;\n\n            if (isFullCircle(coordinate)) {\n              if (!coordinate.isTransposed) {\n                range = [0, 1 - 1 / count];\n              } else {\n                widthRatio = get(this.theme, 'widthRatio.multiplePie', 1 / 1.3);\n                offset = (1 / count) * widthRatio;\n                range = [offset / 2, 1 - offset / 2];\n              }\n            } else {\n              offset = 1 / count / 2; // 两边留下分类空间的一半\n              range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时\n            }\n          }\n          // 更新 range\n          scale.range = range;\n        }\n      }\n    });\n  }\n\n  /**\n   * 根据 options 配置、Geometry 字段配置，自动生成 components\n   * @param isUpdate 是否是更新\n   * @private\n   */\n  private initComponents(isUpdate: boolean) {\n    // 先全部清空，然后 render\n    const controllers = this.controllers;\n    for (let i = 0; i < controllers.length; i++) {\n      const controller = controllers[i];\n      // 更新则走更新逻辑；否则清空载重绘\n      if (isUpdate) {\n        controller.update();\n      } else {\n        controller.clear();\n        controller.render();\n      }\n    }\n  }\n\n  private doLayout() {\n    this.layoutFunc(this);\n  }\n\n  /**\n   * 创建坐标系\n   * @private\n   */\n  private createCoordinate() {\n    const start = this.coordinateBBox.bl;\n    const end = this.coordinateBBox.tr;\n    this.coordinateInstance = this.coordinateController.create(start, end);\n  }\n\n  /**\n   * 根据 options 配置自动渲染 geometry\n   * @private\n   */\n  private paintGeometries(isUpdate: boolean) {\n    const doAnimation = this.options.animate;\n    // geometry 的 paint 阶段\n    const coordinate = this.getCoordinate();\n    const canvasRegion = {\n      x: this.viewBBox.x,\n      y: this.viewBBox.y,\n      minX: this.viewBBox.minX,\n      minY: this.viewBBox.minY,\n      maxX: this.viewBBox.maxX,\n      maxY: this.viewBBox.maxY,\n      width: this.viewBBox.width,\n      height: this.viewBBox.height,\n    };\n    const geometries = this.geometries;\n    for (let i = 0; i < geometries.length; i++) {\n      const geometry = geometries[i];\n      geometry.coordinate = coordinate;\n      geometry.canvasRegion = canvasRegion;\n      if (!doAnimation) {\n        // 如果 view 不执行动画，那么 view 下所有的 geometry 都不执行动画\n        geometry.animate(false);\n      }\n      geometry.paint(isUpdate);\n    }\n  }\n\n  /**\n   * 最后的绘制组件\n   * @param isUpdate\n   */\n  private renderComponents(isUpdate: boolean) {\n    // 先全部清空，然后 render\n    for (let i = 0; i < this.getComponents().length; i++) {\n      const co = this.getComponents()[i];\n      (co.component as GroupComponent).render();\n    }\n  }\n\n  /**\n   * 渲染分面，会在其中进行数据分面，然后进行子 view 创建\n   * @param isUpdate\n   */\n  private renderFacet(isUpdate: boolean) {\n    if (this.facetInstance) {\n      if (isUpdate) {\n        this.facetInstance.update();\n      } else {\n        this.facetInstance.clear();\n        // 计算分面数据\n        this.facetInstance.init();\n        // 渲染组件和 views\n        this.facetInstance.render();\n      }\n    }\n  }\n\n  private initOptions() {\n    const { geometries = [], interactions = [], views = [], annotations = [] } = this.options;\n\n    // 创建 geometry 实例\n    for (let i = 0; i < geometries.length; i++) {\n      const geometryOption = geometries[i];\n      this.createGeometry(geometryOption);\n    }\n\n    // 创建 interactions 实例\n    for (let j = 0; j < interactions.length; j++) {\n      const interactionOption = interactions[j];\n      const { type, cfg } = interactionOption;\n      this.interaction(type, cfg);\n    }\n\n    // 创建 view 实例\n    for (let k = 0; k < views.length; k++) {\n      const viewOption = views[k];\n      this.createView(viewOption);\n    }\n\n    // 设置 annotation\n    const annotationComponent = this.getController('annotation') as Annotation;\n    for (let l = 0; l < annotations.length; l++) {\n      const annotationOption = annotations[l];\n      annotationComponent.annotation(annotationOption);\n    }\n  }\n\n  private createGeometry(geometryOption: GeometryOption) {\n    const { type, cfg = {} } = geometryOption;\n    if (this[type]) {\n      const geometry = this[type](cfg);\n      each(geometryOption, (v, k) => {\n        if (isFunction(geometry[k])) {\n          geometry[k](v);\n        }\n      });\n    }\n  }\n\n  /**\n   * scale key 的创建方式\n   * @param field\n   */\n  private getScaleKey(field: string): string {\n    return `${this.id}-${field}`;\n  }\n}\n\n/**\n * 注册 geometry 组件\n * @param name\n * @param Ctor\n * @returns Geometry\n */\nexport function registerGeometry(name: string, Ctor: any) {\n  // 语法糖，在 view API 上增加原型方法\n  View.prototype[name.toLowerCase()] = function (cfg: any = {}) {\n    const props = {\n      /** 图形容器 */\n      container: this.middleGroup.addGroup(),\n      labelsContainer: this.foregroundGroup.addGroup(),\n      ...cfg,\n    };\n\n    const geometry = new Ctor(props);\n    this.geometries.push(geometry);\n\n    return geometry;\n  };\n}\n\nexport default View;\n","import { debounce, each, isString, get } from '@antv/util';\nimport { ChartCfg } from '../interface';\nimport { GROUP_Z_INDEX } from '../constant';\nimport { getEngine } from '../engine';\nimport { createDom, getChartSize, removeDom, modifyCSS } from '../util/dom';\nimport View from './view';\n\n/**\n * Chart 类，是使用 G2 进行绘图的入口。\n */\nexport default class Chart extends View {\n  /** Chart 的 DOM 容器 */\n  public ele: HTMLElement;\n\n  /** 图表宽度 */\n  public width: number;\n  /** 图表高度 */\n  public height: number;\n  /** 是否开启局部刷新 */\n  public localRefresh: boolean;\n  /** 是否自适应 DOM 容器宽高，默认为 false，需要用户手动指定宽高 */\n  public autoFit: boolean;\n  /** 图表渲染引擎 */\n  public renderer: 'canvas' | 'svg';\n\n  private wrapperElement: HTMLElement;\n\n  // @ts-ignore\n  constructor(props: ChartCfg) {\n    const {\n      container,\n      width,\n      height,\n      autoFit = false,\n      padding,\n      appendPadding,\n      renderer = 'canvas',\n      pixelRatio,\n      localRefresh = true,\n      visible = true,\n      defaultInteractions = ['tooltip', 'legend-filter', 'legend-active', 'continuous-filter', 'ellipsis-text'],\n      options,\n      limitInPlot,\n      theme,\n    } = props;\n\n    const ele: HTMLElement = isString(container) ? document.getElementById(container) : container;\n\n    // 生成内部正式绘制的 div 元素\n    const wrapperElement = createDom('<div style=\"position:relative;\"></div>');\n    ele.appendChild(wrapperElement);\n\n    // if autoFit, use the container size, to avoid the graph render twice.\n    const size = getChartSize(ele, autoFit, width, height);\n\n    const G = getEngine(renderer);\n\n    const canvas = new G.Canvas({\n      container: wrapperElement,\n      pixelRatio,\n      localRefresh,\n      ...size,\n    });\n\n    // 调用 view 的创建\n    super({\n      parent: null,\n      canvas,\n      // create 3 group layers for views.\n      backgroundGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.BG }),\n      middleGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.MID }),\n      foregroundGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.FORE }),\n      padding,\n      appendPadding,\n      visible,\n      options,\n      limitInPlot,\n      theme,\n    });\n\n    this.ele = ele;\n    this.canvas = canvas;\n    this.width = size.width;\n    this.height = size.height;\n    this.autoFit = autoFit;\n    this.localRefresh = localRefresh;\n    this.renderer = renderer;\n    this.wrapperElement = wrapperElement;\n\n    // 自适应大小\n    this.updateCanvasStyle();\n    this.bindAutoFit();\n    this.initDefaultInteractions(defaultInteractions);\n  }\n\n  private initDefaultInteractions(interactions) {\n    each(interactions, (interaction) => {\n      this.interaction(interaction);\n    });\n  }\n\n  /**\n   * 改变图表大小，同时重新渲染。\n   * @param width 图表宽度\n   * @param height 图表高度\n   * @returns\n   */\n  public changeSize(width: number, height: number) {\n    // 如果宽高一致，那么 changeSize 不执行任何操作\n    if (this.width === width && this.height === height) {\n      return this;\n    }\n\n    this.width = width;\n    this.height = height;\n    this.canvas.changeSize(width, height);\n\n    // 重新渲染\n    this.render(true);\n\n    return this;\n  }\n\n  /**\n   * 销毁图表，同时解绑事件，销毁创建的 G.Canvas 实例。\n   * @returns void\n   */\n  public destroy() {\n    super.destroy();\n\n    this.unbindAutoFit();\n    this.canvas.destroy();\n\n    removeDom(this.wrapperElement);\n    this.wrapperElement = null;\n  }\n\n  /**\n   * 显示或隐藏图表\n   * @param visible 是否可见，true 表示显示，false 表示隐藏\n   * @returns\n   */\n  public changeVisible(visible: boolean) {\n    super.changeVisible(visible); // 需要更新 visible 变量\n    this.wrapperElement.style.display = visible ? '' : 'none';\n\n    return this;\n  }\n\n  /**\n   * 自动根据容器大小 resize 画布\n   */\n  public forceFit() {\n    // skip if already destroyed\n    if (!this.destroyed) {\n      // 注意第二参数用 true，意思是即时 autoFit = false，forceFit() 调用之后一样是适配容器\n      const { width, height } = getChartSize(this.ele, true, this.width, this.height);\n      this.changeSize(width, height);\n    }\n  }\n\n  private updateCanvasStyle() {\n    modifyCSS(this.canvas.get('el'), {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n    });\n  }\n\n  private bindAutoFit() {\n    if (this.autoFit) {\n      window.addEventListener('resize', this.onResize);\n    }\n  }\n\n  private unbindAutoFit() {\n    if (this.autoFit) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }\n\n  /**\n   * when container size changed, change chart size props, and re-render.\n   */\n  private onResize = debounce(() => {\n    this.forceFit();\n  }, 300);\n}\n","export { default as Chart } from './chart';\nexport { default as View, registerGeometry } from './view';\nexport { default as Event } from './event';\n\nexport { registerComponentController } from './controller';\n","import { each } from '@antv/util';\nimport { ComponentOption } from '../../interface';\nimport View from '../view';\n\n/** Component controller class type define */\nexport type ControllerCtor<O = any> = new (view: View) => Controller<O>;\n\n/**\n * Component Controller 规范需要定义的基类\n * 1. 规范的 option 输入\n * 2. 统一的信息获取 API\n * 3. 明确定义的组件事件（名称、数据）\n */\nexport abstract class Controller<O = unknown> {\n  /** 是否可见 */\n  public visible: boolean = true;\n  protected view: View;\n  /** option 配置，不同组件有自己不同的配置结构 */\n  protected option: O;\n  /** 所有的 component */\n  protected components: ComponentOption[] = [];\n\n  constructor(view: View) {\n    this.view = view;\n  }\n\n  public abstract get name(): string;\n\n  /**\n   * init the component\n   */\n  public abstract init();\n\n  /**\n   * render the components\n   */\n  public abstract render();\n\n  /**\n   * update the components\n   */\n  // public abstract update();\n\n  /**\n   * do layout\n   */\n  public abstract layout();\n\n  /**\n   * 组件的更新逻辑\n   *  - 根据字段为标识，为每一个组件生成一个 id，放到 option 中\n   *  - 更新的时候按照 id 去做 diff，然后对同的做处理\n   *  - 创建增加的\n   *  - 更新已有的\n   *  - 销毁删除的\n   */\n  public abstract update();\n\n  /**\n   * clear\n   */\n  public clear() {\n    // destroy all components\n    each(this.components, (co: ComponentOption) => {\n      co.component.destroy();\n    });\n\n    // clear all component instance\n    this.components = [];\n  }\n\n  /**\n   * destroy the component\n   */\n  public destroy() {\n    this.clear();\n  }\n\n  /**\n   * get all components\n   * @returns components array\n   */\n  public getComponents(): ComponentOption[] {\n    return this.components;\n  }\n\n  /**\n   * change visibility of component\n   * @param visible\n   */\n  public changeVisible(visible: boolean) {\n    if (this.visible === visible) {\n      return;\n    }\n    this.components.forEach((co: ComponentOption) => {\n      if (visible) {\n        co.component.show();\n      } else {\n        co.component.hide();\n      }\n    });\n    this.visible = visible;\n  }\n}\n",null,null,null,null,"import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/** @ignore */\ninterface AnimationMap {\n  [key: string]: Animation;\n}\n\ntype Animation = (element: IGroup | IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) => void;\n\nconst ANIMATIONS_MAP: AnimationMap = {};\n\n/**\n * 根据名称获取对应的动画执行函数\n * @param type 动画函数名称\n */\nexport function getAnimation(type: string) {\n  return ANIMATIONS_MAP[type.toLowerCase()];\n}\n\n/**\n * 注册动画执行函数\n * @param type 动画执行函数名称\n * @param animation 动画执行函数\n */\nexport function registerAnimation(type: string, animation: Animation) {\n  ANIMATIONS_MAP[type.toLowerCase()] = animation;\n}\n","import { deepMix, get, isFunction } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Coordinate, IGroup, IShape } from '../dependents';\nimport { AnimateCfg, Data, Datum, GAnimateCfg, Point } from '../interface';\nimport { AnimateExtraCfg } from './interface';\n\nimport { getAnimation } from './animation';\n\n// 默认的动画参数配置\nexport const DEFAULT_ANIMATE_CFG = {\n  appear: {\n    duration: 450,\n    easing: 'easeQuadOut',\n  }, // 初始入场动画配置\n  update: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时发生变更的动画配置\n  enter: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时新增元素的入场动画配置\n  leave: {\n    duration: 350,\n    easing: 'easeQuadIn',\n  }, // 更新时销毁动画配置\n};\n\n// 各个 Geometry 默认的动画执行函数\nconst GEOMETRY_ANIMATE_CFG = {\n  interval: (coordinate: Coordinate) => {\n    return {\n      enter: {\n        animation: coordinate.isRect ? (coordinate.isTransposed ? 'scale-in-x' : 'scale-in-y') : 'fade-in',\n      },\n      update: {\n        animation: coordinate.isPolar && coordinate.isTransposed ? 'sector-path-update' : null,\n      },\n      leave: {\n        animation: 'fade-out',\n      },\n    };\n  },\n  line: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  path: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  point: {\n    appear: {\n      animation: 'zoom-in',\n    },\n    enter: {\n      animation: 'zoom-in',\n    },\n    leave: {\n      animation: 'zoom-out',\n    },\n  },\n  area: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  polygon: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  schema: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  edge: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  label: {\n    appear: {\n      animation: 'fade-in',\n      delay: 450,\n    },\n    enter: {\n      animation: 'fade-in',\n    },\n    update: {\n      animation: 'position-update',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n};\n\n// 各个 Geometry 默认的群组出场动画\nconst GEOMETRY_GROUP_APPEAR_ANIMATION = {\n  line: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  area: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  path: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n  interval(coordinate: Coordinate) {\n    let animation;\n\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        // pie chart\n        animation = 'wave-in';\n      }\n    }\n    return {\n      animation,\n    };\n  },\n  schema: (coordinate) => {\n    let animation;\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n    }\n    return {\n      animation,\n    };\n  },\n  polygon: () => {\n    return {\n      animation: 'fade-in',\n      duration: 500,\n    };\n  },\n  edge: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n};\n\n// 解析用户的动画配置\nfunction parseAnimateConfig(animateCfg: AnimateCfg, data: Data | Datum): GAnimateCfg {\n  return {\n    delay: isFunction(animateCfg.delay) ? animateCfg.delay(data) : animateCfg.delay,\n    easing: isFunction(animateCfg.easing) ? animateCfg.easing(data) : animateCfg.easing,\n    duration: isFunction(animateCfg.duration) ? animateCfg.duration(data) : animateCfg.duration,\n    callback: animateCfg.callback,\n  };\n}\n\n/**\n * @ignore\n * 获取 elementName 对应的动画配置，当声明了 `animateType`，则返回 `animateType` 对应的动画配置\n * @param elementName 元素名称\n * @param coordinate 做表弟类型\n * @param animateType 可选，动画类型\n */\nexport function getDefaultAnimateCfg(elementName: string, coordinate: Coordinate, animateType?: string) {\n  let animateCfg = GEOMETRY_ANIMATE_CFG[elementName];\n\n  if (animateCfg) {\n    if (isFunction(animateCfg)) {\n      animateCfg = animateCfg(coordinate);\n    }\n    animateCfg = deepMix({}, DEFAULT_ANIMATE_CFG, animateCfg);\n\n    if (animateType) {\n      return animateCfg[animateType];\n    }\n  }\n  return animateCfg;\n}\n\n/**\n * @ignore\n * 工具函数\n * 根据用户传入的配置为 shape 执行动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外的信息\n */\nexport function doAnimate(shape: IGroup | IShape, animateCfg: AnimateCfg, cfg: AnimateExtraCfg) {\n  const data = get(shape.get('origin'), 'data', FIELD_ORIGIN);\n  const animation = animateCfg.animation; // 获取动画执行函数\n  const parsedAnimateCfg = parseAnimateConfig(animateCfg, data);\n  if (animation) {\n    // 用户声明了动画执行函数\n    const animateFunction = getAnimation(animation);\n    if (animateFunction) {\n      animateFunction(shape, parsedAnimateCfg, cfg);\n    }\n  } else {\n    // 没有声明，则根据 toAttrs 做差值动画\n    shape.animate(cfg.toAttrs, parsedAnimateCfg);\n  }\n}\n\n/**\n * @ignore\n * 执行 Geometry 群组入场动画\n * @param container 执行群组动画的图形元素\n * @param animateCfg 动画配置\n * @param geometryType geometry 类型\n * @param coordinate 坐标系对象\n * @param minYPoint y 轴最小值对应的画布坐标点\n */\nexport function doGroupAppearAnimate(\n  container: IGroup,\n  animateCfg: AnimateCfg,\n  geometryType: string,\n  coordinate: Coordinate,\n  minYPoint: Point\n) {\n  if (GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType]) {\n    const defaultCfg = GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType](coordinate);\n    const animation = getAnimation(get(defaultCfg, 'animation', ''));\n    if (animation) {\n      const cfg = {\n        ...DEFAULT_ANIMATE_CFG.appear,\n        ...defaultCfg,\n        ...animateCfg,\n      };\n      container.stopAnimate(); // 先结束当前 container 动画\n      animation(container, cfg, {\n        coordinate,\n        minYPoint,\n        toAttrs: null,\n      });\n    }\n  }\n}\n","import { deepMix, each, get, isArray, isFunction, isString } from '@antv/util';\nimport { doAnimate } from '../../animate';\nimport Base from '../../base';\nimport { BBox, IGroup, IShape } from '../../dependents';\nimport { AnimateOption, Datum, ShapeFactory, ShapeInfo, StateCfg } from '../../interface';\nimport { getReplaceAttrs } from '../../util/graphics';\nimport Geometry from '../base';\n\nimport { propagationDelegate } from '@antv/component/lib/util/event';\n\n/** Element 构造函数传入参数类型 */\ninterface ElementCfg {\n  /** 用于创建各种 shape 的工厂对象 */\n  shapeFactory: ShapeFactory;\n  /** shape 容器 */\n  container: IGroup;\n  /** 虚拟 group，用户可以不传入 */\n  offscreenGroup?: IGroup;\n  /** 是否可见 */\n  visible?: boolean;\n}\n\n/**\n * Element 图形元素。\n * 定义：在 G2 中，我们会将数据通过图形语法映射成不同的图形，比如点图，数据集中的每条数据会对应一个点，柱状图每条数据对应一个柱子，线图则是一组数据对应一条折线，Element 即一条/一组数据对应的图形元素，它代表一条数据或者一个数据集，在图形层面，它可以是单个 Shape 也可以是多个 Shape，我们称之为图形元素。\n */\nexport default class Element extends Base {\n  /** 用于创建各种 shape 的工厂对象 */\n  public shapeFactory: ShapeFactory;\n  /** shape 容器 */\n  public container: IGroup;\n  /** 最后创建的图形对象 */\n  public shape: IShape | IGroup;\n  /** shape 的动画配置 */\n  public animate: AnimateOption | boolean;\n\n  // 非构造函数属性，需要外部赋值\n  /** element 对应的 Geometry 实例 */\n  public geometry: Geometry;\n  /** 保存 shape 对应的 label */\n  public labelShape: IGroup[];\n\n  /** 绘制的 shape 类型 */\n  private shapeType: string;\n\n  /** shape 绘制需要的数据 */\n  private model: ShapeInfo;\n  /** 原始数据 */\n  private data: Datum;\n  // 存储当前开启的状态\n  private states: string[] = [];\n  private statesStyle;\n  // 虚拟 Group\n  private offscreenGroup: IGroup;\n\n  constructor(cfg: ElementCfg) {\n    super(cfg);\n\n    const { shapeFactory, container, offscreenGroup, visible = true } = cfg;\n    this.shapeFactory = shapeFactory;\n    this.container = container;\n    this.offscreenGroup = offscreenGroup;\n    this.visible = visible;\n  }\n\n  /**\n   * 绘制图形。\n   * @param model 绘制数据。\n   * @param isUpdate 可选，是否是更新发生后的绘制。\n   */\n  public draw(model: ShapeInfo, isUpdate: boolean = false) {\n    this.model = model;\n    this.data = model.data; // 存储原始数据\n    this.shapeType = this.getShapeType(model);\n\n    // 绘制图形\n    this.drawShape(model, isUpdate);\n\n    if (this.visible === false) {\n      // 用户在初始化的时候声明 visible: false\n      this.changeVisible(false);\n    }\n  }\n\n  /**\n   * 更新图形。\n   * @param model 更新的绘制数据。\n   */\n  public update(model: ShapeInfo) {\n    const { shapeFactory, shape } = this;\n    if (!shape) {\n      return;\n    }\n\n    // 更新数据\n    this.model = model;\n    this.data = model.data;\n    this.shapeType = this.getShapeType(model);\n\n    // step 1: 更新 shape 携带的信息\n    this.setShapeInfo(shape, model);\n\n    // step 2: 使用虚拟 Group 重新绘制 shape，然后更新当前 shape\n    const offscreenGroup = this.getOffscreenGroup();\n    const newShape = shapeFactory.drawShape(this.shapeType, model, offscreenGroup);\n    // @ts-ignore\n    newShape.cfg.data = this.data;\n    // @ts-ignore\n    newShape.cfg.origin = model;\n\n    // step 3: 同步 shape 样式\n    this.syncShapeStyle(shape, newShape, '', this.getAnimateCfg('update'));\n  }\n\n  /**\n   * 销毁 element 实例。\n   */\n  public destroy() {\n    const { shapeFactory, shape } = this;\n\n    if (shape) {\n      const animateCfg = this.getAnimateCfg('leave');\n      if (animateCfg) {\n        // 指定了动画配置则执行销毁动画\n        doAnimate(shape, animateCfg, {\n          coordinate: shapeFactory.coordinate,\n          toAttrs: {\n            ...shape.attr(),\n          },\n        });\n      } else {\n        // 否则直接销毁\n        shape.remove(true);\n      }\n    }\n\n    // reset\n    this.states = [];\n    this.shapeFactory = undefined;\n    this.container = undefined;\n    this.shape = undefined;\n    this.animate = undefined;\n    this.geometry = undefined;\n    this.labelShape = undefined;\n    this.model = undefined;\n    this.data = undefined;\n    this.offscreenGroup = undefined;\n    this.statesStyle = undefined;\n\n    super.destroy();\n  }\n\n  /**\n   * 显示或者隐藏 element。\n   * @param visible 是否可见。\n   */\n  public changeVisible(visible: boolean) {\n    super.changeVisible(visible);\n\n    if (visible) {\n      if (this.shape) {\n        this.shape.show();\n      }\n      if (this.labelShape) {\n        this.labelShape.forEach((label: IGroup) => {\n          label.show();\n        });\n      }\n    } else {\n      if (this.shape) {\n        this.shape.hide();\n      }\n      if (this.labelShape) {\n        this.labelShape.forEach((label: IGroup) => {\n          label.hide();\n        });\n      }\n    }\n  }\n\n  /**\n   * 设置 Element 的状态。\n   *\n   * 目前 Element 开放三种状态：\n   * 1. active\n   * 2. selected\n   * 3. inactive\n   *\n   * 这三种状态相互独立，可以进行叠加。\n   *\n   * 这三种状态的样式可在 [[Theme]] 主题中或者通过 `geometry.state()` 接口进行配置。\n   *\n   * ```ts\n   * // 激活 active 状态\n   * setState('active', true);\n   * ```\n   *\n   * @param stateName 状态名\n   * @param stateStatus 是否开启状态\n   */\n  public setState(stateName: string, stateStatus: boolean) {\n    const { states, shapeFactory, model, shape, shapeType } = this;\n\n    const index = states.indexOf(stateName);\n    if (stateStatus) {\n      // 开启状态\n      if (index > -1) {\n        // 该状态已经开启，则返回\n        return;\n      }\n      states.push(stateName);\n      if (stateName === 'active' || stateName === 'selected') {\n        shape.toFront();\n      }\n    } else {\n      if (index === -1) {\n        // 关闭状态，但是状态未设置过\n        return;\n      }\n      states.splice(index, 1);\n      if (stateName === 'active' || stateName === 'selected') {\n        shape.toBack();\n      }\n    }\n\n    // 使用虚拟 group 重新绘制 shape，然后对这个 shape 应用状态样式后，更新当前 shape。\n    const offscreenShape = shapeFactory.drawShape(shapeType, model, this.getOffscreenGroup());\n    if (states.length) {\n      // 应用当前状态\n      states.forEach((state) => {\n        this.syncShapeStyle(shape, offscreenShape, state, null);\n      });\n    } else {\n      // 如果没有状态，则需要恢复至原始状态\n      this.syncShapeStyle(shape, offscreenShape, 'reset', null);\n    }\n\n    offscreenShape.remove(true); // 销毁，减少内存占用\n\n    const eventObject = {\n      state: stateName,\n      stateStatus,\n      element: this,\n      target: this.container,\n    };\n    this.container.emit('statechange', eventObject);\n    // @ts-ignore\n    propagationDelegate(this.shape, 'statechange', eventObject);\n  }\n\n  /**\n   * 清空状量态，恢复至初始状态。\n   */\n  public clearStates() {\n    const states = this.states;\n\n    each(states, (state) => {\n      this.setState(state, false);\n    });\n\n    this.states = [];\n  }\n\n  /**\n   * 查询当前 Element 上是否已设置 `stateName` 对应的状态。\n   * @param stateName 状态名称。\n   * @returns true 表示存在，false 表示不存在。\n   */\n  public hasState(stateName: string): boolean {\n    return this.states.includes(stateName);\n  }\n\n  /**\n   * 获取当前 Element 上所有的状态。\n   * @returns 当前 Element 上所有的状态数组。\n   */\n  public getStates(): string[] {\n    return this.states;\n  }\n\n  /**\n   * 获取 Element 对应的原始数据。\n   * @returns 原始数据。\n   */\n  public getData(): Datum {\n    return this.data;\n  }\n\n  /**\n   * 获取 Element 对应的图形绘制数据。\n   * @returns 图形绘制数据。\n   */\n  public getModel(): ShapeInfo {\n    return this.model;\n  }\n\n  /**\n   * 返回 Element 元素整体的 bbox，包含文本及文本连线（有的话）。\n   * @returns 整体包围盒。\n   */\n  public getBBox(): BBox {\n    const { shape, labelShape } = this;\n    let bbox = {\n      x: 0,\n      y: 0,\n      minX: 0,\n      minY: 0,\n      maxX: 0,\n      maxY: 0,\n      width: 0,\n      height: 0,\n    };\n    if (shape) {\n      bbox = shape.getCanvasBBox();\n    }\n    if (labelShape) {\n      labelShape.forEach((label: IGroup) => {\n        const labelBBox = label.getCanvasBBox();\n        bbox.x = Math.min(labelBBox.x, bbox.x);\n        bbox.y = Math.min(labelBBox.y, bbox.y);\n        bbox.minX = Math.min(labelBBox.minX, bbox.minX);\n        bbox.minY = Math.min(labelBBox.minY, bbox.minY);\n        bbox.maxX = Math.max(labelBBox.maxX, bbox.maxX);\n        bbox.maxY = Math.max(labelBBox.maxY, bbox.maxY);\n      });\n    }\n\n    bbox.width = bbox.maxX - bbox.minX;\n    bbox.height = bbox.maxY - bbox.minY;\n\n    return bbox;\n  }\n\n  private getStatesStyle() {\n    if (!this.statesStyle) {\n      const { shapeType, geometry, shapeFactory } = this;\n      const stateOption = geometry.stateOption;\n      const defaultShapeType = shapeFactory.defaultShapeType;\n      const stateTheme = shapeFactory.theme[shapeType] || shapeFactory.theme[defaultShapeType];\n      this.statesStyle = deepMix({}, stateTheme, stateOption);\n    }\n\n    return this.statesStyle;\n  }\n\n  // 从主题中获取对应状态量的样式\n  private getStateStyle(stateName: string, shapeKey?: string): StateCfg {\n    const statesStyle = this.getStatesStyle();\n    const stateCfg = get(statesStyle, [stateName, 'style'], {});\n    const shapeStyle = stateCfg[shapeKey] || stateCfg;\n    if (isFunction(shapeStyle)) {\n      return shapeStyle(this);\n    }\n\n    return shapeStyle;\n  }\n\n  // 获取动画配置\n  private getAnimateCfg(animateType: string) {\n    const animate = this.animate;\n    if (animate) {\n      return animate[animateType];\n    }\n\n    return null;\n  }\n\n  // 绘制图形\n  private drawShape(model: ShapeInfo, isUpdate: boolean = false) {\n    const { shapeFactory, container, shapeType } = this;\n\n    // 自定义 shape 有可能返回空 shape\n    this.shape = shapeFactory.drawShape(shapeType, model, container);\n\n    if (this.shape) {\n      this.setShapeInfo(this.shape, model); // 存储绘图数据\n      // @ts-ignore\n      const name = this.shape.cfg.name;\n      // 附加 element 的 name, name 现在支持数组了，很好用了\n      if (!name) {\n        // 这个地方如果用户添加了 name, 则附加 name ，否则就添加自己的 name\n        // @ts-ignore\n        this.shape.cfg.name = ['element', this.shapeFactory.geometryType];\n      } else if (isString(name)) {\n        // @ts-ignore\n        this.shape.cfg.name = ['element', name];\n      }\n      // 执行入场动画\n      const animateType = isUpdate ? 'enter' : 'appear';\n      const animateCfg = this.getAnimateCfg(animateType);\n      if (animateCfg) {\n        doAnimate(this.shape, animateCfg, {\n          coordinate: shapeFactory.coordinate,\n          toAttrs: {\n            ...this.shape.attr(),\n          },\n        });\n      }\n    }\n  }\n\n  // 获取虚拟 Group\n  private getOffscreenGroup() {\n    if (!this.offscreenGroup) {\n      const GroupCtor = this.container.getGroupBase(); // 获取分组的构造函数\n      this.offscreenGroup = new GroupCtor({});\n    }\n\n    return this.offscreenGroup;\n  }\n\n  // 设置 shape 上需要携带的信息\n  private setShapeInfo(shape: IShape | IGroup, data: ShapeInfo) {\n    // @ts-ignore\n    shape.cfg.origin = data;\n    // @ts-ignore\n    shape.cfg.element = this;\n    if (shape.isGroup()) {\n      const children = shape.get('children');\n      children.forEach((child) => {\n        this.setShapeInfo(child, data);\n      });\n    }\n  }\n\n  // 更新当前 shape 的样式\n  private syncShapeStyle(\n    sourceShape: IGroup | IShape,\n    targetShape: IGroup | IShape,\n    state: string = '',\n    animateCfg,\n    index: number = 0\n  ) {\n    if (sourceShape.isGroup()) {\n      const children = sourceShape.get('children');\n      const newChildren = targetShape.get('children');\n      for (let i = 0; i < children.length; i++) {\n        this.syncShapeStyle(children[i], newChildren[i], state, animateCfg, index + i);\n      }\n    } else {\n      if (state && state !== 'reset') {\n        let name = sourceShape.get('name');\n        if (isArray(name)) {\n          // 会附加 element 的 name\n          name = name[1];\n        }\n        const style = this.getStateStyle(state, name || index); // 如果用户没有设置 name，则默认根据索引值\n        targetShape.attr(style);\n      }\n      const newAttrs = getReplaceAttrs(sourceShape as IShape, targetShape as IShape);\n\n      if (this.animate) {\n        if (animateCfg) {\n          // 需要进行动画\n          doAnimate(sourceShape, animateCfg, {\n            coordinate: this.shapeFactory.coordinate,\n            toAttrs: newAttrs,\n            shapeModel: this.model,\n          });\n        } else if (state) {\n          sourceShape.stopAnimate();\n          sourceShape.animate(newAttrs, {\n            duration: 300,\n          });\n        } else {\n          sourceShape.attr(newAttrs);\n        }\n      } else {\n        sourceShape.attr(newAttrs);\n      }\n    }\n  }\n\n  private getShapeType(model: ShapeInfo) {\n    const shape = get(model, 'shape');\n    return isArray(shape) ? shape[0] : shape;\n  }\n}\n","import { BBox, IGroup, IShape } from '../../dependents';\nimport { LooseObject } from '../../interface';\nimport { GeometryLabelConstructor } from './base';\nimport { LabelItem } from './interface';\n\n/**\n * label 布局函数定义\n * @param items 存储每个 label 的详细信息\n * @param labels 所有的 labels 图形实例\n * @param shapes 所有 label 对应的图形元素实例\n * @param region 画布区域\n * @param cfg 用于存储各个布局函数开放给用户的配置数据\n */\ntype GeometryLabelsLayoutFn = (\n  items: LabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox,\n  cfg?: LooseObject\n) => void;\n\nconst GEOMETRY_LABELS_MAP: Record<string, GeometryLabelConstructor> = {};\nconst GEOMETRY_LABELS_LAYOUT_MAP: Record<string, GeometryLabelsLayoutFn> = {};\n\n/**\n * 获取 `type` 对应的 [[GeometryLabel]] 类\n * @param type\n * @returns\n */\nexport function getGeometryLabel(type: string): GeometryLabelConstructor {\n  return GEOMETRY_LABELS_MAP[type.toLowerCase()];\n}\n\n/**\n * 注册定义的 GeometryLabel 类\n * @param type GeometryLabel 类型名称\n * @param ctor GeometryLabel 类\n */\nexport function registerGeometryLabel(type: string, ctor: GeometryLabelConstructor) {\n  GEOMETRY_LABELS_MAP[type.toLowerCase()] = ctor;\n}\n\n/**\n * 获取 `type` 对应的 [[GeometryLabelsLayoutFn]] label 布局函数\n * @param type 布局函数名称\n * @returns\n */\nexport function getGeometryLabelLayout(type: string): GeometryLabelsLayoutFn {\n  return GEOMETRY_LABELS_LAYOUT_MAP[type.toLowerCase()];\n}\n\n/**\n * 注册定义的 label 布局函数\n * @param type label 布局函数名称\n * @param layoutFn label 布局函数\n */\nexport function registerGeometryLabelLayout(type: string, layoutFn: GeometryLabelsLayoutFn) {\n  GEOMETRY_LABELS_LAYOUT_MAP[type.toLowerCase()] = layoutFn;\n}\n","import { parsePathString } from '@antv/path-util';\nimport { deepMix, get, upperFirst } from '@antv/util';\nimport { IGroup, IShape, PathCommand } from '../../dependents';\nimport {\n  Point,\n  RegisterShape,\n  RegisterShapeFactory,\n  Shape,\n  ShapeFactory,\n  ShapeInfo,\n  ShapeMarkerAttrs,\n  ShapeMarkerCfg,\n  ShapePoint,\n} from '../../interface';\n\nimport { convertNormalPath, convertPolarPath } from './util/path';\n\n/** ShapeFactory 基类 */\nconst ShapeFactoryBase = {\n  /** 坐标系对象 */\n  coordinate: null,\n  /** 默认绘制的 Shape 类型 */\n  defaultShapeType: null,\n  /** 主题样式 */\n  theme: null,\n  /**\n   * 获取 shape 绘制需要的关键点\n   * @param shapeType shape 类型\n   * @param shapePoint 每条数据映射后的坐标点以及 size 数值\n   * @returns 图形关键点信息\n   */\n  getShapePoints(shapeType: string, shapePoint: ShapePoint) {\n    const shape = this.getShape(shapeType);\n    if (shape.getPoints) {\n      return shape.getPoints(shapePoint);\n    }\n\n    return this.getDefaultPoints(shapePoint);\n  },\n  /**\n   * 根据 shape 类型获取具体的 shape 实例\n   * @param shapeType string shape 的类型\n   * @returns\n   */\n  getShape(shapeType: string): Shape {\n    const shape = this[shapeType] || this[this.defaultShapeType];\n    shape.coordinate = this.coordinate;\n\n    return shape;\n  },\n  /**\n   * 获取 shape 的默认关键点\n   * @override\n   */\n  getDefaultPoints() {\n    return [];\n  },\n  /**\n   * 获取 shape 对应的缩略图配置信息。\n   * @param shapeType shape 类型\n   * @param color 颜色\n   * @param isInPolar 是否在极坐标系下\n   * @returns 返回缩略图 marker 配置。\n   */\n  getMarker(shapeType: string, markerCfg: ShapeMarkerCfg): ShapeMarkerAttrs {\n    let shape = this.getShape(shapeType);\n\n    if (!shape.getMarker) {\n      const defaultShapeType = this.defaultShapeType;\n      shape = this.getShape(defaultShapeType);\n    }\n\n    const theme = this.theme;\n    const shapeStyle = get(theme, [shapeType, 'default'], {});\n    const markerStyle = shape.getMarker(markerCfg);\n\n    return deepMix({}, shapeStyle, markerStyle);\n  },\n  /**\n   * 绘制 shape\n   * @override\n   * @param shapeType 绘制的 shape 类型\n   * @param cfg 绘制 shape 需要的信息\n   * @param element Element 实例\n   * @returns\n   */\n  drawShape(shapeType: string, cfg: ShapeInfo, container: IGroup): IShape | IGroup {\n    const shape = this.getShape(shapeType);\n    return shape.draw(cfg, container);\n  },\n};\n\n/** Shape 基类 */\nconst ShapeBase = {\n  /** 坐标系对象 */\n  coordinate: null,\n  /**\n   * 将归一化的 path 转换成坐标系下的 path\n   * @param path 归一化的路径\n   * @returns\n   */\n  parsePath(path: string): PathCommand[] {\n    const coordinate = this.coordinate;\n    let parsedPath = parsePathString(path);\n    if (coordinate.isPolar) {\n      parsedPath = convertPolarPath(coordinate, parsedPath);\n    } else {\n      parsedPath = convertNormalPath(coordinate, parsedPath);\n    }\n    return parsedPath;\n  },\n  /**\n   * 将归一化的坐标转换成画布坐标\n   * @param point 归一化的坐标点数据\n   * @returns\n   */\n  parsePoint(point: Point): Point {\n    const coordinate = this.coordinate;\n    return coordinate.convert(point);\n  },\n  /**\n   * 0～1 points 转 画布 points\n   * @param points 节点集合\n   * @returns\n   */\n  parsePoints(points: Point[]): Point[] {\n    const coordinate = this.coordinate;\n    return points.map((point) => {\n      return coordinate.convert(point);\n    });\n  },\n  /**\n   * 绘制 shape\n   * @override\n   */\n  draw(cfg: ShapeInfo, container: IGroup) {},\n};\n\nconst ShapeFactoryMap = {};\n\n/**\n * 注册 ShapeFactory。\n * @param factoryName  ShapeFactory 名称，对应 Geometry 几何标记名称。\n * @param cfg 注册 ShapeFactory 需要覆写定义的属性。\n * @returns 返回 ShapeFactory 对象。\n */\nexport function registerShapeFactory(factoryName: string, cfg: RegisterShapeFactory): ShapeFactory {\n  const className = upperFirst(factoryName);\n  const geomObj = {\n    ...ShapeFactoryBase,\n    ...cfg,\n    geometryType: factoryName,\n  };\n  ShapeFactoryMap[className] = geomObj;\n  return geomObj;\n}\n\n/**\n * 注册 Shape。\n * @param factoryName 对应的 ShapeFactory 名称。\n * @param shapeType 注册的 shape 名称。\n * @param cfg 注册 Shape 需要覆写定义的属性。\n * @returns shape 返回注册的 shape 对象。\n */\nexport function registerShape(factoryName: string, shapeType: string, cfg: RegisterShape): Shape {\n  const className = upperFirst(factoryName);\n  const factory = ShapeFactoryMap[className];\n  const shapeObj = {\n    ...ShapeBase,\n    ...cfg,\n  };\n  factory[shapeType] = shapeObj;\n  return shapeObj;\n}\n\n/**\n * 获取 factoryName 对应的 shapeFactory\n * @param factoryName\n * @returns shape factory\n */\nexport function getShapeFactory(factoryName: string): ShapeFactory {\n  const className = upperFirst(factoryName);\n  return ShapeFactoryMap[className];\n}\n","import { groupToMap } from '@antv/util';\nimport { Data } from '../../interface';\n\n/** @ignore */\nexport function group(data: Data, fields: string[], appendConditions: Record<string, any[]> = {}) {\n  if (!fields) {\n    return [data];\n  }\n  const groups = groupToMap(data, fields);\n  const array = [];\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    const values = appendConditions[fields[0]];\n    for (const value of values) {\n      const arr = groups[`_${value}`];\n      if (arr) {\n        // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n        array.push(arr);\n      }\n    }\n  } else {\n    for (const k in groups) {\n      if (groups.hasOwnProperty(k)) {\n        const eachGroup = groups[k];\n        array.push(eachGroup);\n      }\n    }\n  }\n\n  return array;\n}\n","import { isEqual, some } from '@antv/util';\nimport { ShapeInfo } from '../../interface';\n\n/**\n * @ignore\n * Determines whether model is change\n * @param currentModel\n * @param preModel\n * @returns\n */\nexport function isModelChange(currentModel: ShapeInfo, preModel: ShapeInfo) {\n  return some(\n    ['color', 'shape', 'size', 'x', 'y', 'isInCircle', 'data', 'style', 'defaultStyle', 'points', 'mappingData'],\n    (key: string) => {\n      return !isEqual(currentModel[key], preModel[key]);\n    }\n  );\n}\n","import { isArray } from '@antv/util';\n\n/** @ignore */\nexport function parseFields(field: string | string[]): string[] {\n  if (isArray(field)) {\n    return field;\n  }\n\n  return field.split('*');\n}\n","import { Adjust, getAdjust as getAdjustClass } from '@antv/adjust';\nimport { Attribute, getAttribute as getAttributeClass } from '@antv/attr';\nimport {\n  clone,\n  deepMix,\n  each,\n  flatten,\n  get,\n  isArray,\n  isEmpty,\n  isEqual,\n  isFunction,\n  isNil,\n  isNumber,\n  isObject,\n  isPlainObject,\n  isString,\n  set,\n} from '@antv/util';\nimport { doGroupAppearAnimate, getDefaultAnimateCfg } from '../animate';\nimport Base from '../base';\nimport { FIELD_ORIGIN, GROUP_ATTRS } from '../constant';\nimport { BBox, Coordinate, IGroup, IShape, Scale } from '../dependents';\nimport {\n  AdjustOption,\n  AdjustType,\n  AnimateOption,\n  AttributeOption,\n  ColorAttrCallback,\n  Data,\n  Datum,\n  GeometryLabelCfg,\n  GeometryTooltipOption,\n  LabelCallback,\n  LabelOption,\n  LooseObject,\n  MappingDatum,\n  ScaleOption,\n  ShapeAttrCallback,\n  ShapeFactory,\n  ShapeInfo,\n  ShapeMarkerCfg,\n  ShapeMarkerAttrs,\n  ShapePoint,\n  SizeAttrCallback,\n  StateOption,\n  StyleCallback,\n  StyleOption,\n  TooltipCallback,\n} from '../interface';\nimport { uniq } from '../util/helper';\nimport Element from './element';\nimport { getGeometryLabel } from './label';\nimport GeometryLabel from './label/base';\nimport { getShapeFactory } from './shape/base';\nimport { group } from './util/group-data';\nimport { isModelChange } from './util/is-model-change';\nimport { parseFields } from './util/parse-fields';\n\n/** @ignore */\ninterface AttributeInstanceCfg {\n  fields?: string[];\n  callback?: (...args) => any;\n  values?: string[] | number[];\n  scales?: Scale[];\n}\n\n/** @ignore */\ninterface AdjustInstanceCfg {\n  type: AdjustType;\n  adjustNames?: string[];\n  xField?: string;\n  yField?: string;\n\n  dodgeBy?: string;\n  marginRatio?: number;\n  dodgeRatio?: number;\n\n  size?: number;\n  height?: number;\n  reverseOrder?: boolean;\n}\n\n/** geometry.init() 传入参数 */\nexport interface InitCfg {\n  /** 坐标系 */\n  coordinate?: Coordinate;\n  /** 数据 */\n  data?: Data;\n  /** 主题对象 */\n  theme?: LooseObject;\n  /** 列定义 */\n  scaleDefs?: Record<string, ScaleOption>;\n  /** 因为数据使用的引用，所以需要有一个标识位标识数据是否发生了更新 */\n  isDataChanged?: boolean;\n  isCoordinateChanged?: boolean;\n}\n\n/** Geometry 构造函数参数 */\nexport interface GeometryCfg {\n  /** Geometry shape 的容器。 */\n  container: IGroup;\n  /** 绘制的坐标系对象。 */\n  coordinate?: Coordinate;\n  /** 绘制数据。 */\n  data?: Data;\n  /** 需要的 scales。 */\n  scales?: Record<string, Scale>;\n  /** 列定义 */\n  scaleDefs?: Record<string, ScaleOption>;\n  /** Geometry labels 的容器 */\n  labelsContainer?: IGroup;\n  /** 是否对数据进行排序 */\n  sortable?: boolean;\n  /** 是否可见 */\n  visible?: boolean;\n  /** 主题配置 */\n  theme?: LooseObject;\n}\n\n// 根据 elementId 查找对应的 label，因为有可能一个 element 对应多个 labels，所以在给 labels 打标识时做了处理\n// 打标规则详见 ./label/base.ts#L263\nfunction filterLabelsById(id: string, labelsMap: Record<string, IGroup>) {\n  const labels = [];\n  each(labelsMap, (label: IGroup, labelId: string) => {\n    const elementId = labelId.split(' ')[0];\n    if (elementId === id) {\n      labels.push(label);\n    }\n  });\n\n  return labels;\n}\n\n/**\n * Geometry 几何标记基类，主要负责数据到图形属性的映射以及绘制逻辑。\n */\nexport default class Geometry extends Base {\n  /** Geometry 几何标记类型。 */\n  public readonly type: string = 'base';\n  /** ShapeFactory 对应的类型。 */\n  public readonly shapeType: string;\n\n  // 在创建 Geometry 实例时可以传入的属性\n  /** Coordinate 坐标系实例。 */\n  public coordinate: Coordinate;\n  /** 用户绘制数据。 */\n  public data: Data;\n  /** 图形绘制容器。 */\n  public readonly container: IGroup;\n  /** label 绘制容器。 */\n  public readonly labelsContainer: IGroup;\n  /** 是否对数据进行排序，默认为 false。  */\n  public sortable: boolean;\n  /** 当前 Geometry 实例主题。  */\n  public theme: LooseObject;\n  /** 存储 geometry 需要的 scales，需要外部传入。 */\n  public scales: Record<string, Scale>;\n  /** scale 定义，需要外部传入。 */\n  public scaleDefs: Record<string, ScaleOption>;\n  /** 画布区域，用于 label 布局。 */\n  public canvasRegion: BBox;\n\n  // 内部产生的属性\n  /** Attribute map  */\n  public attributes: Record<string, Attribute> = {};\n  /** Element map */\n  public elements: Element[] = [];\n  /**\n   * 存储处理后的数据，\n   * + init() 及 updateData() 逻辑后, 结构为 Data[]；\n   * + paint() 逻辑后，结构为 MappingDatum[][]。\n   */\n  public dataArray: MappingDatum[][];\n  /** 存储 tooltip 配置信息。 */\n  public tooltipOption: GeometryTooltipOption | boolean;\n  /** 存储 label 配置信息。 */\n  public labelOption: LabelOption | false;\n  /** 状态量相关的配置项 */\n  public stateOption: StateOption;\n  /** 使用 key-value 结构存储 Element，key 为每个 Element 实例对应的唯一 ID */\n  public elementsMap: Record<string, Element> = {};\n  /** animate 配置项 */\n  public animateOption: AnimateOption | boolean = true;\n  /** 图形属性映射配置 */\n  protected attributeOption: Record<string, AttributeOption> = {};\n  /** adjust 配置项 */\n  protected adjustOption: AdjustOption[];\n  /** style 配置项 */\n  protected styleOption: StyleOption;\n  /** 每个 Geometry 对应的 Shape 工厂实例，用于创建各个 Shape */\n  protected shapeFactory: ShapeFactory;\n  /** 存储上一次渲染时的 element 映射表，用于更新逻辑 */\n  protected lastElementsMap: Record<string, Element> = {};\n  /** 是否生成多个点来绘制图形。 */\n  protected generatePoints: boolean = false;\n  /** 存储发生图形属性映射前的数据 */\n  protected beforeMappingData: Data[] = null;\n  /** 存储每个 shape 的默认 size，用于 Interval、Schema 几何标记 */\n  protected defaultSize: number;\n\n  // 用户通过 geometry 构造函数设置的主题\n  private userTheme: LooseObject;\n  private adjusts: Record<string, Adjust> = {};\n  private lastAttributeOption;\n  private idFields: string[] = [];\n  private geometryLabel: GeometryLabel;\n  /** 虚拟 Group，用于图形更新 */\n  private offscreenGroup: IGroup;\n  private groupScales: Scale[];\n  private hasSorted: boolean = false;\n  protected isCoordinateChanged: boolean = false;\n\n  /**\n   * 创建 Geometry 实例。\n   * @param cfg\n   */\n  constructor(cfg: GeometryCfg) {\n    super(cfg);\n\n    const {\n      container,\n      labelsContainer,\n      coordinate,\n      data,\n      sortable = false,\n      visible = true,\n      theme,\n      scales = {},\n      scaleDefs = {},\n    } = cfg;\n\n    this.container = container;\n    this.labelsContainer = labelsContainer;\n    this.coordinate = coordinate;\n    this.data = data;\n    this.sortable = sortable;\n    this.visible = visible;\n    this.userTheme = theme;\n    this.scales = scales;\n    this.scaleDefs = scaleDefs;\n  }\n\n  /**\n   * 配置 position 通道映射规则。\n   *\n   * @example\n   * ```typescript\n   * // 数据结构: [{ x: 'A', y: 10, color: 'red' }]\n   * geometry.position('x*y');\n   * geometry.position([ 'x', 'y' ]);\n   * geometry.position({\n   *   fields: [ 'x', 'y' ],\n   * });\n   * ```\n   *\n   * @param cfg 映射规则\n   * @returns\n   */\n  public position(cfg: string | string[] | AttributeOption): Geometry {\n    let positionCfg = cfg;\n    if (!isPlainObject(cfg)) {\n      // 字符串字段或者数组字段\n      positionCfg = {\n        fields: parseFields(cfg),\n      };\n    }\n\n    const fields = get(positionCfg, 'fields');\n    if (fields.length === 1) {\n      // 默认填充一维 1*xx\n      fields.unshift('1');\n      set(positionCfg, 'fields', fields);\n    }\n    set(this.attributeOption, 'position', positionCfg);\n\n    return this;\n  }\n\n  /**\n   * 配置 color 通道映射规则。\n   *\n   * @example\n   * ```typescript\n   * // data: [{ x: 'A', y: 10, color: 'red' }, { x: 'B', y: 30, color: 'yellow' }]\n   * geometry.color({\n   *   fields: [ 'x' ],\n   *   values: [ '#1890ff', '#5AD8A6' ],\n   * });\n   * ```\n   *\n   * @param field 映射规则\n   * @returns\n   */\n  public color(field: AttributeOption): Geometry;\n  /**\n   * @example\n   * ```typescript\n   * // data: [{ x: 'A', y: 10, color: 'red' }, { x: 'B', y: 30, color: 'yellow' }]\n   *\n   * // 使用 '#1890ff' 颜色渲染图形\n   * geometry.color('#1890ff');\n   *\n   * // 根据 x 字段的数据值进行颜色的映射，这时候 G2 会在内部调用默认的回调函数，读取默认提供的颜色进行数据值到颜色值的映射。\n   * geometry.color('x');\n   *\n   * // 将 'x' 字段的数据值映射至指定的颜色值 colors（可以是字符串也可以是数组），此时用于通常映射分类数据\n   * geometry.color('x', [ '#1890ff', '#5AD8A6' ]);\n   *\n   * // 使用回调函数进行颜色值的自定义；可以使用多个字段使用、*号连接\n   * geometry.color('x', (xVal) => {\n   *   if (xVal === 'a') {\n   *     return 'red';\n   *   }\n   *   return 'blue';\n   * });\n   *\n   * // 指定颜色的渐变路径，用于映射连续的数据\n   * geometry.color('x', '#BAE7FF-#1890FF-#0050B3');\n   * ```\n   *\n   * @param field 参与颜色映射的数据字段，多个字段使用 '*' 连接符进行连接。\n   * @param cfg Optional, color 映射规则。\n   * @returns\n   */\n  public color(field: string, cfg?: string | string[] | ColorAttrCallback): Geometry;\n  public color(field: AttributeOption | string, cfg?: string | string[] | ColorAttrCallback): Geometry {\n    this.createAttrOption('color', field, cfg);\n\n    return this;\n  }\n\n  /**\n   * 配置 shape 通道映射规则。\n   *\n   * @example\n   *\n   * ```typescript\n   * // data: [{ x: 'A', y: 10, color: 'red' }, { x: 'B', y: 30, color: 'yellow' }]\n   * geometry.shape({\n   *   fields: [ 'x' ],\n   * });\n   * ```\n   *\n   * @param field 映射规则配置。\n   * @returns\n   */\n  public shape(field: AttributeOption): Geometry;\n  /**\n   *\n   * @example\n   * ```typescript\n   * // data: [{ x: 'A', y: 10, color: 'red' }, { x: 'B', y: 30, color: 'yellow' }]\n   *\n   * // 指定常量，将所有数据值映射到固定的 shape\n   * geometry.shape('circle');\n   *\n   * // 将指定的字段映射到内置的 shapes 数组中\n   * geometry.shape('x');\n   *\n   * // 将指定的字段映射到指定的 shapes 数组中\n   * geometry.shape('x', [ 'circle', 'diamond', 'square' ]);\n   *\n   * // 使用回调函数获取 shape，用于个性化的 shape 定制，可以根据单个或者多个字段确定\n   * geometry.shape('x', (xVal) => {\n   *   if (xVal === 'a') {\n   *     return 'circle';\n   *   }\n   *   return 'diamond';\n   * });\n   * ```\n   *\n   * @param field 参与 shape 映射的数据字段，多个字段使用 '*' 连接符进行连接。\n   * @param cfg Optional, shape 映射规则。\n   * @returns\n   */\n  public shape(field: string, cfg?: string[] | ShapeAttrCallback): Geometry;\n  public shape(field: AttributeOption | string, cfg?: string[] | ShapeAttrCallback): Geometry {\n    this.createAttrOption('shape', field, cfg);\n\n    return this;\n  }\n\n  /**\n   * 配置 size 通道映射规则。\n   *\n   * @example\n   * ```typescript\n   * // data: [{ x: 'A', y: 10, color: 'red' }, { x: 'B', y: 30, color: 'yellow' }]\n   * geometry.size({\n   *   values: [ 10 ],\n   * })\n   * ```\n   *\n   * @param field 映射规则。\n   * @returns\n   */\n  public size(field: AttributeOption): Geometry;\n  /**\n   *\n   * @example\n   * ```typescript\n   * // data: [{ x: 'A', y: 10, color: 'red' }, { x: 'B', y: 30, color: 'yellow' }]\n   *\n   * // 直接指定像素大小\n   * geometry.size(10);\n   *\n   * // 指定映射到 size 的字段，使用内置的默认大小范围为 [1, 10]\n   * geometry.size('x');\n   *\n   * // 指定映射到 size 字段外，还提供了 size 的最大值和最小值范围\n   * geometry.size('x', [ 5, 30 ]);\n   *\n   * // 使用回调函数映射 size，用于个性化的 size 定制，可以使用多个字段进行映射\n   * geometry.size('x', (xVal) => {\n   *   if (xVal === 'a') {\n   *     return 10;\n   *   }\n   *   return 5;\n   * });\n   * ```\n   *\n   * @param field 参与 size 映射的数据字段，多个字段使用 '*' 连接符进行连接。\n   * @param cfg Optional, size 映射规则\n   * @returns\n   */\n  public size(field: number | string, cfg?: [number, number] | SizeAttrCallback): Geometry;\n  public size(field: AttributeOption | number | string, cfg?: [number, number] | SizeAttrCallback): Geometry {\n    this.createAttrOption('size', field, cfg);\n\n    return this;\n  }\n\n  /**\n   * 设置数据调整方式。G2 目前内置了四种类型：\n   * 1. dodge\n   * 2. stack\n   * 3. symmetric\n   * 4. jitter\n   *\n   *\n   * **Tip**\n   * + 对于 'dodge' 类型，可以额外进行如下属性的配置:\n   * ```typescript\n   * geometry.adjust('dodge', {\n   *   marginRatio: 0, // 取 0 到 1 范围的值（相对于每个柱子宽度），用于控制一个分组中柱子之间的间距\n   *   dodgeBy: 'x', // 该属性只对 'dodge' 类型生效，声明以哪个数据字段为分组依据\n   * });\n   * ```\n   *\n   * + 对于 'stack' 类型，可以额外进行如下属性的配置:\n   * ```typescript\n   * geometry.adjust('stack', {\n   *   reverseOrder: false, // 用于控制是否对数据进行反序操作\n   * });\n   * ```\n   *\n   * @example\n   * ```typescript\n   * geometry.adjust('stack');\n   *\n   * geometry.adjust({\n   *   type: 'stack',\n   *   reverseOrder: false,\n   * });\n   *\n   * // 组合使用 adjust\n   * geometry.adjust([ 'stack', 'dodge' ]);\n   *\n   * geometry.adjust([\n   *   { type: 'stack' },\n   *   { type: 'dodge', dodgeBy: 'x' },\n   * ]);\n   * ```\n   *\n   * @param adjustCfg 数据调整配置\n   * @returns\n   */\n  public adjust(adjustCfg: string | string[] | AdjustOption | AdjustOption[]): Geometry {\n    let adjusts: any = adjustCfg;\n    if (isString(adjustCfg) || isPlainObject(adjustCfg)) {\n      adjusts = [adjustCfg];\n    }\n    each(adjusts, (adjust, index) => {\n      if (!isObject(adjust)) {\n        adjusts[index] = { type: adjust };\n      }\n    });\n\n    this.adjustOption = adjusts;\n    return this;\n  }\n\n  /**\n   * 图形样式配置。\n   *\n   * @example\n   * ```typescript\n   * // 配置图形样式\n   * style({\n   *   lineWidth: 2,\n   *   stroke: '#1890ff',\n   * });\n   *\n   * // 根据具体的数据进行详细配置\n   * style({\n   *   fields: [ 'x', 'y' ], // 数据字段\n   *   callback: (xVal, yVal) => {\n   *     const style = { lineWidth: 2, stroke: '#1890ff' };\n   *     if (xVal === 'a') {\n   *       style.lineDash = [ 2, 2 ];\n   *     }\n   *     return style;\n   *   },\n   * });\n   * ```\n   *\n   * @param field 配置样式属性或者样式规则。\n   * @returns\n   */\n  public style(field: StyleOption | LooseObject): Geometry;\n  /**\n   * @example\n   * ```typescript\n   * style('x*y', (xVal, yVal) => {\n   *   const style = { lineWidth: 2, stroke: '#1890ff' };\n   *   if (xVal === 'a') {\n   *     style.lineDash = [ 2, 2 ];\n   *   }\n   *   return style;\n   * });\n   * ```\n   *\n   * @param field 数据字段或者样式配置规则。\n   * @param styleFunc Optional, 样式配置回调函数。\n   * @returns\n   */\n  public style(field: string, styleFunc: StyleCallback): Geometry;\n  public style(field: StyleOption | LooseObject | string, styleFunc?: StyleCallback): Geometry {\n    if (isString(field)) {\n      const fields = parseFields(field);\n      this.styleOption = {\n        fields,\n        callback: styleFunc,\n      };\n    } else {\n      const { fields, callback, cfg } = field as StyleOption;\n      if (fields || callback || cfg) {\n        this.styleOption = field;\n      } else {\n        this.styleOption = {\n          cfg: field,\n        };\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * 配置 Geometry 显示的 tooltip 内容。\n   *\n   * `tooltip(false)` 代表关闭 tooltip。\n   * `tooltip(true)` 代表开启 tooltip。\n   *\n   * Geometry 默认允许 tooltip 展示，我们可以使用以下方法对 tooltip 的展示内容进行配置：\n   *\n   * @example\n   * ```typescript\n   * // data: [{x: 'a', y: 10}]\n   * tooltip({\n   *   fields: [ 'x' ],\n   * });\n   * ```\n   * ![](https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*268uQ50if60AAAAAAAAAAABkARQnAQ)\n   *\n   * ```typescript\n   * tooltip({\n   *   fields: [ 'x', 'y' ],\n   * });\n   * ```\n   * ![](https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*A_ujSa8QhtcAAAAAAAAAAABkARQnAQ)\n   *\n   * tooltip() 方法同样支持数据映射及回调用法：\n   *\n   * @example\n   * ```typescript\n   * chart.tooltip({\n   *   itemTpl: '<li>{x}: {y}</li>',\n   * });\n   *\n   * chart.line()\n   *   .position('x*y')\n   *   .tooltip({\n   *     fields: [ 'x', 'y' ],\n   *     callback: (x, y) => {\n   *       return {\n   *         x,\n   *         y,\n   *       };\n   *     },\n   *   });\n   * ```\n   *\n   * 其返回的值必须为对象，该值中的属性同 chart.tooltip() 的 itemTpl 模板相对应，返回的变量可用于 itemTpl 的字符串模板。\n   *\n   * @param field tooltip 配置信息。\n   * @returns\n   */\n  public tooltip(field: GeometryTooltipOption | boolean): Geometry;\n  /**\n   * @example\n   * ```typescript\n   * // data: [{x: 'a', y: 10}]\n   *\n   * // 等同于 tooltip({ fields: [ 'x' ] })\n   * tooltip('x');\n   *\n   * // 等同于 tooltip({ fields: [ 'x', 'y' ] })\n   * tooltip('x*y');\n   *\n   * // 等同于 tooltip({ fields: [ 'x', 'y' ], callback: (x, y) => { x, y } })\n   * tooltip('x*y', (x, y) => {\n   *   return {\n   *     x,\n   *     y,\n   *   };\n   * });\n   * ```\n   *\n   * @param field 参与映射的字段。\n   * @param cfg Optional, 回调函数\n   * @returns\n   */\n  public tooltip(field: string, cfg?: TooltipCallback): Geometry;\n  public tooltip(field: GeometryTooltipOption | boolean | string, cfg?: TooltipCallback): Geometry {\n    if (isString(field)) {\n      const fields = parseFields(field);\n      this.tooltipOption = {\n        fields,\n        callback: cfg,\n      };\n    } else {\n      this.tooltipOption = field;\n    }\n\n    return this;\n  }\n\n  /**\n   * Geometry 动画配置。\n   *\n   * + `animate(false)` 关闭动画\n   * + `animate(true)` 开启动画，默认开启。\n   *\n   * 我们将动画分为四个场景：\n   * 1. appear: 图表第一次加载时的入场动画；\n   * 2. enter: 图表绘制完成，发生更新后，产生的新图形的进场动画；\n   * 3. update: 图表绘制完成，数据发生变更后，有状态变更的图形的更新动画；\n   * 4. leave: 图表绘制完成，数据发生变更后，被销毁图形的销毁动画。\n   *\n   * @example\n   * ```typescript\n   * animate({\n   *   enter: {\n   *     duration: 1000, // enter 动画执行时间\n   *   },\n   *   leave: false, // 关闭 leave 销毁动画\n   * });\n   * ```\n   *\n   * @param cfg 动画配置\n   * @returns\n   */\n  public animate(cfg: AnimateOption | boolean): Geometry {\n    this.animateOption = cfg;\n    return this;\n  }\n\n  /**\n   * Geometry label 配置。\n   *\n   * @example\n   * ```ts\n   * // data: [ {x: 1, y: 2, z: 'a'}, {x: 2, y: 2, z: 'b'} ]\n   * // 在每个图形上显示 z 字段对应的数值\n   * label({\n   *   fields: [ 'z' ]\n   * });\n   *\n   * label(false); // 不展示 label\n   *\n   * // 在每个图形上显示 x 字段对应的数值，同时配置文本颜色为红色\n   * label('x', {\n   *   style: {\n   *     fill: 'red',\n   *   },\n   * })\n   *\n   * // 以 type 类型的 label 渲染每个图形上显示 x 字段对应的数值，同时格式化文本内容\n   * label('x', (xValue) => {\n   *   return {\n   *     content: xValue + '%',\n   *   };\n   * }, {\n   *   type: 'base' // 声明 label 类型\n   * })\n   * ```\n   *\n   * @param field\n   * @returns label\n   */\n  public label(field: LabelOption | false | string): Geometry;\n  public label(field: string, secondParam: GeometryLabelCfg | LabelCallback): Geometry;\n  public label(field: string, secondParam: LabelCallback, thirdParam: GeometryLabelCfg): Geometry;\n  public label(\n    field: string | LabelOption | false,\n    secondParam?: GeometryLabelCfg | LabelCallback,\n    thirdParam?: GeometryLabelCfg\n  ): Geometry {\n    if (isString(field)) {\n      const labelOption: LabelOption = {};\n      const fields = parseFields(field);\n      labelOption.fields = fields;\n      if (isFunction(secondParam)) {\n        labelOption.callback = secondParam;\n      } else if (isPlainObject(secondParam)) {\n        labelOption.cfg = secondParam;\n      }\n\n      if (thirdParam) {\n        labelOption.cfg = thirdParam;\n      }\n      this.labelOption = labelOption;\n    } else {\n      this.labelOption = field;\n    }\n\n    return this;\n  }\n\n  /**\n   * 设置状态对应的样式。\n   *\n   * @example\n   * ```ts\n   * chart.interval().state({\n   *   selected: {\n   *     animate: { duration: 100, easing: 'easeLinear' },\n   *     style: {\n   *       lineWidth: 2,\n   *       stroke: '#000',\n   *     },\n   *   },\n   * });\n   * ```\n   *\n   * 如果图形 shape 是由多个 shape 组成，即为一个 G.Group 对象，那么针对 group 中的每个 shape，我们需要使用下列方式进行状态样式设置：\n   * 如果我们为 group 中的每个 shape 设置了 'name' 属性(shape.set('name', 'xx'))，则以 'name' 作为 key，否则默认以索引值（即 shape 的 添加顺序）为 key。\n   *\n   * ```ts\n   * chart.interval().shape('groupShape').state({\n   *   selected: {\n   *     style: {\n   *       0: { lineWidth: 2 },\n   *       1: { fillOpacity: 1 },\n   *     }\n   *   }\n   * });\n   * ```\n   *\n   * @param cfg 状态样式\n   */\n  public state(cfg: StateOption) {\n    this.stateOption = cfg;\n    return this;\n  }\n\n  /**\n   * 初始化 Geomtry 实例：\n   * 创建 [[Attribute]] and [[Scale]] 实例，进行数据处理，包括分组、数值化以及数据调整。\n   */\n  public init(cfg: InitCfg = {}) {\n    this.setCfg(cfg);\n    this.initAttributes(); // 创建图形属性\n\n    // 数据加工：分组 -> 数字化 -> adjust\n    this.processData(this.data);\n\n    // 调整 scale\n    this.adjustScale();\n  }\n\n  /**\n   * Geometry 更新。\n   * @param [cfg] 更新的配置\n   */\n  public update(cfg: InitCfg = {}) {\n    const { data, isDataChanged, isCoordinateChanged } = cfg;\n    const { attributeOption, lastAttributeOption } = this;\n\n    if (!isEqual(attributeOption, lastAttributeOption)) {\n      // 映射发生改变，则重新创建图形属性\n      this.init(cfg);\n    } else if (data && (isDataChanged || !isEqual(data, this.data))) {\n      // 数据发生变化\n      this.setCfg(cfg);\n      this.processData(data); // 数据加工：分组 -> 数字化 -> adjust\n    } else {\n      // 有可能 coordinate 变化\n      this.setCfg(cfg);\n    }\n\n    // 调整 scale\n    this.adjustScale();\n    this.isCoordinateChanged = isCoordinateChanged;\n  }\n\n  /**\n   * 将原始数据映射至图形空间，同时创建图形对象。\n   */\n  public paint(isUpdate: boolean = false) {\n    if (this.animateOption) {\n      this.animateOption = deepMix({}, getDefaultAnimateCfg(this.type, this.coordinate), this.animateOption);\n    }\n\n    this.defaultSize = undefined;\n    this.elements = [];\n    this.elementsMap = {};\n    const offscreenGroup = this.getOffscreenGroup();\n    offscreenGroup.clear();\n\n    const beforeMappingData = this.beforeMappingData;\n    const dataArray = this.beforeMapping(beforeMappingData);\n\n    const mappingArray = [];\n    for (let index = 0, length = dataArray.length; index < length; index++) {\n      const eachGroup = dataArray[index];\n      const mappingData = this.mapping(eachGroup);\n      mappingArray.push(mappingData);\n      this.createElements(mappingData, index, isUpdate);\n    }\n\n    if (this.canDoGroupAnimation(isUpdate)) {\n      // 如果用户没有配置 appear.animation，就默认走整体动画\n      const container = this.container;\n      const type = this.type;\n      const coordinate = this.coordinate;\n      const animateCfg = get(this.animateOption, 'appear');\n      const yScale = this.getYScale();\n      const yMinPoint = coordinate.convert({\n        x: 0,\n        y: yScale.scale(this.getYMinValue()),\n      });\n      doGroupAppearAnimate(container, animateCfg, type, coordinate, yMinPoint);\n    }\n\n    // 添加 label\n    if (this.labelOption) {\n      this.renderLabels(flatten(mappingArray), isUpdate);\n    }\n\n    this.dataArray = mappingArray;\n\n    // 销毁被删除的 elements\n    each(this.lastElementsMap, (deletedElement: Element) => {\n      // 更新动画配置，用户有可能在更新之前有对动画进行配置操作\n      deletedElement.animate = this.animateOption;\n      deletedElement.destroy();\n    });\n\n    this.lastElementsMap = this.elementsMap;\n\n    // 缓存，用于更新\n    this.lastAttributeOption = {\n      ...this.attributeOption,\n    };\n\n    if (this.visible === false) {\n      // 用户在初始化的时候声明 visible: false\n      this.changeVisible(false);\n    }\n  }\n\n  /**\n   * 清空当前 Geometry，配置项仍保留，但是内部创建的对象全部清空。\n   * @override\n   */\n  public clear() {\n    const { container, geometryLabel, offscreenGroup } = this;\n    if (container) {\n      container.clear();\n    }\n\n    if (geometryLabel) {\n      geometryLabel.clear();\n    }\n\n    if (offscreenGroup) {\n      offscreenGroup.clear();\n    }\n\n    // 属性恢复至出厂状态\n    this.scaleDefs = undefined;\n    this.attributes = {};\n    this.scales = {};\n    this.elementsMap = {};\n    this.lastElementsMap = {};\n    this.elements = [];\n    this.adjusts = {};\n    this.dataArray = null;\n    this.beforeMappingData = null;\n    this.lastAttributeOption = undefined;\n    this.defaultSize = undefined;\n    this.idFields = [];\n    this.groupScales = undefined;\n    this.hasSorted = false;\n    this.isCoordinateChanged = false;\n  }\n\n  /**\n   * 销毁 Geometry 实例。\n   */\n  public destroy() {\n    this.clear();\n    const container = this.container;\n    container.remove(true);\n\n    if (this.offscreenGroup) {\n      this.offscreenGroup.remove(true);\n      this.offscreenGroup = null;\n    }\n\n    if (this.geometryLabel) {\n      this.geometryLabel.destroy();\n      this.geometryLabel = null;\n    }\n    this.theme = undefined;\n    this.shapeFactory = undefined;\n\n    super.destroy();\n  }\n\n  /**\n   * 获取决定分组的图形属性对应的 scale 实例。\n   * @returns\n   */\n  public getGroupScales(): Scale[] {\n    return this.groupScales;\n  }\n\n  /**\n   * 根据名字获取图形属性实例。\n   */\n  public getAttribute(name: string): Attribute {\n    return this.attributes[name];\n  }\n\n  /** 获取 x 轴对应的 scale 实例。 */\n  public getXScale(): Scale {\n    return this.getAttribute('position').scales[0];\n  }\n\n  /** 获取 y 轴对应的 scale 实例。 */\n  public getYScale(): Scale {\n    return this.getAttribute('position').scales[1];\n  }\n\n  /**\n   * 获取决定分组的图形属性实例。\n   */\n  public getGroupAttributes(): Attribute[] {\n    const rst = [];\n    each(this.attributes, (attr: Attribute) => {\n      if (GROUP_ATTRS.includes(attr.type)) {\n        rst.push(attr);\n      }\n    });\n    return rst;\n  }\n\n  /** 获取图形属性默认的映射值。 */\n  public getDefaultValue(attrName: string) {\n    let value: any;\n    const attr = this.getAttribute(attrName);\n    if (attr && isEmpty(attr.scales)) {\n      // 获取映射至常量的值\n      value = attr.values[0];\n    }\n    return value;\n  }\n\n  /**\n   * 获取该数据发生图形映射后对应的 Attribute 图形空间数据。\n   * @param attr Attribute 图形属性实例。\n   * @param obj 需要进行映射的原始数据。\n   * @returns\n   */\n  public getAttributeValues(attr: Attribute, obj: Datum) {\n    const params = [];\n    const scales = attr.scales;\n    for (let index = 0, length = scales.length; index < length; index++) {\n      const scale = scales[index];\n      const field = scale.field;\n      if (scale.isIdentity) {\n        params.push(scale.values);\n      } else {\n        params.push(obj[field]);\n      }\n    }\n\n    return attr.mapping(...params);\n  }\n\n  public getAdjust(adjustType: string) {\n    return this.adjusts[adjustType];\n  }\n\n  /**\n   * 获取 shape 对应的 marker 样式。\n   * @param shapeName shape 具体名字\n   * @param cfg marker 信息\n   * @returns\n   */\n  public getShapeMarker(shapeName: string, cfg: ShapeMarkerCfg): ShapeMarkerAttrs {\n    const shapeFactory = this.getShapeFactory();\n    return shapeFactory.getMarker(shapeName, cfg);\n  }\n\n  /**\n   * 根据一定的规则查找 Geometry 的 Elements。\n   *\n   * ```typescript\n   * getElementsBy((element) => {\n   *   const data = element.getData();\n   *\n   *   return data.a === 'a';\n   * });\n   * ```\n   *\n   * @param condition 定义查找规则的回调函数。\n   * @returns\n   */\n  public getElementsBy(condition: (element: Element) => boolean): Element[] {\n    return this.elements.filter((element) => {\n      return condition(element);\n    });\n  }\n\n  /**\n   * 获取数据对应的唯一 id。\n   * @param data Element 对应的绘制数据\n   * @returns\n   */\n  public getElementId(data: MappingDatum | MappingDatum[]) {\n    data = isArray(data) ? data[0] : data;\n    const originData = data[FIELD_ORIGIN];\n\n    // 如果用户声明了使用哪些字段作为 id 值\n    if (this.idFields.length) {\n      let elementId = originData[this.idFields[0]];\n      for (let index = 1; index < this.idFields.length; index++) {\n        elementId += '-' + originData[this.idFields[index]];\n      }\n\n      return elementId;\n    }\n\n    const type = this.type;\n    const xScale = this.getXScale();\n    const yScale = this.getYScale();\n    const xField = xScale.field || 'x';\n    const yField = yScale.field || 'y';\n    const yVal = originData[yField];\n    let xVal;\n    if (xScale.type === 'identity') {\n      xVal = xScale.values[0];\n    } else {\n      xVal = originData[xField];\n    }\n\n    let id: string;\n    if (type === 'interval' || type === 'schema') {\n      id = xVal;\n    } else if (type === 'line' || type === 'area' || type === 'path') {\n      id = type;\n    } else {\n      id = `${xVal}-${yVal}`;\n    }\n\n    const groupScales = this.groupScales;\n    for (let index = 0, length = groupScales.length; index < length; index++) {\n      const groupScale = groupScales[index];\n      const field = groupScale.field;\n      id = `${id}-${originData[field]}`;\n    }\n\n    // 用户在进行 dodge 类型的 adjust 调整的时候设置了 dodgeBy 属性\n    const dodgeAdjust = this.getAdjust('dodge');\n    if (dodgeAdjust) {\n      const dodgeBy = dodgeAdjust.dodgeBy;\n      if (dodgeBy) {\n        id = `${id}-${originData[dodgeBy]}`;\n      }\n    }\n\n    if (this.getAdjust('jitter')) {\n      id = `${id}-${data.x}-${data.y}`;\n    }\n\n    return id;\n  }\n\n  /**\n   * 获取所有需要创建 scale 的字段名称。\n   */\n  public getScaleFields(): string[] {\n    const fields = [];\n    const tmpMap = {};\n    const { attributeOption, labelOption, tooltipOption } = this;\n    // 获取图形属性上的 fields\n    for (const attributeType in attributeOption) {\n      if (attributeOption.hasOwnProperty(attributeType)) {\n        const eachOpt = attributeOption[attributeType];\n        if (eachOpt.fields) {\n          uniq(eachOpt.fields, fields, tmpMap);\n        } else if (eachOpt.values) {\n          // 考虑 size(10), shape('circle') 等场景\n          uniq(eachOpt.values, fields, tmpMap);\n        }\n      }\n    }\n    // 获取 label 上的字段\n    if (labelOption && labelOption.fields) {\n      uniq(labelOption.fields, fields, tmpMap);\n    }\n\n    // 获取 tooltip 上的字段\n    if (isObject(tooltipOption) && tooltipOption.fields) {\n      uniq(tooltipOption.fields, fields, tmpMap);\n    }\n\n    return fields;\n  }\n\n  /**\n   * 显示或者隐藏 geometry。\n   * @param visible\n   */\n  public changeVisible(visible: boolean) {\n    super.changeVisible(visible);\n    const elements = this.elements;\n    for (let index = 0, length = elements.length; index < length; index++) {\n      const element = elements[index];\n      element.changeVisible(visible);\n    }\n    if (visible) {\n      if (this.container) {\n        this.container.show();\n      }\n      if (this.labelsContainer) {\n        this.labelsContainer.show();\n      }\n    } else {\n      if (this.container) {\n        this.container.hide();\n      }\n      if (this.labelsContainer) {\n        this.labelsContainer.hide();\n      }\n    }\n  }\n\n  /**\n   * 获取当前配置中的所有分组 & 分类的字段。\n   * @return fields string[]\n   */\n  public getGroupFields(): string[] {\n    const groupFields = [];\n    const tmpMap = {}; // 用于去重过滤\n    for (let index = 0, length = GROUP_ATTRS.length; index < length; index++) {\n      const attributeName = GROUP_ATTRS[index];\n      const cfg = this.attributeOption[attributeName];\n      if (cfg && cfg.fields) {\n        uniq(cfg.fields, groupFields, tmpMap);\n      }\n    }\n\n    return groupFields;\n  }\n\n  /**\n   * 获得图形的 x y 字段。\n   */\n  public getXYFields() {\n    const [x, y] = this.attributeOption.position.fields;\n    return [x, y];\n  }\n\n  /**\n   * 获取该 Geometry 下所有生成的 shapes。\n   * @returns shapes\n   */\n  public getShapes(): (IShape | IGroup)[] {\n    return this.elements.map((element: Element) => element.shape);\n  }\n\n  /**\n   * 获取虚拟 Group。\n   * @returns\n   */\n  public getOffscreenGroup() {\n    if (!this.offscreenGroup) {\n      const GroupCtor = this.container.getGroupBase(); // 获取分组的构造函数\n      this.offscreenGroup = new GroupCtor({});\n    }\n    return this.offscreenGroup;\n  }\n\n  // 对数据进行排序\n  public sort(mappingArray: Data[]) {\n    if (!this.hasSorted) {\n      // 未发生过排序\n      const xScale = this.getXScale();\n      const xField = xScale.field;\n      for (let index = 0; index < mappingArray.length; index++) {\n        const itemArr = mappingArray[index];\n        itemArr.sort((obj1: Datum, obj2: Datum) => {\n          return xScale.translate(obj1[FIELD_ORIGIN][xField]) - xScale.translate(obj2[FIELD_ORIGIN][xField]);\n        });\n      }\n    }\n\n    this.hasSorted = true;\n  }\n\n  /**\n   * 调整度量范围。主要针对发生层叠以及一些特殊需求的 Geometry，比如 Interval 下的柱状图 Y 轴默认从 0 开始。\n   */\n  protected adjustScale() {\n    const yScale = this.getYScale();\n    // 如果数据发生过 stack adjust，需要调整下 yScale 的数据范围\n    if (yScale && this.getAdjust('stack')) {\n      this.updateStackRange(yScale, this.beforeMappingData);\n    }\n  }\n\n  /**\n   * 获取当前 Geometry 对应的 Shape 工厂实例。\n   */\n  protected getShapeFactory() {\n    const shapeType = this.shapeType;\n    if (!getShapeFactory(shapeType)) {\n      return;\n    }\n    if (!this.shapeFactory) {\n      this.shapeFactory = clone(getShapeFactory(shapeType)); // 防止多个 view 共享一个 shapeFactory 实例，导致 coordinate 被篡改\n    }\n    // 因为这里缓存了 shapeFactory，但是外部可能会变更 coordinate，导致无法重新设置到 shapeFactory 中\n    this.shapeFactory.coordinate = this.coordinate;\n    // theme 原因同上\n    this.shapeFactory.theme = this.theme.geometries[shapeType] || {};\n\n    return this.shapeFactory;\n  }\n\n  /**\n   * 获取每个 Shape 对应的关键点数据。\n   * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录\n   * @returns\n   */\n  protected createShapePointsCfg(obj: Datum): ShapePoint {\n    const xScale = this.getXScale();\n    const yScale = this.getYScale();\n    const x = this.normalizeValues(obj[xScale.field], xScale);\n    let y; // 存在没有 y 的情况\n\n    if (yScale) {\n      y = this.normalizeValues(obj[yScale.field], yScale);\n    } else {\n      y = obj.y ? obj.y : 0.1;\n    }\n\n    return {\n      x,\n      y,\n      y0: yScale ? yScale.scale(this.getYMinValue()) : undefined,\n    };\n  }\n\n  /**\n   * 创建 Element 实例。\n   * @param mappingDatum Element 对应的绘制数据\n   * @param [isUpdate] 是否处于更新阶段\n   * @returns element 返回创建的 Element 实例\n   */\n  protected createElement(mappingDatum: MappingDatum, isUpdate: boolean = false): Element {\n    const { container } = this;\n\n    const shapeCfg = this.getDrawCfg(mappingDatum); // 获取绘制图形的配置信息\n    const shapeFactory = this.getShapeFactory();\n\n    const element = new Element({\n      shapeFactory,\n      container,\n      offscreenGroup: this.getOffscreenGroup(),\n    });\n    element.animate = this.animateOption;\n    element.geometry = this;\n    element.draw(shapeCfg, isUpdate); // 绘制\n\n    return element;\n  }\n\n  /**\n   * 获取每条数据对应的图形绘制数据。\n   * @param mappingDatum 映射后的数据\n   * @returns draw cfg\n   */\n  protected getDrawCfg(mappingDatum: MappingDatum): ShapeInfo {\n    const originData = mappingDatum[FIELD_ORIGIN]; // 原始数据\n    const cfg: ShapeInfo = {\n      mappingData: mappingDatum, // 映射后的数据\n      data: originData, // 原始数据\n      x: mappingDatum.x,\n      y: mappingDatum.y,\n      color: mappingDatum.color,\n      size: mappingDatum.size,\n      isInCircle: this.coordinate.isPolar,\n    };\n\n    let shapeName = mappingDatum.shape;\n    if (!shapeName && this.getShapeFactory()) {\n      shapeName = this.getShapeFactory().defaultShapeType;\n    }\n    cfg.shape = shapeName;\n    // 获取默认样式\n    const theme = this.theme.geometries[this.shapeType];\n    cfg.defaultStyle = get(theme, [shapeName, 'default'], {}).style;\n\n    const styleOption = this.styleOption;\n    if (styleOption) {\n      cfg.style = this.getStyleCfg(styleOption, originData);\n    }\n    if (this.generatePoints) {\n      cfg.points = mappingDatum.points;\n      cfg.nextPoints = mappingDatum.nextPoints;\n    }\n\n    return cfg;\n  }\n\n  /**\n   * 创建所有的 Elements。\n   * @param mappingData\n   * @param [isUpdate]\n   * @returns elements\n   */\n  protected createElements(mappingData: MappingDatum[], index: number, isUpdate: boolean = false): Element[] {\n    const { lastElementsMap, elementsMap, elements } = this;\n    for (let subIndex = 0, length = mappingData.length; subIndex < length; subIndex++) {\n      const mappingDatum = mappingData[subIndex];\n      let id = this.getElementId(mappingDatum);\n      if (elementsMap[id]) {\n        // 存在重复数据，则根据再根据 index 进行区分\n        id = `${id}-${index}-${subIndex}`;\n      }\n\n      let result = lastElementsMap[id];\n      if (!result) {\n        // 创建新的 element\n        result = this.createElement(mappingDatum, isUpdate);\n      } else {\n        // element 已经创建\n        const currentShapeCfg = this.getDrawCfg(mappingDatum);\n        const preShapeCfg = result.getModel();\n        if (this.isCoordinateChanged || isModelChange(currentShapeCfg, preShapeCfg)) {\n          result.animate = this.animateOption;\n          // 通过绘制数据的变更来判断是否需要更新，因为用户有可能会修改图形属性映射\n          result.update(currentShapeCfg); // 更新对应的 element\n        }\n\n        delete lastElementsMap[id];\n      }\n\n      elements.push(result);\n      elementsMap[id] = result;\n    }\n\n    return elements;\n  }\n\n  /**\n   * 获取渲染的 label 类型。\n   */\n  protected getLabelType(): string {\n    const { labelOption, coordinate, type } = this;\n    const coordinateType = coordinate.type;\n    let labelType = get(labelOption, ['cfg', 'type']);\n    if (!labelType) {\n      // 用户未定义，则进行默认的逻辑\n      if (coordinateType === 'polar') {\n        // 极坐标下使用通用的极坐标文本\n        labelType = 'polar';\n      } else if (coordinateType === 'theta') {\n        // theta 坐标系下使用饼图文本\n        labelType = 'pie';\n      } else if (type === 'interval' || type === 'polygon') {\n        labelType = 'interval';\n      } else {\n        labelType = 'base';\n      }\n    }\n\n    return labelType;\n  }\n\n  /**\n   * 获取 Y 轴上的最小值。\n   */\n  protected getYMinValue(): number {\n    const yScale = this.getYScale();\n    const { min, max } = yScale;\n    let value: number;\n\n    if (min >= 0) {\n      value = min;\n    } else if (max <= 0) {\n      // 当值全位于负区间时，需要保证 ymin 在区域内，不可为 0\n      value = max;\n    } else {\n      value = 0;\n    }\n    return value;\n  }\n\n  // 创建图形属性相关的配置项\n  private createAttrOption(attrName: string, field: AttributeOption | string | number, cfg?) {\n    if (isNil(field) || isObject(field)) {\n      if (isObject(field) && isEqual(Object.keys(field), ['values'])) {\n        // shape({ values: [ 'funnel' ] })\n        set(this.attributeOption, attrName, {\n          fields: field.values,\n        });\n      } else {\n        set(this.attributeOption, attrName, field);\n      }\n    } else {\n      const attrCfg: AttributeOption = {};\n      if (isNumber(field)) {\n        // size(3)\n        attrCfg.values = [field];\n      } else {\n        attrCfg.fields = parseFields(field);\n      }\n\n      if (cfg) {\n        if (isFunction(cfg)) {\n          attrCfg.callback = cfg;\n        } else {\n          attrCfg.values = cfg;\n        }\n      }\n\n      set(this.attributeOption, attrName, attrCfg);\n    }\n  }\n\n  private initAttributes() {\n    const { attributes, attributeOption, theme, shapeType } = this;\n    this.groupScales = [];\n    const tmpMap = {};\n\n    // 遍历每一个 attrOption，各自创建 Attribute 实例\n    for (const attrType in attributeOption) {\n      if (attributeOption.hasOwnProperty(attrType)) {\n        const option: AttributeOption = attributeOption[attrType];\n        if (!option) {\n          return;\n        }\n        const attrCfg: AttributeInstanceCfg = {\n          ...option,\n        };\n        const { callback, values, fields = [] } = attrCfg;\n\n        // 获取每一个字段对应的 scale\n        const scales = fields.map((field) => {\n          const scale = this.scales[field];\n          if (scale.isCategory && !tmpMap[field] && GROUP_ATTRS.includes(attrType)) {\n            this.groupScales.push(scale);\n            tmpMap[field] = true;\n          }\n          return scale;\n        });\n\n        attrCfg.scales = scales;\n\n        if (attrType !== 'position' && scales.length === 1 && scales[0].type === 'identity') {\n          // 用户在图形通道上声明了常量字段 color('red'), size(5)\n          attrCfg.values = scales[0].values;\n        } else if (!callback && !values) {\n          // 用户没有指定任何规则，则使用默认的映射规则\n          if (attrType === 'size') {\n            attrCfg.values = theme.sizes;\n          } else if (attrType === 'shape') {\n            attrCfg.values = theme.shapes[shapeType] || [];\n          } else if (attrType === 'color') {\n            if (scales.length) {\n              // 根据数值个数使用对应的色板\n              attrCfg.values = scales[0].values.length <= 10 ? theme.colors10 : theme.colors20;\n            } else {\n              attrCfg.values = theme.colors10;\n            }\n          }\n        }\n        const AttributeCtor = getAttributeClass(attrType);\n        attributes[attrType] = new AttributeCtor(attrCfg);\n      }\n    }\n  }\n\n  // 处理数据：分组 -> 数字化 -> adjust 调整\n  private processData(data: Data) {\n    this.hasSorted = false;\n    const { scales } = this.getAttribute('position');\n    const categoryScales = scales.filter((scale: Scale) => scale.isCategory);\n\n    const groupedArray = this.groupData(data); // 数据分组\n    const beforeAdjust = [];\n    for (let i = 0, len = groupedArray.length; i < len; i++) {\n      const subData = groupedArray[i];\n      const arr = [];\n      for (let j = 0, subLen = subData.length; j < subLen; j++) {\n        const originData = subData[j];\n        const item = {};\n        // tslint:disable-next-line: forin\n        for (const k in originData) {\n          item[k] = originData[k];\n        }\n        item[FIELD_ORIGIN] = originData;\n\n        // 将分类数据翻译成数据, 仅对位置相关的度量进行数字化处理\n        for (const scale of categoryScales) {\n          const field = scale.field;\n          item[field] = scale.translate(item[field]);\n        }\n        arr.push(item);\n      }\n      beforeAdjust.push(arr);\n    }\n\n    const dataArray = this.adjustData(beforeAdjust); // 进行 adjust 数据调整\n    this.beforeMappingData = dataArray;\n\n    return dataArray;\n  }\n\n  // 调整数据\n  private adjustData(dataArray: Data[]): Data[] {\n    const adjustOption = this.adjustOption;\n    let result = dataArray;\n    if (adjustOption) {\n      const xScale = this.getXScale();\n      const yScale = this.getYScale();\n      const xField = xScale.field;\n      const yField = yScale ? yScale.field : null;\n      for (let i = 0, len = adjustOption.length; i < len; i++) {\n        const adjust = adjustOption[i];\n        const adjustCfg: AdjustInstanceCfg = {\n          xField,\n          yField,\n          ...adjust,\n        };\n        const type = adjust.type;\n        if (type === 'dodge') {\n          const adjustNames = [];\n          if (xScale.isCategory || xScale.type === 'identity') {\n            adjustNames.push('x');\n          } else if (!yScale) {\n            adjustNames.push('y');\n          } else {\n            throw new Error('dodge is not support linear attribute, please use category attribute!');\n          }\n          adjustCfg.adjustNames = adjustNames;\n          // 每个分组内每条柱子的宽度占比，用户不可指定，用户需要通过 columnWidthRatio 指定\n          adjustCfg.dodgeRatio = this.theme.columnWidthRatio;\n        } else if (type === 'stack') {\n          const coordinate = this.coordinate;\n          if (!yScale) {\n            // 一维的情况下获取高度和默认size\n            adjustCfg.height = coordinate.getHeight();\n            const size = this.getDefaultValue('size') || 3;\n            adjustCfg.size = size;\n          }\n          // 不进行 transpose 时，用户又没有设置这个参数时，默认从上向下\n          if (!coordinate.isTransposed && isNil(adjustCfg.reverseOrder)) {\n            adjustCfg.reverseOrder = true;\n          }\n        }\n        const adjustCtor = getAdjustClass(type);\n        const adjustInstance = new adjustCtor(adjustCfg);\n\n        result = adjustInstance.process(result);\n\n        this.adjusts[type] = adjustInstance;\n      }\n    }\n\n    return result;\n  }\n\n  // 对数据进行分组\n  private groupData(data: Data): Data[] {\n    const groupScales = this.getGroupScales();\n    const scaleDefs = this.scaleDefs;\n    const appendConditions = {};\n    const groupFields = [];\n    for (let index = 0; index < groupScales.length; index++) {\n      const scale = groupScales[index];\n      const field = scale.field;\n      groupFields.push(field);\n      if (get(scaleDefs, [field, 'values'])) {\n        // 用户通过 view.scale() 接口指定了 values 属性\n        appendConditions[field] = scaleDefs[field].values;\n      }\n    }\n\n    return group(data, groupFields, appendConditions);\n  }\n\n  // 更新发生层叠后的数据对应的度量范围\n  private updateStackRange(scale: Scale, dataArray: Data[]) {\n    const mergeArray = flatten(dataArray);\n    const field = scale.field;\n    let min = scale.min;\n    let max = scale.max;\n    for (let index = 0; index < mergeArray.length; index++) {\n      const obj = mergeArray[index];\n      const tmpMin = Math.min.apply(null, obj[field]);\n      const tmpMax = Math.max.apply(null, obj[field]);\n      if (tmpMin < min) {\n        min = tmpMin;\n      }\n      if (tmpMax > max) {\n        max = tmpMax;\n      }\n    }\n    const scaleDefs = this.scaleDefs;\n    const cfg: LooseObject = {};\n    if (min < scale.min && !get(scaleDefs, [field, 'min'])) {\n      // 用户如果在列定义中定义了 min，则以用户定义的为准\n      cfg.min = min;\n    }\n    if (max > scale.max && !get(scaleDefs, [field, 'max'])) {\n      // 用户如果在列定义中定义了 max\n      cfg.max = max;\n    }\n\n    scale.change(cfg);\n  }\n\n  // 将数据映射至图形空间前的操作：排序以及关键点的生成\n  private beforeMapping(beforeMappingData: Data[]) {\n    // 当初加 clone 是因为 points 的引用关系，导致更新失败，可是现在貌似复现不出来了，所以暂时不进行 clone\n    // const source = clone(beforeMappingData);\n    const source = beforeMappingData;\n    if (this.sortable) {\n      this.sort(source);\n    }\n    if (this.generatePoints) {\n      // 需要生成关键点\n      for (let index = 0, length = source.length; index < length; index++) {\n        const currentData = source[index];\n        this.generateShapePoints(currentData);\n        const nextData = source[index + 1];\n        if (nextData) {\n          this.generateShapePoints(nextData);\n          currentData[0].nextPoints = nextData[0].points;\n        }\n      }\n    }\n\n    return source;\n  }\n\n  // 生成 shape 的关键点\n  private generateShapePoints(data: Data) {\n    const shapeFactory = this.getShapeFactory();\n    const shapeAttr = this.getAttribute('shape');\n    for (let index = 0; index < data.length; index++) {\n      const obj = data[index];\n      const cfg = this.createShapePointsCfg(obj);\n      const shape = shapeAttr ? this.getAttributeValues(shapeAttr, obj) : null;\n      const points = shapeFactory.getShapePoints(shape, cfg);\n      obj.points = points;\n    }\n  }\n\n  // 将数据归一化\n  private normalizeValues(values, scale) {\n    let rst = [];\n    if (isArray(values)) {\n      for (let index = 0; index < values.length; index++) {\n        const value = values[index];\n        rst.push(scale.scale(value));\n      }\n    } else {\n      rst = scale.scale(values);\n    }\n    return rst;\n  }\n\n  // 将数据映射至图形空间\n  private mapping(data: Data): MappingDatum[] {\n    const attributes = this.attributes;\n    const mappingData = [];\n    for (let index = 0; index < data.length; index++) {\n      const record = data[index];\n      const newRecord: MappingDatum = {\n        _origin: record[FIELD_ORIGIN],\n        points: record.points,\n        nextPoints: record.nextPoints,\n      };\n      for (const k in attributes) {\n        if (attributes.hasOwnProperty(k)) {\n          const attr = attributes[k];\n          const names = attr.names;\n          const values = this.getAttributeValues(attr, record);\n          if (names.length > 1) {\n            // position 之类的生成多个字段的属性\n            for (let j = 0; j < values.length; j += 1) {\n              const val = values[j];\n              const name = names[j];\n              newRecord[name] = isArray(val) && val.length === 1 ? val[0] : val; // 只有一个值时返回第一个属性值\n            }\n          } else {\n            // values.length === 1 的判断是以下情况，获取用户设置的图形属性值\n            // shape('a', ['dot', 'dash']), color('a', ['red', 'yellow'])\n            newRecord[names[0]] = values.length === 1 ? values[0] : values;\n          }\n        }\n      }\n\n      this.convertPoint(newRecord); // 将 x、y 转换成画布坐标\n      mappingData.push(newRecord);\n    }\n\n    return mappingData;\n  }\n\n  // 将归一化的坐标值转换成画布坐标\n  private convertPoint(mappingRecord: MappingDatum) {\n    const { x, y } = mappingRecord;\n\n    let rstX;\n    let rstY;\n    let obj;\n    const coordinate = this.coordinate;\n    if (isArray(x) && isArray(y)) {\n      rstX = [];\n      rstY = [];\n      for (let i = 0, j = 0, xLen = x.length, yLen = y.length; i < xLen && j < yLen; i += 1, j += 1) {\n        obj = coordinate.convert({\n          x: x[i],\n          y: y[j],\n        });\n        rstX.push(obj.x);\n        rstY.push(obj.y);\n      }\n    } else if (isArray(y)) {\n      rstY = [];\n      for (let index = 0; index < y.length; index++) {\n        const yVal = y[index];\n        obj = coordinate.convert({\n          x: x as number,\n          y: yVal,\n        });\n        if (rstX && rstX !== obj.x) {\n          if (!isArray(rstX)) {\n            rstX = [rstX];\n          }\n          rstX.push(obj.x);\n        } else {\n          rstX = obj.x;\n        }\n        rstY.push(obj.y);\n      }\n    } else if (isArray(x)) {\n      rstX = [];\n      for (let index = 0; index < x.length; index++) {\n        const xVal = x[index];\n        obj = coordinate.convert({\n          x: xVal,\n          y,\n        });\n        if (rstY && rstY !== obj.y) {\n          if (!isArray(rstY)) {\n            rstY = [rstY];\n          }\n          rstY.push(obj.y);\n        } else {\n          rstY = obj.y;\n        }\n        rstX.push(obj.x);\n      }\n    } else {\n      const point = coordinate.convert({\n        x,\n        y,\n      });\n      rstX = point.x;\n      rstY = point.y;\n    }\n    mappingRecord.x = rstX;\n    mappingRecord.y = rstY;\n  }\n\n  // 获取 style 配置\n  private getStyleCfg(styleOption: StyleOption, originData: Datum) {\n    const { fields = [], callback, cfg } = styleOption;\n    if (cfg) {\n      // 用户直接配置样式属性\n      return cfg;\n    }\n\n    const params = fields.map((field) => {\n      return originData[field];\n    });\n\n    return callback(...params);\n  }\n\n  private setCfg(cfg: InitCfg) {\n    const { coordinate, data, theme, scaleDefs } = cfg;\n    if (coordinate) {\n      this.coordinate = coordinate;\n    }\n    if (data) {\n      this.data = data;\n    }\n    if (scaleDefs) {\n      this.scaleDefs = scaleDefs;\n      this.idFields = [];\n      each(scaleDefs, (scaleDef, field) => {\n        if (scaleDef && scaleDef.key) {\n          this.idFields.push(field);\n        }\n      });\n    }\n    if (theme) {\n      this.theme = this.userTheme ? deepMix({}, theme, this.userTheme) : theme; // 支持 geometry 层级的主题设置\n    }\n  }\n\n  private renderLabels(mappingArray: MappingDatum[], isUpdate: boolean = false) {\n    let geometryLabel = this.geometryLabel;\n\n    if (!geometryLabel) {\n      // 初次创建\n      const labelType = this.getLabelType();\n      const GeometryLabelsCtor = getGeometryLabel(labelType);\n      geometryLabel = new GeometryLabelsCtor(this);\n      this.geometryLabel = geometryLabel;\n    }\n    geometryLabel.render(mappingArray, isUpdate);\n\n    // 将 label 同 element 进行关联\n    const labelsMap = geometryLabel.labelsRenderer.shapesMap;\n    each(this.elementsMap, (element: Element, id) => {\n      const labels = filterLabelsById(id, labelsMap); // element 实例同 label 进行绑定\n      if (labels.length) {\n        element.labelShape = labels;\n        for (let i = 0; i < labels.length; i++) {\n          const label = labels[i];\n          const labelChildren = label.getChildren();\n          for (let j = 0; j < labelChildren.length; j++) {\n            const child = labelChildren[j];\n            child.cfg.name = ['element', 'label'];\n            child.cfg.element = element;\n          }\n        }\n      }\n    });\n  }\n  /**\n   * 是否需要进行群组入场动画\n   * 规则：\n   * 1. 如果发生更新，则不进行\n   * 2. 如果用户关闭 geometry 动画，则不进行\n   * 3. 如果用户关闭了 appear 动画，则不进行\n   * 4. 如果用户配置了 appear.animation，则不进行\n   */\n  private canDoGroupAnimation(isUpdate: boolean) {\n    return (\n      !isUpdate &&\n      this.animateOption &&\n      (get(this.animateOption, 'appear') === undefined ||\n        (get(this.animateOption, 'appear') && get(this.animateOption, ['appear', 'animation']) === undefined))\n    );\n  }\n}\n","import { ext } from '@antv/matrix-util';\nimport { IGroup, IShape } from '../dependents';\n\nconst transform: (m: number[], actions: any[][]) => number[] = ext.transform;\n\nexport { transform };\n\n/**\n * 对元素进行平移操作。\n * @param element 进行变换的元素\n * @param x x 方向位移\n * @param y y 方向位移\n */\nexport function translate(element: IGroup | IShape, x: number, y: number) {\n  const matrix = transform(element.getMatrix(), [['t', x, y]]);\n  element.setMatrix(matrix);\n}\n\n/**\n * 对元素进行旋转操作。\n * @param element 进行变换的元素\n * @param rotateRadian 旋转弧度\n */\nexport function rotate(element: IGroup | IShape, rotateRadian: number) {\n  const { x, y } = element.attr();\n  const matrix = transform(element.getMatrix(), [\n    ['t', -x, -y],\n    ['r', rotateRadian],\n    ['t', x, y],\n  ]);\n  element.setMatrix(matrix);\n}\n\n/**\n * 获取元矩阵。\n * @returns identity matrix\n */\nexport function getIdentityMatrix(): number[] {\n  return [1, 0, 0, 0, 1, 0, 0, 0, 1];\n}\n\n/**\n * 围绕图形中心点进行缩放\n * @param element 进行缩放的图形元素\n * @param ratio 缩放比例\n */\nexport function zoom(element: IGroup | IShape, ratio: number) {\n  const bbox = element.getBBox();\n  const x = (bbox.minX + bbox.maxX) / 2;\n  const y = (bbox.minY + bbox.maxY) / 2;\n  element.applyToMatrix([x, y, 1]);\n\n  const matrix = transform(element.getMatrix(), [\n    ['t', -x, -y],\n    ['s', ratio, ratio],\n    ['t', x, y],\n  ]);\n  element.setMatrix(matrix);\n}\n","import { deepMix, each, get, isArray } from '@antv/util';\nimport { BBox, Coordinate, IGroup, IShape } from '../dependents';\nimport { LabelItem } from '../geometry/label/interface';\nimport { AnimateOption, GeometryLabelLayoutCfg } from '../interface';\n\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getReplaceAttrs, polarToCartesian } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\n\n/**\n * Labels 实例创建时，传入构造函数的参数定义\n */\nexport interface LabelsGroupCfg {\n  /** label 容器 */\n  container: IGroup;\n  /** label 布局配置 */\n  layout?: GeometryLabelLayoutCfg | GeometryLabelLayoutCfg[];\n}\n\n/**\n * Geometry labels 渲染组件\n */\nexport default class Labels {\n  /** 用于指定 labels 布局的类型 */\n  public layout: GeometryLabelLayoutCfg | GeometryLabelLayoutCfg[];\n  /** 图形容器 */\n  public container: IGroup;\n  /** 动画配置 */\n  public animate: AnimateOption | false;\n  /** label 绘制的区域 */\n  public region: BBox;\n\n  /** 存储当前 shape 的映射表，键值为 shape id */\n  public shapesMap: Record<string, IGroup> = {};\n  private lastShapesMap: Record<string, IGroup> = {};\n\n  constructor(cfg: LabelsGroupCfg) {\n    const { layout, container } = cfg;\n\n    this.layout = layout;\n    this.container = container;\n  }\n\n  /**\n   * 渲染文本\n   */\n  public render(items: LabelItem[], shapes: Record<string, IShape | IGroup>, isUpdate: boolean = false) {\n    this.shapesMap = {};\n    const container = this.container;\n    const offscreenGroup = this.createOffscreenGroup(); // 创建虚拟分组\n    if (items.length) {\n      // 如果 items 空的话就不进行绘制调整操作\n      // step 1: 在虚拟 group 中创建 shapes\n      for (const item of items) {\n        if (item) {\n          this.renderLabel(item, offscreenGroup);\n        }\n      }\n      // step 2: 根据布局，调整 labels\n      this.doLayout(items, shapes);\n      // step 3: 绘制 labelLine\n      this.renderLabelLine(items);\n      // step 4: 根据用户设置的偏移量调整 label\n      this.adjustLabel(items);\n    }\n\n    // 进行添加、更新、销毁操作\n    const lastShapesMap = this.lastShapesMap;\n    const shapesMap = this.shapesMap;\n    each(shapesMap, (shape, id) => {\n      if (shape.destroyed) {\n        // label 在布局调整环节被删除了（doLayout）\n        delete shapesMap[id];\n      } else {\n        if (lastShapesMap[id]) {\n          // 图形发生更新\n          const data = shape.get('data');\n          const origin = shape.get('origin');\n          const coordinate = shape.get('coordinate');\n          const currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n          const currentAnimateCfg = shape.get('animateCfg');\n          currentShape.set('data', data);\n          currentShape.set('origin', origin);\n          currentShape.set('animateCfg', currentAnimateCfg);\n          currentShape.set('coordinate', coordinate);\n\n          const updateAnimateCfg = get(currentAnimateCfg, 'update');\n          const currentChildren = currentShape.getChildren();\n          shape.getChildren().map((child, index) => {\n            const currentChild = currentChildren[index] as IShape;\n            currentChild.set('data', data);\n            currentChild.set('origin', origin);\n            currentChild.set('animateCfg', currentAnimateCfg);\n            currentChild.set('coordinate', coordinate);\n\n            const newAttrs = getReplaceAttrs(currentChild, child);\n            if (updateAnimateCfg) {\n              doAnimate(currentChild, updateAnimateCfg, {\n                toAttrs: newAttrs,\n                coordinate,\n              });\n            } else {\n              currentChild.attr(newAttrs);\n            }\n          });\n\n          this.shapesMap[id] = currentShape; // 保存引用\n        } else {\n          // 新生成的 shape\n          container.add(shape);\n\n          const animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n          if (animateCfg) {\n            doAnimate(shape, animateCfg, {\n              toAttrs: {\n                ...shape.attr(),\n              },\n              coordinate: shape.get('coordinate'),\n            });\n          }\n        }\n        delete lastShapesMap[id];\n      }\n    });\n\n    // 移除\n    each(lastShapesMap, (deleteShape) => {\n      const animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n      if (animateCfg) {\n        doAnimate(deleteShape, animateCfg, {\n          toAttrs: null,\n          coordinate: deleteShape.get('coordinate'),\n        });\n      } else {\n        deleteShape.remove(true); // 移除\n      }\n    });\n\n    this.lastShapesMap = shapesMap;\n    offscreenGroup.destroy();\n  }\n\n  /** 清楚当前 labels */\n  public clear() {\n    this.container.clear();\n    this.shapesMap = {};\n    this.lastShapesMap = {};\n  }\n\n  /** 销毁 */\n  public destroy() {\n    this.container.destroy();\n    this.shapesMap = null;\n    this.lastShapesMap = null;\n  }\n\n  private renderLabel(cfg: LabelItem, container: IGroup) {\n    const { id, data, mappingData, coordinate, animate, content } = cfg;\n    const shapeAppendCfg = {\n      id,\n      data,\n      origin: mappingData,\n      coordinate,\n    };\n    const labelGroup = container.addGroup({\n      name: 'label',\n      // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n      animateCfg:\n        this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate),\n      ...shapeAppendCfg,\n    });\n    let labelShape;\n    if ((content.isGroup && content.isGroup()) || (content.isShape && content.isShape())) {\n      // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n      const { width, height } = content.getCanvasBBox();\n      const textAlign = get(cfg, 'textAlign', 'left');\n\n      let x = cfg.x;\n      const y = cfg.y - height / 2;\n\n      if (textAlign === 'center') {\n        x = x - width / 2;\n      } else if (textAlign === 'right' || textAlign === 'end') {\n        x = x - width;\n      }\n\n      translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n      labelShape = content;\n      labelGroup.add(content);\n    } else {\n      labelShape = labelGroup.addShape('text', {\n        attrs: {\n          x: cfg.x,\n          y: cfg.y,\n          textAlign: cfg.textAlign,\n          textBaseline: get(cfg, 'textBaseline', 'middle'),\n          text: cfg.content,\n          ...cfg.style,\n        },\n        ...shapeAppendCfg,\n      });\n    }\n\n    if (cfg.rotate) {\n      rotate(labelShape, cfg.rotate);\n    }\n    this.shapesMap[id] = labelGroup;\n  }\n\n  // 根据type对label布局\n  private doLayout(items: LabelItem[], shapes: Record<string, IShape | IGroup>) {\n    if (this.layout) {\n      const layouts = isArray(this.layout) ? this.layout : [this.layout];\n      each(layouts, (layout: GeometryLabelLayoutCfg) => {\n        const layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n        if (layoutFn) {\n          const labelShapes = [];\n          const geometryShapes = [];\n          each(this.shapesMap, (labelShape, id) => {\n            labelShapes.push(labelShape);\n            geometryShapes.push(shapes[id]);\n          });\n\n          layoutFn(items, labelShapes, geometryShapes, this.region, layout.cfg);\n        }\n      });\n    }\n  }\n\n  private renderLabelLine(labelItems: LabelItem[]) {\n    each(labelItems, (labelItem) => {\n      const coordinate: Coordinate = get(labelItem, 'coordinate');\n      if (!labelItem || !coordinate) {\n        return;\n      }\n      const center = coordinate.getCenter();\n      const radius = coordinate.getRadius();\n      if (!labelItem.labelLine) {\n        // labelLine: null | false，关闭 label 对应的 labelLine\n        return;\n      }\n      const labelLineCfg = get(labelItem, 'labelLine', {});\n      const id = labelItem.id;\n      let path = labelLineCfg.path;\n      if (!path) {\n        const start = polarToCartesian(center.x, center.y, radius, labelItem.angle);\n        path = [\n          ['M', start.x, start.y],\n          ['L', labelItem.x, labelItem.y],\n        ];\n      }\n      const labelGroup = this.shapesMap[id];\n      if (!labelGroup.destroyed) {\n        labelGroup.addShape('path', {\n          capture: false, // labelLine 默认不参与事件捕获\n          attrs: {\n            path,\n            stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'),\n            fill: null,\n            ...labelLineCfg.style,\n          },\n          id,\n          origin: labelItem.mappingData,\n          data: labelItem.data,\n          coordinate: labelItem.coordinate,\n        });\n      }\n    });\n  }\n\n  private createOffscreenGroup() {\n    const container = this.container;\n    const GroupClass = container.getGroupBase(); // 获取分组的构造函数\n    const newGroup = new GroupClass({});\n    return newGroup;\n  }\n\n  private adjustLabel(items: LabelItem[]) {\n    each(items, (item) => {\n      if (item) {\n        const id = item.id;\n        const labelGroup = this.shapesMap[id];\n        if (!labelGroup.destroyed) {\n          const labelShape = labelGroup.find((ele) => ele.get('type') === 'text');\n          if (labelShape) {\n            if (item.offsetX) {\n              labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n            }\n            if (item.offsetY) {\n              labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n            }\n          }\n        }\n      }\n    });\n  }\n}\n","import { deepMix, each, get, isArray, isFunction, isNil, isUndefined } from '@antv/util';\n\nimport { FIELD_ORIGIN } from '../../constant';\nimport { Scale } from '../../dependents';\nimport { Datum, LabelOption, MappingDatum, Point } from '../../interface';\nimport { LabelCfg, LabelItem, LabelPointCfg, TextAlign } from './interface';\n\nimport { getDefaultAnimateCfg } from '../../animate';\nimport { getPolygonCentroid } from '../../util/graphics';\n\nimport Labels from '../../component/labels';\nimport Geometry from '../base';\nimport Element from '../element';\n\nexport type GeometryLabelConstructor = new (cfg: any) => GeometryLabel;\n\nfunction avg(arr: number[]) {\n  let sum = 0;\n  each(arr, (value: number) => {\n    sum += value;\n  });\n  return sum / arr.length;\n}\n\n/**\n * Geometry Label 基类，用于生成 Geometry 下所有 label 的配置项信息\n */\nexport default class GeometryLabel {\n  /** geometry 实例 */\n  public readonly geometry: Geometry;\n  public labelsRenderer: Labels;\n  /** 默认的布局 */\n  public defaultLayout: string;\n\n  constructor(geometry: Geometry) {\n    this.geometry = geometry;\n  }\n\n  public getLabelItems(mapppingArray: MappingDatum[]): LabelItem[] {\n    const items = [];\n    const labelCfgs = this.getLabelCfgs(mapppingArray);\n    // 获取 label 相关的 x，y 的值，获取具体的 x, y，防止存在数组\n    each(mapppingArray, (mappingData: MappingDatum, index: number) => {\n      const labelCfg = labelCfgs[index];\n      if (!labelCfg || isNil(mappingData.x) || isNil(mappingData.y)) {\n        items.push(null);\n        return;\n      }\n\n      const labelContent = !isArray(labelCfg.content) ? [labelCfg.content] : labelCfg.content;\n      labelCfg.content = labelContent;\n      const total = labelContent.length;\n      each(labelContent, (content, subIndex) => {\n        if (isNil(content) || content === '') {\n          items.push(null);\n          return;\n        }\n\n        const item = {\n          ...labelCfg,\n          ...this.getLabelPoint(labelCfg, mappingData, subIndex),\n        };\n        if (!item.textAlign) {\n          item.textAlign = this.getLabelAlign(item, subIndex, total);\n        }\n\n        if (item.offset <= 0) {\n          item.labelLine = null;\n        }\n\n        items.push(item);\n      });\n    });\n    return items;\n  }\n\n  public render(mapppingArray: MappingDatum[], isUpdate: boolean = false) {\n    const labelItems = this.getLabelItems(mapppingArray);\n\n    const labelsRenderer = this.getLabelsRenderer();\n    const shapes = this.getGeometryShapes();\n    // 渲染文本\n    labelsRenderer.render(labelItems, shapes, isUpdate);\n  }\n\n  public clear() {\n    const labelsRenderer = this.labelsRenderer;\n    if (labelsRenderer) {\n      labelsRenderer.clear();\n    }\n  }\n\n  public destroy() {\n    const labelsRenderer = this.labelsRenderer;\n    if (labelsRenderer) {\n      labelsRenderer.destroy();\n    }\n    this.labelsRenderer = null;\n  }\n\n  // geometry 更新之后，对应的 Coordinate 也会更新，为了获取到最新鲜的 Coordinate，故使用方法获取\n  public getCoordinate() {\n    return this.geometry.coordinate;\n  }\n\n  /**\n   * 获取 label 的默认配置\n   */\n  protected getDefaultLabelCfg() {\n    return get(this.geometry.theme, 'labels', {});\n  }\n\n  /**\n   * 设置 label 位置\n   * @param labelPointCfg\n   * @param mappingData\n   * @param index\n   * @param position\n   */\n  protected setLabelPosition(\n    labelPointCfg: LabelPointCfg,\n    mappingData: MappingDatum,\n    index: number,\n    position: string\n  ) {}\n\n  /**\n   * 获取文本默认偏移量\n   * @param offset\n   * @returns\n   */\n  protected getDefaultOffset(offset: number) {\n    const coordinate = this.getCoordinate();\n    const vector = this.getOffsetVector(offset);\n    return coordinate.isTransposed ? vector[0] : vector[1];\n  }\n\n  /**\n   * 获取每个 label 的偏移量\n   * @param labelCfg\n   * @param index\n   * @param total\n   * @returns\n   */\n  protected getLabelOffset(labelCfg: LabelCfg, index: number, total: number) {\n    const offset = this.getDefaultOffset(labelCfg.offset);\n    const coordinate = this.getCoordinate();\n    const transposed = coordinate.isTransposed;\n    const dim = transposed ? 'x' : 'y';\n    const factor = transposed ? 1 : -1; // y 方向上越大，像素的坐标越小，所以transposed时将系数变成\n    const offsetPoint = {\n      x: 0,\n      y: 0,\n    };\n    if (index > 0 || total === 1) {\n      // 判断是否小于0\n      offsetPoint[dim] = offset * factor;\n    } else {\n      offsetPoint[dim] = offset * factor * -1;\n    }\n    return offsetPoint;\n  }\n\n  /**\n   * 获取每个 label 的位置\n   * @param labelCfg\n   * @param mappingData\n   * @param index\n   * @returns label point\n   */\n  protected getLabelPoint(labelCfg: LabelCfg, mappingData: MappingDatum, index: number): LabelPointCfg {\n    const coordinate = this.getCoordinate();\n    const total = labelCfg.content.length;\n\n    function getDimValue(value, idx) {\n      let v = value;\n      if (isArray(v)) {\n        if (labelCfg.content.length === 1) {\n          // 如果仅一个 label，多个 y, 取最后一个 y\n          if (v.length <= 2) {\n            v = v[value.length - 1];\n          } else {\n            v = avg(v);\n          }\n        } else {\n          v = v[idx];\n        }\n      }\n      return v;\n    }\n\n    const label = {\n      content: labelCfg.content[index],\n      x: 0,\n      y: 0,\n      start: { x: 0, y: 0 },\n      color: '#fff',\n    };\n    // 多边形场景，多用于地图\n    if (mappingData && this.geometry.type === 'polygon') {\n      const centroid = getPolygonCentroid(mappingData.x, mappingData.y);\n      label.x = centroid[0];\n      label.y = centroid[1];\n    } else {\n      label.x = getDimValue(mappingData.x, index);\n      label.y = getDimValue(mappingData.y, index);\n    }\n\n    // 处理漏斗图文本位置\n    const shape = isArray(mappingData.shape) ? mappingData.shape[0] : mappingData.shape;\n    if (shape === 'funnel' || shape === 'pyramid') {\n      const nextPoints = get(mappingData, 'nextPoints');\n      const points = get(mappingData, 'points');\n      if (nextPoints) {\n        // 非漏斗图底部\n        const point1 = coordinate.convert(points[1] as Point);\n        const point2 = coordinate.convert(nextPoints[1] as Point);\n        label.x = (point1.x + point2.x) / 2;\n        label.y = (point1.y + point2.y) / 2;\n      } else if (shape === 'pyramid') {\n        const point1 = coordinate.convert(points[1] as Point);\n        const point2 = coordinate.convert(points[2] as Point);\n        label.x = (point1.x + point2.x) / 2;\n        label.y = (point1.y + point2.y) / 2;\n      }\n    }\n\n    if (labelCfg.position) {\n      // 如果 label 支持 position 属性\n      this.setLabelPosition(label, mappingData, index, labelCfg.position);\n    }\n    const offsetPoint = this.getLabelOffset(labelCfg, index, total);\n    label.start = { x: label.x, y: label.y };\n    label.x += offsetPoint.x;\n    label.y += offsetPoint.y;\n    label.color = mappingData.color;\n    return label;\n  }\n\n  /**\n   * 获取文本的对齐方式\n   * @param item\n   * @param index\n   * @param total\n   * @returns\n   */\n  protected getLabelAlign(item: LabelItem, index: number, total: number): TextAlign {\n    let align: TextAlign = 'center';\n    const coordinate = this.getCoordinate();\n    if (coordinate.isTransposed) {\n      const offset = this.getDefaultOffset(item.offset);\n      if (offset < 0) {\n        align = 'right';\n      } else if (offset === 0) {\n        align = 'center';\n      } else {\n        align = 'left';\n      }\n      if (total > 1 && index === 0) {\n        if (align === 'right') {\n          align = 'left';\n        } else if (align === 'left') {\n          align = 'right';\n        }\n      }\n    }\n    return align;\n  }\n\n  /**\n   * 获取每一个 label 的唯一 id\n   * @param mappingData label 对应的图形的绘制数据\n   */\n  protected getLabelId(mappingData: MappingDatum) {\n    const geometry = this.geometry;\n    const type = geometry.type;\n    const xScale = geometry.getXScale();\n    const yScale = geometry.getYScale();\n    const origin = mappingData[FIELD_ORIGIN]; // 原始数据\n\n    let labelId = geometry.getElementId(mappingData);\n    if (type === 'line' || type === 'area') {\n      // 折线图以及区域图，一条线会对应一组数据，即多个 labels，为了区分这些 labels，需要在 line id 的前提下加上 x 字段值\n      labelId += ` ${origin[xScale.field]}`;\n    } else if (type === 'path') {\n      // path 路径图，无序，有可能存在相同 x 不同 y 的情况，需要通过 x y 来确定唯一 id\n      labelId += ` ${origin[xScale.field]}-${origin[yScale.field]}`;\n    }\n\n    return labelId;\n  }\n\n  // 获取 labels 组件\n  private getLabelsRenderer() {\n    const { labelsContainer, labelOption, canvasRegion, animateOption } = this.geometry;\n    const coordinate = this.geometry.coordinate;\n\n    let labelsRenderer = this.labelsRenderer;\n    if (!labelsRenderer) {\n      labelsRenderer = new Labels({\n        container: labelsContainer,\n        layout: get(labelOption, ['cfg', 'layout'], {\n          type: this.defaultLayout,\n        }),\n      });\n      this.labelsRenderer = labelsRenderer;\n    }\n    labelsRenderer.region = canvasRegion;\n    // 设置动画配置，如果 geometry 的动画关闭了，那么 label 的动画也会关闭\n    labelsRenderer.animate = animateOption ? getDefaultAnimateCfg('label', coordinate) : false;\n\n    return labelsRenderer;\n  }\n\n  private getLabelCfgs(mapppingArray: MappingDatum[]): LabelCfg[] {\n    const geometry = this.geometry;\n    const defaultLabelCfg = this.getDefaultLabelCfg();\n    const { type, theme, labelOption, scales, coordinate } = geometry;\n    const { fields, callback, cfg } = labelOption as LabelOption;\n    const labelScales = fields.map((field: string) => {\n      return scales[field];\n    });\n\n    const labelCfgs: LabelCfg[] = [];\n    each(mapppingArray, (mappingData: MappingDatum, index: number) => {\n      const origin = mappingData[FIELD_ORIGIN]; // 原始数据\n      const originText = this.getLabelText(origin, labelScales);\n      let callbackCfg;\n      if (callback) {\n        // 当同时配置了 callback 和 cfg 时，以 callback 为准\n        const originValues = fields.map((field: string) => origin[field]);\n        callbackCfg = callback(...originValues);\n        if (isNil(callbackCfg)) {\n          labelCfgs.push(null);\n          return;\n        }\n      }\n\n      let labelCfg = {\n        id: this.getLabelId(mappingData), // 进行 ID 标记\n        data: origin, // 存储原始数据\n        mappingData, // 存储映射后的数据,\n        coordinate, // 坐标系\n        ...cfg,\n        ...callbackCfg,\n      };\n\n      const content = labelCfg.content;\n      if (isFunction(content)) {\n        labelCfg.content = content(origin, mappingData, index);\n      } else if (isUndefined(content)) {\n        // 用户未配置 content，则默认为映射的第一个字段的值\n        labelCfg.content = originText[0];\n      }\n\n      if (isFunction(labelCfg.position)) {\n        labelCfg.position = labelCfg.position(origin, mappingData, index);\n      }\n\n      if (type === 'polygon' || (labelCfg.offset < 0 && !['line', 'point', 'path'].includes(type))) {\n        // polygon 或者 offset 小于 0 时，文本展示在图形内部，将其颜色设置为 白色\n        labelCfg = deepMix({}, defaultLabelCfg, theme.innerLabels, labelCfg);\n      } else {\n        labelCfg = deepMix({}, defaultLabelCfg, theme.labels, labelCfg);\n      }\n\n      labelCfgs.push(labelCfg);\n    });\n\n    return labelCfgs;\n  }\n\n  private getLabelText(origin: Datum, scales: Scale[]) {\n    const labelTexts = [];\n    each(scales, (scale: Scale) => {\n      let value = origin[scale.field];\n      if (isArray(value)) {\n        value = value.map((subVal) => {\n          return scale.getText(subVal);\n        });\n      } else {\n        value = scale.getText(value);\n      }\n\n      if (isNil(value) || value === '') {\n        labelTexts.push(null);\n      } else {\n        labelTexts.push(value);\n      }\n    });\n    return labelTexts;\n  }\n\n  private getOffsetVector(offset = 0) {\n    const coordinate = this.getCoordinate();\n    // 如果 x,y 翻转，则偏移 x，否则偏移 y\n    return coordinate.isTransposed ? coordinate.applyMatrix(offset, 0) : coordinate.applyMatrix(0, offset);\n  }\n\n  private getGeometryShapes() {\n    const geometry = this.geometry;\n    const shapes = {};\n    each(geometry.elementsMap, (element: Element, id: string) => {\n      shapes[id] = element.shape;\n    });\n    // 因为有可能 shape 还在进行动画，导致 shape.getBBox() 获取到的值不是最终态，所以需要从 offscreenGroup 获取\n    each(geometry.getOffscreenGroup().getChildren(), (child) => {\n      const id = geometry.getElementId(child.get('origin').mappingData);\n      shapes[id] = child;\n    });\n\n    return shapes;\n  }\n}\n","/* G2 的一个壳子，不包含 Geometry，由开发者自己定义和引入 */\n\nexport const VERSION = '4.0.15';\n\n// 核心基类导出\nexport { Chart, View, Event } from './chart'; // Chart, View 类\nexport { Controller as ComponentController } from './chart/controller/base'; // G2 组件基类\nexport { default as Geometry } from './geometry/base'; // Geometry 基类\nexport { default as GeometryLabel } from './geometry/label/base'; // Geometry Label 基类\nexport { Interaction } from './interaction'; // Interaction 基类\nexport { Facet } from './facet'; // Facet 基类\nexport { default as InteractionAction } from './interaction/action/base'; // Interaction Action 基类\n\n// 注册 ComponentController\nexport { registerComponentController } from './chart';\n\n// 注册 Geometry\nexport { registerGeometry } from './chart';\n\n// 注册 Geometry Shape\nexport { registerShape, registerShapeFactory, getShapeFactory } from './geometry/shape/base';\n\n// 注册 Geometry label 以及 Geometry Label 布局函数\nexport {\n  registerGeometryLabel,\n  registerGeometryLabelLayout,\n  getGeometryLabel,\n  getGeometryLabelLayout,\n} from './geometry/label';\n\n// 注册 interaction\nexport { getInteraction, registerInteraction, registerAction, getActionClass } from './interaction';\n\n// 注册 facet\nexport { getFacet, registerFacet } from './facet';\n\n// 注册主题\nexport { getTheme, registerTheme } from './theme';\n\n// G engine 管理相关\nexport { registerEngine, getEngine } from './engine';\n\n// 注册动画函数\nexport { registerAnimation, getAnimation } from './animate/animation';\n\nexport { LAYER, DIRECTION } from './constant';\n\n// 因为 typescript 部分版本不支持 export * as 语法。\nimport * as Types from './interface';\nexport { Types };\n","const WHITE_COLORS = {\n  100: '#000',\n  95: '#0D0D0D',\n  85: '#262626',\n  65: '#595959',\n  45: '#8C8C8C',\n  25: '#BFBFBF',\n  15: '#D9D9D9',\n  6: '#F0F0F0',\n};\n\nconst BLACK_COLORS = {\n  100: '#FFFFFF',\n  95: '#F2F2F2',\n  85: '#D9D9D9',\n  65: '#A6A6A6',\n  45: '#737373',\n  25: '#404040',\n  15: '#262626',\n  6: '#0F0F0F',\n};\n\nconst QUALITATIVE_10 = [\n  '#5B8FF9',\n  '#5AD8A6',\n  '#5D7092',\n  '#F6BD16',\n  '#E86452',\n  '#6DC8EC',\n  '#945FB9',\n  '#FF9845',\n  '#1E9493',\n  '#FF99C3',\n];\n\nconst QUALITATIVE_20 = [\n  '#5B8FF9',\n  '#CDDDFD',\n  '#5AD8A6',\n  '#CDF3E4',\n  '#5D7092',\n  '#CED4DE',\n  '#F6BD16',\n  '#FCEBB9',\n  '#E86452',\n  '#F8D0CB',\n  '#6DC8EC',\n  '#D3EEF9',\n  '#945FB9',\n  '#DECFEA',\n  '#FF9845',\n  '#FFE0C7',\n  '#1E9493',\n  '#BBDEDE',\n  '#FF99C3',\n  '#FFE0ED',\n];\n\nexport const antvDark = {\n  backgroundColor: '#141414',\n  /** 主题色 */\n  brandColor: QUALITATIVE_10[0],\n  /** 分类色板 1，在数据量小于等于 10 时使用 */\n  paletteQualitative10: QUALITATIVE_10,\n  /** 分类色板 2，在数据量大于 10 时使用 */\n  paletteQualitative20: QUALITATIVE_20,\n  /** 语义色 */\n  paletteSemanticRed: '#F4664A',\n  /** 语义色 */\n  paletteSemanticGreen: '#30BF78',\n  /** 语义色 */\n  paletteSemanticYellow: '#FAAD14',\n  /** 字体 */\n  fontFamily: `\"-apple-system\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial,\n  \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\",\n  \"Noto Color Emoji\"`,\n\n  // -------------------- 坐标轴 --------------------\n  /** 坐标轴线颜色 */\n  axisLineBorderColor: BLACK_COLORS[25],\n  /** 坐标轴线粗细 */\n  axisLineBorder: 0.5,\n  /** 坐标轴线 lineDash 设置 */\n  axisLineDash: null,\n\n  /** 坐标轴标题颜色 */\n  axisTitleTextFillColor: BLACK_COLORS[65],\n  /** 坐标轴标题文本字体大小 */\n  axisTitleTextFontSize: 12,\n  /** 坐标轴标题文本行高 */\n  axisTitleTextLineHeight: 12,\n  /** 坐标轴标题文本字体粗细 */\n  axisTitleTextFontWeight: 'normal',\n\n  /** 坐标轴刻度线颜色 */\n  axisTickLineBorderColor: BLACK_COLORS[25],\n  /** 坐标轴刻度线长度 */\n  axisTickLineLength: 4,\n  /** 坐标轴刻度线粗细 */\n  axisTickLineBorder: 0.5,\n\n  /** 坐标轴次刻度线颜色 */\n  axisSubTickLineBorderColor: BLACK_COLORS[15],\n  /** 坐标轴次刻度线长度 */\n  axisSubTickLineLength: 2,\n  /** 坐标轴次刻度线粗细 */\n  axisSubTickLineBorder: 0.5,\n\n  /** 坐标轴刻度文本颜色 */\n  axisLabelFillColor: BLACK_COLORS[45],\n  /** 坐标轴刻度文本字体大小 */\n  axisLabelFontSize: 12,\n  /** 坐标轴刻度文本行高 */\n  axisLabelLineHeight: 12,\n  /** 坐标轴刻度文本字体粗细 */\n  axisLabelFontWeight: 'normal',\n\n  /** 坐标轴网格线颜色 */\n  axisGridBorderColor: BLACK_COLORS[15],\n  /** 坐标轴网格线粗细 */\n  axisGridBorder: 0.5,\n  /** 坐标轴网格线虚线设置 */\n  axisGridLineDash: null,\n\n  // -------------------- 图例 --------------------\n  /** 图例标题颜色 */\n  legendTitleTextFillColor: BLACK_COLORS[45],\n  /** 图例标题文本字体大小 */\n  legendTitleTextFontSize: 12,\n  /** 图例标题文本行高 */\n  legendTitleTextLineHeight: 21,\n  /** 图例标题文本字体粗细 */\n  legendTitleTextFontWeight: 'normal',\n\n  /** 图例 marker 颜色 */\n  legendMarkerColor: QUALITATIVE_10[0],\n  /** 图例 marker 默认半径大小 */\n  legendMarkerSize: 4,\n  /** 图例 'circle' marker 半径 */\n  legendCircleMarkerSize: 4,\n  /** 图例 'square' marker 半径 */\n  legendSquareMarkerSize: 4,\n  /** 图例 'line' marker 半径 */\n  legendLineMarkerSize: 5,\n\n  /** 图例项文本颜色 */\n  legendItemNameFillColor: BLACK_COLORS[65],\n  /** 图例项文本字体大小 */\n  legendItemNameFontSize: 12,\n  /** 图例项文本行高 */\n  legendItemNameLineHeight: 12,\n  /** 图例项粗细 */\n  legendItemNameFontWeight: 'normal',\n\n  /** 连续图例滑块填充色 */\n  sliderRailFillColor: BLACK_COLORS[15],\n  /** 连续图例滑块边框粗细 */\n  sliderRailBorder: 0,\n  /** 连续图例滑块边框颜色 */\n  sliderRailBorderColor: null,\n  /** 连续图例滑块宽度 */\n  sliderRailWidth: 100,\n  /** 连续图例滑块高度 */\n  sliderRailHeight: 12,\n\n  /** 连续图例文本颜色 */\n  sliderLabelTextFillColor: BLACK_COLORS[45],\n  /** 连续图例文本字体大小 */\n  sliderLabelTextFontSize: 12,\n  /** 连续图例文本行高 */\n  sliderLabelTextLineHeight: 12,\n  /** 连续图例文本字体粗细 */\n  sliderLabelTextFontWeight: 'normal',\n\n  /** 连续图例滑块颜色 */\n  sliderHandlerFillColor: WHITE_COLORS[6],\n  /** 连续图例滑块宽度 */\n  sliderHandlerWidth: 10,\n  /** 连续图例滑块高度 */\n  sliderHandlerHeight: 14,\n  /** 连续图例滑块边框粗细 */\n  sliderHandlerBorder: 1,\n  /** 连续图例滑块边框颜色 */\n  sliderHandlerBorderColor: WHITE_COLORS[25],\n\n  // -------------------- Annotation，图形标注 --------------------\n  /** arc 图形标注描边颜色 */\n  annotationArcBorderColor: BLACK_COLORS[15],\n  /** arc 图形标注粗细 */\n  annotationArcBorder: 0.5,\n\n  /** line 图形标注颜色 */\n  annotationLineBorderColor: BLACK_COLORS[25],\n  /** line 图形标注粗细 */\n  annotationLineBorder: 0.5,\n  /** lube 图形标注的虚线间隔 */\n  annotationLineDash: null,\n\n  /** text 图形标注文本颜色 */\n  annotationTextFillColor: BLACK_COLORS[65],\n  /** text 图形标注文本字体大小 */\n  annotationTextFontSize: 12,\n  /** text 图形标注文本行高 */\n  annotationTextLineHeight: 12,\n  /** text 图形标注文本字体粗细 */\n  annotationTextFontWeight: 'normal',\n  /** text 图形标注文本边框颜色 */\n  annotationTextBorderColor: WHITE_COLORS[95],\n  /** text 图形标注文本边框粗细 */\n  annotationTextBorder: 1.5,\n\n  /** region 图形标注填充颜色 */\n  annotationRegionFillColor: BLACK_COLORS[100],\n  /** region 图形标注填充颜色透明色 */\n  annotationRegionFillOpacity: 0.06,\n  /** region 图形标注描边粗细 */\n  annotationRegionBorder: 0,\n  /** region 图形标注描边颜色 */\n  annotationRegionBorderColor: null,\n\n  /** dataMarker 图形标注线的长度 */\n  annotationDataMarkerLineLength: 16,\n\n  // -------------------- Tooltip --------------------\n  /** tooltip crosshairs 辅助线颜色 */\n  tooltipCrosshairsBorderColor: BLACK_COLORS[25],\n  /** tooltip crosshairs 辅助线粗细 */\n  tooltipCrosshairsBorder: 0.5,\n  /** tooltip crosshairs 辅助线虚线间隔 */\n  tooltipCrosshairsLineDash: null,\n\n  /** tooltip 内容框背景色 */\n  tooltipContainerFillColor: '#1f1f1f',\n  tooltipContainerFillOpacity: 0.95,\n  /** tooltip 内容框阴影 */\n  tooltipContainerShadow: '0px 2px 4px rgba(0,0,0,.5)',\n  /** tooltip 内容框圆角 */\n  tooltipContainerBorderRadius: 3,\n\n  /** tooltip 文本颜色 */\n  tooltipTextFillColor: BLACK_COLORS[65],\n  /** tooltip 文本字体大小 */\n  tooltipTextFontSize: 12,\n  /** tooltip 文本行高 */\n  tooltipTextLineHeight: 12,\n  /** tooltip 文本字体粗细 */\n  tooltipTextFontWeight: 'bold',\n\n  // -------------------- Geometry labels --------------------\n  /** Geometry label 文本颜色 */\n  labelFillColor: BLACK_COLORS[65],\n  /** Geometry label 文本字体大小 */\n  labelFontSize: 12,\n  /** Geometry label 文本行高 */\n  labelLineHeight: 12,\n  /** Geometry label 文本字体粗细 */\n  labelFontWeight: 'normal',\n  /** Geometry label 文本描边颜色 */\n  labelBorderColor: null,\n  /** Geometry label 文本描边粗细 */\n  labelBorder: 0,\n\n  /** Geometry innerLabel 文本颜色 */\n  innerLabelFillColor: WHITE_COLORS[100],\n  /** Geometry innerLabel 文本字体大小 */\n  innerLabelFontSize: 12,\n  /** Geometry innerLabel 文本行高 */\n  innerLabelLineHeight: 12,\n  /** Geometry innerLabel 文本字体粗细 */\n  innerLabelFontWeight: 'normal',\n  /** Geometry innerLabel 文本描边颜色 */\n  innerLabelBorderColor: null,\n  /** Geometry innerLabel 文本描边粗细 */\n  innerLabelBorder: 0,\n\n  /** Geometry label　文本连接线粗细 */\n  labelLineBorder: 0.5,\n  /** Geometry label 文本连接线颜色 */\n  labelLineBorderColor: BLACK_COLORS[25],\n\n  // -------------------- Geometry 图形样式--------------------\n  /** 点图填充颜色 */\n  pointFillColor: QUALITATIVE_10[0],\n  /** 点图填充颜色透明度 */\n  pointFillOpacity: 0.95,\n  /** 点图大小 */\n  pointSize: 4,\n  /** 点图描边粗细 */\n  pointBorder: 1,\n  /** 点图描边颜色 */\n  pointBorderColor: WHITE_COLORS[100],\n  /** 点图描边透明度 */\n  pointBorderOpacity: 1,\n\n  /** 点图 active 状态下描边颜色 */\n  pointActiveBorderColor: BLACK_COLORS[100],\n\n  /** 点图 selected 状态下描边粗细 */\n  pointSelectedBorder: 2,\n  /** 点图 selected 状态下描边颜色 */\n  pointSelectedBorderColor: BLACK_COLORS[100],\n\n  /** 点图 inactive 状态下填充颜色透明度 */\n  pointInactiveFillOpacity: 0.3,\n  /** 点图 inactive 状态下描边透明度 */\n  pointInactiveBorderOpacity: 0.3,\n\n  /** 空心点图大小 */\n  hollowPointSize: 4,\n  /** 空心点图描边粗细 */\n  hollowPointBorder: 1,\n  /** 空心点图描边颜色 */\n  hollowPointBorderColor: QUALITATIVE_10[0],\n  /** 空心点图描边透明度 */\n  hollowPointBorderOpacity: 0.95,\n  hollowPointFillColor: WHITE_COLORS[100],\n\n  /** 空心点图 active 状态下描边粗细 */\n  hollowPointActiveBorder: 1,\n  /** 空心点图 active 状态下描边颜色 */\n  hollowPointActiveBorderColor: BLACK_COLORS[100],\n  /** 空心点图 active 状态下描边透明度 */\n  hollowPointActiveBorderOpacity: 1,\n\n  /** 空心点图 selected 状态下描边粗细 */\n  hollowPointSelectedBorder: 2,\n  /** 空心点图 selected 状态下描边颜色 */\n  hollowPointSelectedBorderColor: BLACK_COLORS[100],\n  /** 空心点图 selected 状态下描边透明度 */\n  hollowPointSelectedBorderOpacity: 1,\n\n  /** 空心点图 inactive 状态下描边透明度 */\n  hollowPointInactiveBorderOpacity: 0.3,\n\n  /** 线图粗细 */\n  lineBorder: 2,\n  /** 线图颜色 */\n  lineBorderColor: QUALITATIVE_10[0],\n  /** 线图透明度 */\n  lineBorderOpacity: 1,\n\n  /** 线图 Active 状态下粗细 */\n  lineActiveBorder: 3,\n\n  /** 线图 selected 状态下粗细 */\n  lineSelectedBorder: 3,\n\n  /** 线图 inactive 状态下透明度 */\n  lineInactiveBorderOpacity: 0.3,\n\n  /** area 填充颜色 */\n  areaFillColor: QUALITATIVE_10[0],\n  /** area 填充透明度 */\n  areaFillOpacity: 0.25,\n\n  /** area 在 active 状态下的填充透明度 */\n  areaActiveFillColor: QUALITATIVE_10[0],\n  areaActiveFillOpacity: 0.5,\n\n  /** area 在 selected 状态下的填充透明度 */\n  areaSelectedFillColor: QUALITATIVE_10[0],\n  areaSelectedFillOpacity: 0.5,\n\n  /** area inactive 状态下填充透明度 */\n  areaInactiveFillOpacity: 0.3,\n\n  /** hollowArea 颜色 */\n  hollowAreaBorderColor: QUALITATIVE_10[0],\n  /** hollowArea 边框粗细 */\n  hollowAreaBorder: 2,\n  /** hollowArea 边框透明度 */\n  hollowAreaBorderOpacity: 1,\n\n  /** hollowArea active 状态下的边框粗细 */\n  hollowAreaActiveBorder: 3,\n  hollowAreaActiveBorderColor: BLACK_COLORS[100],\n\n  /** hollowArea selected 状态下的边框粗细 */\n  hollowAreaSelectedBorder: 3,\n  hollowAreaSelectedBorderColor: BLACK_COLORS[100],\n\n  /** hollowArea inactive 状态下的边框透明度 */\n  hollowAreaInactiveBorderOpacity: 0.3,\n\n  /** interval 填充颜色 */\n  intervalFillColor: QUALITATIVE_10[0],\n  /** interval 填充透明度 */\n  intervalFillOpacity: 0.95,\n\n  /** interval active 状态下边框粗细 */\n  intervalActiveBorder: 1,\n  /** interval active 状态下边框颜色 */\n  intervalActiveBorderColor: BLACK_COLORS[100],\n  intervalActiveBorderOpacity: 1,\n\n  /** interval selected 状态下边框粗细 */\n  intervalSelectedBorder: 2,\n  /** interval selected 状态下边框颜色 */\n  intervalSelectedBorderColor: BLACK_COLORS[100],\n  /** interval selected 状态下边框透明度 */\n  intervalSelectedBorderOpacity: 1,\n\n  /** interval inactive 状态下边框透明度 */\n  intervalInactiveBorderOpacity: 0.3,\n  /** interval inactive 状态下填充透明度 */\n  intervalInactiveFillOpacity: 0.3,\n\n  /** interval 边框粗细 */\n  hollowIntervalBorder: 2,\n  /** hollowInterval 边框颜色 */\n  hollowIntervalBorderColor: QUALITATIVE_10[0],\n  /** hollowInterval 边框透明度 */\n  hollowIntervalBorderOpacity: 1,\n  hollowIntervalFillColor: WHITE_COLORS[100],\n\n  /** hollowInterval active 状态下边框粗细 */\n  hollowIntervalActiveBorder: 2,\n  /** hollowInterval active 状态下边框颜色 */\n  hollowIntervalActiveBorderColor: BLACK_COLORS[100],\n\n  /** hollowInterval selected 状态下边框粗细 */\n  hollowIntervalSelectedBorder: 3,\n  /** hollowInterval selected 状态下边框颜色 */\n  hollowIntervalSelectedBorderColor: BLACK_COLORS[100],\n  /** hollowInterval selected 状态下边框透明度 */\n  hollowIntervalSelectedBorderOpacity: 1,\n\n  /** hollowInterval inactive 状态下边框透明度 */\n  hollowIntervalInactiveBorderOpacity: 0.3,\n};\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"module.exports={__npminstall_done:!1,_args:[[\"@antv/g-canvas@0.4.14\",\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\programs\\\\side project\\\\ncku\"]],_from:\"@antv/g-canvas@0.4.14\",_id:\"@antv/g-canvas@0.4.14\",_inBundle:!1,_integrity:\"sha512-BPpEbHvszEPQHhssPQrIOF2zKztiogabhiBQ/MCX3qvLUXgBRRzN6ktwS816fQPa82RYiGUmzEUDhgCXUWXAcg==\",_location:\"/@antv/g-canvas\",_phantomChildren:{},_requested:{type:\"version\",registry:!0,raw:\"@antv/g-canvas@0.4.14\",name:\"@antv/g-canvas\",escapedName:\"@antv%2fg-canvas\",scope:\"@antv\",rawSpec:\"0.4.14\",saveSpec:null,fetchSpec:\"0.4.14\"},_requiredBy:[\"/@antv/g2\"],_resolved:\"https://registry.npmjs.org/@antv/g-canvas/-/g-canvas-0.4.14.tgz\",_spec:\"0.4.14\",_where:\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\programs\\\\side project\\\\ncku\",author:{name:\"https://github.com/orgs/antvis/people\"},bugs:{url:\"https://github.com/antvis/g/issues\"},dependencies:{\"@antv/g-base\":\"^0.4.7\",\"@antv/g-math\":\"^0.1.3\",\"@antv/path-util\":\"~2.0.5\",\"@antv/util\":\"~2.0.0\",\"gl-matrix\":\"^3.0.0\"},description:\"A canvas library which providing 2d\",devDependencies:{\"@antv/torch\":\"^1.0.0\",less:\"^3.9.0\",\"npm-run-all\":\"^4.1.5\",webpack:\"^4.26.1\",\"webpack-cli\":\"^3.1.2\"},files:[\"package.json\",\"esm\",\"lib\",\"dist\",\"LICENSE\",\"README.md\"],gitHead:\"6b4107c8cfae1b893c385758ad8e870236f73f6b\",homepage:\"https://github.com/antvis/g#readme\",keywords:[\"util\",\"antv\",\"g\"],license:\"ISC\",main:\"lib/index.js\",module:\"esm/index.js\",name:\"@antv/g-canvas\",publishConfig:{access:\"public\"},repository:{type:\"git\",url:\"git+https://github.com/antvis/g.git\"},scripts:{build:\"npm run clean && run-p build:*\",\"build:cjs\":\"tsc -p tsconfig.json --target ES5 --module commonjs --outDir lib\",\"build:esm\":\"tsc -p tsconfig.json --target ES5 --module ESNext --outDir esm\",\"build:umd\":\"webpack --config webpack.config.js --mode production\",clean:\"rm -rf esm lib dist\",coverage:\"npm run coverage-generator && npm run coverage-viewer\",\"coverage-generator\":\"torch --coverage --compile --source-pattern src/*.js,src/**/*.js --opts tests/mocha.opts\",\"coverage-viewer\":\"torch-coverage\",dist:\"webpack --config webpack.config.js --mode production\",test:\"torch --renderer --compile --opts tests/mocha.opts\",\"test-live\":\"torch --compile --interactive --opts tests/mocha.opts\",tsc:\"tsc --noEmit\",typecheck:\"tsc --noEmit\"},types:\"lib/index.d.ts\",unpkg:\"dist/g.min.js\",version:\"0.4.14\"};",null,null,null,null,null,null,null,null,null,"\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n    }\n    return BrowserInfo;\n}());\nexports.BrowserInfo = BrowserInfo;\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexports.NodeInfo = NodeInfo;\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexports.BotInfo = BotInfo;\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['vivaldi', /Vivaldi\\/([0-9\\.]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n    ['Search Bot', SEARCHBOT_OS_REGEX],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nexports.detect = detect;\nfunction parseUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    var matchedRule = ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    return new BrowserInfo(name, versionParts.join('.'), detectOS(ua));\n}\nexports.parseUserAgent = parseUserAgent;\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.test(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexports.detectOS = detectOS;\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nexports.getNodeVersion = getNodeVersion;\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","module.exports={__npminstall_done:!1,_args:[[\"@antv/g-svg@0.4.7\",\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\programs\\\\side project\\\\ncku\"]],_from:\"@antv/g-svg@0.4.7\",_id:\"@antv/g-svg@0.4.7\",_inBundle:!1,_integrity:\"sha512-+lqlBK+qylP4t/vyUgEaPthp1XmTiImfkPl/ZmRp3L1knH64OI9XTfOGGuBUFAt3JBt7VHKf6t0L/MCf0BR88Q==\",_location:\"/@antv/g-svg\",_phantomChildren:{},_requested:{type:\"version\",registry:!0,raw:\"@antv/g-svg@0.4.7\",name:\"@antv/g-svg\",escapedName:\"@antv%2fg-svg\",scope:\"@antv\",rawSpec:\"0.4.7\",saveSpec:null,fetchSpec:\"0.4.7\"},_requiredBy:[\"/@antv/g2\"],_resolved:\"https://registry.npmjs.org/@antv/g-svg/-/g-svg-0.4.7.tgz\",_spec:\"0.4.7\",_where:\"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\programs\\\\side project\\\\ncku\",author:{name:\"https://github.com/orgs/antvis/people\"},bugs:{url:\"https://github.com/antvis/g/issues\"},dependencies:{\"@antv/g-base\":\"^0.4.7\",\"@antv/g-math\":\"^0.1.3\",\"@antv/util\":\"~2.0.0\",\"detect-browser\":\"^4.6.0\"},description:\"A canvas library which providing 2d\",devDependencies:{\"@antv/torch\":\"^1.0.0\",less:\"^3.9.0\",\"npm-run-all\":\"^4.1.5\",webpack:\"^4.39.3\",\"webpack-cli\":\"^3.3.7\"},files:[\"package.json\",\"esm\",\"lib\",\"dist\",\"LICENSE\",\"README.md\"],gitHead:\"eb6a2503cb7bb8154697592b10680939d954a31a\",homepage:\"https://github.com/antvis/g#readme\",keywords:[\"util\",\"antv\",\"g\"],license:\"ISC\",main:\"lib/index.js\",module:\"esm/index.js\",name:\"@antv/g-svg\",publishConfig:{access:\"public\"},repository:{type:\"git\",url:\"git+https://github.com/antvis/g.git\"},scripts:{build:\"npm run clean && run-p build:*\",\"build:cjs\":\"tsc -p tsconfig.json --target ES5 --module commonjs --outDir lib\",\"build:esm\":\"tsc -p tsconfig.json --target ES5 --module ESNext --outDir esm\",\"build:umd\":\"webpack --config webpack.config.js --mode production\",clean:\"rm -rf esm lib dist\",coverage:\"npm run coverage-generator && npm run coverage-viewer\",\"coverage-generator\":\"torch --coverage --compile --source-pattern src/*.js,src/**/*.js --opts tests/mocha.opts\",\"coverage-viewer\":\"torch-coverage\",test:\"torch --renderer --compile --opts tests/mocha.opts\",\"test-live\":\"torch --compile --interactive --opts tests/mocha.opts\",tsc:\"tsc --noEmit\",typecheck:\"tsc --noEmit\"},types:\"lib/index.d.ts\",unpkg:\"dist/g.min.js\",version:\"0.4.7\"};",null,null,null,null,null,null,"import { isArray } from '@antv/util';\nimport { Point, RangePoint, ShapeVertices } from '../../../interface';\n\nfunction isValueEmpty(value) {\n  if (value) {\n    return false;\n  }\n  return value === null || value === undefined || isNaN(value);\n}\n\nfunction isYNil(point: Point[] | RangePoint) {\n  if (isArray(point)) {\n    // 特殊处理 area 的关键点数据，其关键点结构为 [{x: 0, y: 1}, {x: 0, y: 2}]\n    return isValueEmpty(point[1].y);\n  }\n  const value = point.y;\n  return isArray(value) ? isValueEmpty(value[0]) : isValueEmpty(value);\n}\n\n/**\n * @ignore\n * 分割数据，用于处理在一组点数据中，y 对应的数值存在 null/undefined/NaN 的情况\n * 应用于折线图、区域图以及路径图\n *\n * ```typescript\n * // return [[{x: 1, y: 2}, {x: 3, y: 3}]]\n * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], true);\n * // return [[{x: 1, y: 2}], [{x: 3, y: 3}]]\n * getPathPoints([{x: 1, y: 2}, {x: 2, y: null}, {x: 3, y: 3}], false);\n * // return [[[{ x: 1, y: 10 }, { x: 2, y: 2 }], [{ x: 9, y: 34 }, { x: 1, y: 1 }]]]\n * getPathPoints([\n *   [{ x: 1, y: 10 }, { x: 2, y: 2 }],\n *   [{ x: 4, y: 2 }, { x: 8, y: NaN }],\n *   [{ x: 9, y: 34 }, { x: 1, y: 1 }],\n * ], true);\n * ```\n *\n * @param points 要进行处理点集合\n * @param connectNulls 是否连接空值数据\n * @param showSinglePoint 是否展示孤立点\n * @returns 返回处理后的点集合\n */\nexport function getPathPoints(points: ShapeVertices, connectNulls: boolean = false, showSinglePoint: boolean = true) {\n  if (!points.length || (points.length === 1 && !showSinglePoint)) {\n    // 空或者只有一个点并配置不展示时\n    return [];\n  }\n\n  if (connectNulls) {\n    // 即 y 值为空的场景\n    const filtered = [];\n    for (let i = 0, len = points.length; i < len; i++) {\n      const point = points[i];\n      if (!isYNil(point)) {\n        filtered.push(point);\n      }\n    }\n    return [filtered];\n  }\n\n  const result = [];\n  let tmp = [];\n  for (let i = 0, len = points.length; i < len; i++) {\n    const point = points[i];\n    if (isYNil(point)) {\n      if (tmp.length) {\n        if (!(tmp.length === 1 && !showSinglePoint)) {\n          // 如果前段数据只有一个字段并且不需要展示时则不加入\n          result.push(tmp);\n        }\n        tmp = [];\n      }\n    } else {\n      tmp.push(point);\n    }\n  }\n\n  if (tmp.length) {\n    result.push(tmp);\n  }\n  return result;\n}\n","import { isNil } from '@antv/util';\nimport { ShapeInfo } from '../../../interface';\n\n/**\n * @ignore\n * 获取 Shape 的图形属性\n * @param cfg\n * @param isStroke 是否需要描边\n * @param isFill 是否需要填充\n * @param [sizeName] 可选，表示图形大小的属性，lineWidth 或者 r\n * @returns\n */\nexport function getStyle(cfg: ShapeInfo, isStroke: boolean, isFill: boolean, sizeName: string = '') {\n  const { style = {}, defaultStyle, color, size } = cfg;\n  const attrs = {\n    ...defaultStyle,\n    ...style,\n  };\n  if (color) {\n    if (isStroke) {\n      if (!style.stroke) {\n        // 如果用户在 style() 中配置了 stroke，则以用户配置的为准\n        attrs.stroke = color;\n      }\n    }\n\n    if (isFill) {\n      if (!style.fill) {\n        // 如果用户在 style() 中配置了 fill\n        attrs.fill = color;\n      }\n    }\n  }\n  if (sizeName && isNil(style[sizeName]) && !isNil(size)) {\n    // 如果用户在 style() 中配置了 lineWidth 或者 r 属性\n    attrs[sizeName] = size;\n  }\n\n  return attrs;\n}\n","import { isArray } from '@antv/util';\nimport { Point, RangePoint } from '../../../interface';\n\n/**\n * @ignore\n * 拆分点数据\n * @example\n * // result: [{x: 20, y: 20}, {x: 20, y: 30}]\n * splitPoints({x: 20,y: [20, 30]});\n * @example\n * // result: [{x: 20, y: 20}, {x: 30, y: 30}]\n * splitPoints({x: [20, 30],y: [20, 30]});\n * @param obj\n */\nexport function splitPoints(obj: RangePoint): Point[] {\n  // y 有可能是数组，对应原始数据中 y 为一个区间数据，如 [19, 30]，为了统一也将 x 转换为数组\n  const x = obj.x;\n  const y = isArray(obj.y) ? obj.y : [obj.y];\n\n  return y.map((eachY, index) => {\n    return {\n      x: isArray(x) ? x[index] : x,\n      y: eachY,\n    };\n  });\n}\n","import { ShapeMarkerCfg } from '../../../interface';\n\nconst LineSymbols = {\n  line: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['L', x + r, y],\n    ];\n  },\n  dot: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['L', x + r, y],\n    ];\n  },\n  dash: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['L', x + r, y],\n    ];\n  },\n  smooth: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['A', r / 2, r / 2, 0, 1, 1, x, y],\n      ['A', r / 2, r / 2, 0, 1, 0, x + r, y],\n    ];\n  },\n  hv: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r - 1, y - 2.5],\n      ['L', x, y - 2.5],\n      ['L', x, y + 2.5],\n      ['L', x + r + 1, y + 2.5],\n    ];\n  },\n  vh: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r - 1, y + 2.5],\n      ['L', x, y + 2.5],\n      ['L', x, y - 2.5],\n      ['L', x + r + 1, y - 2.5],\n    ];\n  },\n  hvh: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - (r + 1), y + 2.5],\n      ['L', x - r / 2, y + 2.5],\n      ['L', x - r / 2, y - 2.5],\n      ['L', x + r / 2, y - 2.5],\n      ['L', x + r / 2, y + 2.5],\n      ['L', x + r + 1, y + 2.5],\n    ];\n  },\n  vhv: (x: number, y: number) => {\n    // 宽 13px，高 8px\n    return [\n      ['M', x - 5, y + 2.5],\n      ['L', x - 5, y],\n      ['L', x, y],\n      ['L', x, y - 3],\n      ['L', x, y + 3],\n      ['L', x + 6.5, y + 3],\n    ];\n  },\n};\n\n/**\n * Gets line marker\n * @ignore\n * @param markerCfg\n * @param shapeType\n * @returns 返回 Line 的 marker 配置\n */\nexport function getLineMarker(markerCfg: ShapeMarkerCfg, shapeType: string) {\n  const { color } = markerCfg;\n  return {\n    symbol: LineSymbols[shapeType],\n    style: {\n      lineWidth: 2,\n      r: 6,\n      stroke: color,\n    },\n  };\n}\n","import { each, isArray } from '@antv/util';\nimport { IGroup, ShapeAttrs } from '../../../dependents';\nimport { Point, Position, RangePoint, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath, getSplinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\nimport { getLineMarker } from './util';\n\nfunction getShapeAttrs(cfg: ShapeInfo, smooth?: boolean, constraint?: Position[]) {\n  const { isStack, connectNulls, isInCircle, showSinglePoint } = cfg;\n  const shapeAttrs = getStyle(cfg, true, false, 'lineWidth');\n\n  const points = getPathPoints(cfg.points, connectNulls, showSinglePoint); // 根据 connectNulls 值处理 points\n  let path = [];\n  for (let i = 0, len = points.length; i < len; i++) {\n    const eachLinePoints = points[i];\n    path = path.concat(getPath(eachLinePoints, isInCircle, isStack, smooth, constraint, shapeAttrs));\n  }\n  shapeAttrs.path = path;\n\n  return shapeAttrs;\n}\n\n// 单条 path\nfunction getSinglePath(\n  points: Point[],\n  isInCircle: boolean,\n  smooth?: boolean,\n  constraint?: Position[],\n  style?: ShapeAttrs\n) {\n  if (points.length === 1) {\n    // 只有一个点时\n    return [\n      ['M', points[0].x, points[0].y - style.lineWidth / 2],\n      ['L', points[0].x, points[0].y],\n      ['L', points[0].x, points[0].y + style.lineWidth / 2],\n    ];\n  }\n\n  let path;\n  if (!smooth) {\n    path = getLinePath(points, false);\n    if (isInCircle) {\n      path.push(['Z']);\n    }\n  } else {\n    // 直角坐标系下绘制曲线时限制最大值、最小值\n    if (isInCircle && points.length) {\n      points.push({ x: points[0].x, y: points[0].y });\n    }\n    path = getSplinePath(points, false, constraint);\n  }\n\n  return path;\n}\n\nfunction getRangePath(\n  points: RangePoint[],\n  isInCircle: boolean,\n  isStack?: boolean,\n  smooth?: boolean,\n  constraint?: Position[],\n  style?: ShapeAttrs\n) {\n  const topPoints = [];\n  const bottomPoints = [];\n  each(points, (point: RangePoint) => {\n    const result = splitPoints(point);\n    topPoints.push(result[1]); // 上边\n    bottomPoints.push(result[0]); // 底边\n  });\n\n  const topPath = getSinglePath(topPoints, isInCircle, smooth, constraint, style);\n  const bottomPath = getSinglePath(bottomPoints, isInCircle, smooth, constraint, style);\n  if (isStack) {\n    return topPath;\n  }\n  return topPath.concat(bottomPath);\n}\n\nfunction getPath(\n  points: Point[] | RangePoint[],\n  isInCircle: boolean,\n  isStack?: boolean,\n  smooth?: boolean,\n  constraint?: Position[],\n  style?: ShapeAttrs\n) {\n  if (points.length) {\n    const first = points[0];\n\n    return isArray(first.y)\n      ? getRangePath(points as RangePoint[], isInCircle, isStack, smooth, constraint, style)\n      : getSinglePath(points as Point[], isInCircle, smooth, constraint, style);\n  }\n  return [];\n}\n\nconst LineShapeFactory = registerShapeFactory('line', {\n  defaultShapeType: 'line',\n});\n\n// 这里因为代码公用，所以直接全部注册\n// 'line' 默认折线；'dot' 点线 ···；'dash' 断线 - - -\neach(['line', 'dot', 'dash', 'smooth'], (shapeType) => {\n  registerShape('line', shapeType, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      const smooth = shapeType === 'smooth';\n      let constraint;\n      if (smooth) {\n        const { start, end } = this.coordinate;\n        constraint = [\n          [start.x, end.y],\n          [end.x, start.y],\n        ];\n      }\n\n      const attrs = getShapeAttrs(cfg, smooth, constraint);\n      const shape = container.addShape({\n        type: 'path',\n        attrs,\n        name: 'line',\n      });\n\n      return shape;\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      return getLineMarker(markerCfg, shapeType);\n    },\n  });\n});\n\nexport default LineShapeFactory;\n","import { FIELD_ORIGIN } from '../constant';\nimport { MappingDatum, ShapeInfo } from '../interface';\nimport Geometry, { GeometryCfg } from './base';\nimport Element from './element';\n/** 引入对应的 ShapeFactory */\nimport './shape/line';\nimport { isModelChange } from './util/is-model-change';\n\n/** Path 构造函数参数类型 */\nexport interface PathCfg extends GeometryCfg {\n  /** 是否连接空值 */\n  connectNulls?: boolean;\n  /** 单个孤立数据点是否展示 */\n  showSinglePoint?: boolean;\n}\n\n/**\n * Path 几何标记。\n * 用于绘制路径图等。\n */\nexport default class Path extends Geometry {\n  public readonly type: string = 'path';\n  public readonly shapeType: string = 'line';\n  /** 是否连接空值 */\n  public connectNulls: boolean;\n  /** 单个孤立数据点是否展示 */\n  public showSinglePoint: boolean;\n\n  constructor(cfg: PathCfg) {\n    super(cfg);\n\n    const { connectNulls = false, showSinglePoint = true } = cfg;\n    this.connectNulls = connectNulls;\n    this.showSinglePoint = showSinglePoint;\n  }\n\n  /**\n   * 创建所有的 Element 实例，对于 Path、Line、Area，一组数据对应一个 Element。\n   * @param mappingData\n   * @param [isUpdate]\n   * @returns elements\n   */\n  protected createElements(mappingData: MappingDatum[], index: number, isUpdate: boolean = false): Element[] {\n    // Path 的每个 element 对应一组数据\n    const { lastElementsMap, elementsMap, elements, container } = this;\n    const elementId = this.getElementId(mappingData);\n    const shapeCfg = this.getShapeInfo(mappingData);\n\n    let result = lastElementsMap[elementId];\n    if (!result) {\n      const shapeFactory = this.getShapeFactory();\n\n      result = new Element({\n        shapeFactory,\n        container,\n        offscreenGroup: this.getOffscreenGroup(),\n      });\n      result.geometry = this;\n      result.animate = this.animateOption;\n      result.draw(shapeCfg, isUpdate); // 绘制 shape\n    } else {\n      // element 已经创建\n      const preShapeCfg = result.getModel();\n      if (this.isCoordinateChanged || isModelChange(preShapeCfg, shapeCfg)) {\n        result.animate = this.animateOption;\n        // 通过绘制数据的变更来判断是否需要更新，因为用户有可能会修改图形属性映射\n        result.update(shapeCfg); // 更新对应的 element\n      }\n      delete lastElementsMap[elementId];\n    }\n\n    elements.push(result);\n    elementsMap[elementId] = result;\n\n    return elements;\n  }\n\n  /**\n   * 获取组成一条线（一组数据）的所有点以及数据\n   * @param mappingData 映射后的数组\n   */\n  protected getPointsAndData(mappingData: MappingDatum[]) {\n    const points = [];\n    const data = [];\n\n    for (let i = 0, len = mappingData.length; i < len; i++) {\n      const obj = mappingData[i];\n      points.push({\n        x: obj.x,\n        y: obj.y,\n      });\n      data.push(obj[FIELD_ORIGIN]);\n    }\n\n    return {\n      points,\n      data,\n    };\n  }\n\n  private getShapeInfo(mappingData: MappingDatum[]): ShapeInfo {\n    const shapeCfg = this.getDrawCfg(mappingData[0]);\n    const { points, data } = this.getPointsAndData(mappingData);\n    shapeCfg.mappingData = mappingData;\n    shapeCfg.data = data;\n    shapeCfg.isStack = !!this.getAdjust('stack');\n    shapeCfg.points = points;\n    shapeCfg.connectNulls = this.connectNulls;\n    shapeCfg.showSinglePoint = this.showSinglePoint;\n\n    return shapeCfg;\n  }\n}\n","import { each } from '@antv/util';\nimport { Coordinate, PathCommand } from '../../../dependents';\nimport { Point, Position, Shape, ShapeInfo } from '../../../interface';\n\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath, getSplinePath } from '../util/path';\n\nfunction getPath(\n  points: Point[],\n  isInCircle: boolean,\n  smooth: boolean,\n  registeredShape: Shape,\n  constraint?: Position[]\n): PathCommand[] {\n  let path = [];\n\n  if (points.length) {\n    const topLinePoints = []; // area 区域上部分\n    let bottomLinePoints = []; // area 区域下部分\n    for (let i = 0, len = points.length; i < len; i++) {\n      const point = points[i];\n      topLinePoints.push(point[1]);\n      bottomLinePoints.push(point[0]);\n    }\n    bottomLinePoints = bottomLinePoints.reverse();\n\n    each([topLinePoints, bottomLinePoints], (pointsData, index) => {\n      let subPath = [];\n      const parsedPoints = registeredShape.parsePoints(pointsData);\n      const p1 = parsedPoints[0];\n\n      if (topLinePoints.length === 1 && bottomLinePoints.length === 1) {\n        // 都只有一个点，绘制一条竖线\n        subPath =\n          index === 0\n            ? [\n                ['M', p1.x - 0.5, p1.y],\n                ['L', p1.x + 0.5, p1.y],\n              ]\n            : [\n                ['L', p1.x + 0.5, p1.y],\n                ['L', p1.x - 0.5, p1.y],\n              ];\n      } else {\n        if (isInCircle) {\n          parsedPoints.push({ x: p1.x, y: p1.y });\n        }\n        if (smooth) {\n          subPath = getSplinePath(parsedPoints, false, constraint);\n        } else {\n          subPath = getLinePath(parsedPoints, false);\n        }\n        if (index > 0) {\n          subPath[0][0] = 'L';\n        }\n      }\n\n      path = path.concat(subPath);\n    });\n\n    path.push(['Z']);\n  }\n\n  return path;\n}\n\n/**\n * @ignore\n * Gets shape attrs\n * @param cfg\n * @param isStroke\n * @param smooth\n * @param registeredShape\n * @param [constraint]\n * @returns\n */\nexport function getShapeAttrs(\n  cfg: ShapeInfo,\n  isStroke: boolean,\n  smooth: boolean,\n  registeredShape: Shape,\n  constraint?: Position[]\n) {\n  const attrs = getStyle(cfg, isStroke, !isStroke, 'lineWidth');\n  const { connectNulls, isInCircle, points, showSinglePoint } = cfg;\n  const pathPoints = getPathPoints(points, connectNulls, showSinglePoint); // 根据 connectNulls 配置获取图形关键点\n\n  let path = [];\n  for (let i = 0, len = pathPoints.length; i < len; i++) {\n    const eachPoints = pathPoints[i];\n    path = path.concat(getPath(eachPoints, isInCircle, smooth, registeredShape, constraint));\n  }\n  attrs.path = path;\n\n  return attrs;\n}\n\n/**\n * @ignore\n * Gets constraint\n * @param coordinate\n * @returns constraint\n */\nexport function getConstraint(coordinate: Coordinate): Position[] {\n  const { start, end } = coordinate;\n  return [\n    [start.x, end.y],\n    [end.x, start.y],\n  ];\n}\n","import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getShapeAttrs } from './util';\n\nconst AreaShapeFactory = registerShapeFactory('area', {\n  defaultShapeType: 'area',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    // area 基本标记的绘制需要获取上下两边的顶点\n    const { x, y0 } = pointInfo;\n    const y = isArray(pointInfo.y) ? pointInfo.y : [y0, pointInfo.y];\n\n    return y.map((yItem: number) => {\n      return {\n        x: x as number,\n        y: yItem,\n      };\n    });\n  },\n});\n\n// Area 几何标记默认的 shape：填充的区域图\nregisterShape('area', 'area', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const attrs = getShapeAttrs(cfg, false, false, this);\n    const shape = container.addShape({\n      type: 'path',\n      attrs,\n      name: 'area',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number = 5.5) => {\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        fill: color,\n      },\n    };\n  },\n});\n\nexport default AreaShapeFactory;\n","import { FIELD_ORIGIN } from '../constant';\nimport { MappingDatum } from '../interface';\nimport Path, { PathCfg } from './path';\nimport './shape/area';\n\n/** Area 几何标记构造函数参数 */\nexport interface AreaCfg extends PathCfg {\n  /**\n   * 面积图是否从 0 基准线开始填充。\n   * 1. 默认值为 `true`，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n   * 2. 当值为 `false` 时，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n   */\n  startOnZero?: boolean;\n}\n\n/**\n * Area 几何标记类。\n * 常用于绘制面积图。\n */\nexport default class Area extends Path {\n  public readonly type: string = 'area';\n  public readonly shapeType: string = 'area';\n  /** 生成图形关键点 */\n  public readonly generatePoints: boolean = true;\n  /**\n   * 面积图是否从 0 基准线开始填充。\n   * 1. 默认值为 `true`，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n   * 2. 当值为 `false` 时，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n   */\n  public readonly startOnZero: boolean = true;\n\n  constructor(cfg: AreaCfg) {\n    super(cfg);\n\n    const { startOnZero = true, sortable = true, showSinglePoint = false } = cfg;\n    this.startOnZero = startOnZero; // 默认为 true\n    this.sortable = sortable; // Area 默认会对数据按照 x 轴字段进行正向排序\n    this.showSinglePoint = showSinglePoint;\n  }\n\n  /**\n   * 获取图形绘制的关键点以及数据\n   * @param mappingData 映射后的数据\n   */\n  protected getPointsAndData(mappingData: MappingDatum[]) {\n    const points = [];\n    const data = [];\n\n    for (let i = 0, len = mappingData.length; i < len; i++) {\n      const obj = mappingData[i];\n      points.push(obj.points);\n      data.push(obj[FIELD_ORIGIN]);\n    }\n\n    return {\n      points,\n      data,\n    };\n  }\n\n  /**\n   * 获取 Y 轴上的最小值\n   * @returns y 字段最小值\n   */\n  protected getYMinValue(): number {\n    if (this.startOnZero) {\n      return super.getYMinValue();\n    }\n    const yScale = this.getYScale();\n    return yScale.min;\n  }\n}\n","import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\n\nconst EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\nregisterShape('edge', 'line', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n\nexport default EdgeShapeFactory;\n","import Geometry from './base';\nimport './shape/edge';\n\n/**\n * Edge 几何标记，用于绘制关系图中的**边**图形，如：\n * 1. 流程图\n * 2. 树\n * 3. 弧长连接图\n * 4. 和弦图\n * 5. 桑基图\n */\nexport default class Edge extends Geometry {\n  public readonly type: string = 'edge';\n  public readonly shapeType: string = 'edge';\n  protected generatePoints: boolean = true;\n}\n","import ColorUtil from '@antv/color-util';\nimport { get, isNumber } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Color, IShape } from '../dependents';\nimport { Data, Datum, MappingDatum, ShapeInfo } from '../interface';\nimport Geometry from './base';\n\n/**\n * 用于绘制热力图。\n */\nexport default class Heatmap extends Geometry {\n  public readonly type: string = 'heatmap';\n\n  private paletteCache: Record<number, number> = {};\n  private grayScaleBlurredCanvas: HTMLCanvasElement;\n  private shadowCanvas: HTMLCanvasElement;\n  private imageShape: IShape;\n\n  protected createElements(mappingData: MappingDatum[], index: number, isUpdate: boolean = false) {\n    const range = this.prepareRange(mappingData);\n    const radius = this.prepareSize();\n\n    let blur = get(this.styleOption, ['style', 'shadowBlur']);\n    if (!isNumber(blur)) {\n      blur = radius / 2;\n    }\n\n    this.prepareGreyScaleBlurredCircle(radius, blur);\n    this.drawWithRange(mappingData, range, radius, blur);\n\n    return null;\n  }\n\n  /**\n   * clear\n   */\n  public clear() {\n    super.clear();\n    this.clearShadowCanvasCtx();\n    this.paletteCache = {};\n  }\n\n  private prepareRange(data: MappingDatum[]) {\n    const colorAttr = this.getAttribute('color');\n    const colorField = colorAttr.getFields()[0];\n\n    let min = Infinity;\n    let max = -Infinity;\n    data.forEach((row) => {\n      const value = row[FIELD_ORIGIN][colorField];\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    });\n\n    if (min === max) {\n      min = max - 1;\n    }\n\n    return [min, max];\n  }\n\n  private prepareSize() {\n    let radius = this.getDefaultValue('size');\n    if (!isNumber(radius)) {\n      radius = this.getDefaultSize();\n    }\n\n    return radius;\n  }\n\n  private prepareGreyScaleBlurredCircle(radius: number, blur: number) {\n    const grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n    const r2 = radius + blur;\n    const ctx = grayScaleBlurredCanvas.getContext('2d');\n    grayScaleBlurredCanvas.width = grayScaleBlurredCanvas.height = r2 * 2;\n    ctx.clearRect(0, 0, grayScaleBlurredCanvas.width, grayScaleBlurredCanvas.height);\n    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = 'black';\n\n    ctx.beginPath();\n    ctx.arc(-r2, -r2, radius, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  private drawWithRange(data: MappingDatum[], range: number[], radius: number, blur: number) {\n    // canvas size\n    const { start, end } = this.coordinate;\n    const width = this.coordinate.getWidth();\n    const height = this.coordinate.getHeight();\n\n    // value, range, etc\n    const colorAttr = this.getAttribute('color');\n    const valueField = colorAttr.getFields()[0];\n\n    // prepare shadow canvas context\n    this.clearShadowCanvasCtx();\n    const ctx = this.getShadowCanvasCtx();\n    // filter data\n    if (range) {\n      data = data.filter((row) => {\n        return row[FIELD_ORIGIN][valueField] <= range[1] && row[FIELD_ORIGIN][valueField] >= range[0];\n      });\n    }\n\n    // step1. draw points with shadow\n    const scale = this.scales[valueField];\n    for (const obj of data) {\n      const { x, y } = this.getDrawCfg(obj);\n      const alpha = scale.scale(obj[FIELD_ORIGIN][valueField]);\n      this.drawGrayScaleBlurredCircle((x as number) - start.x, (y as number) - end.y, radius + blur, alpha, ctx);\n    }\n\n    // step2. convert pixels\n    const colored = ctx.getImageData(0, 0, width, height);\n    this.clearShadowCanvasCtx();\n    this.colorize(colored);\n    ctx.putImageData(colored, 0, 0);\n    const imageShape = this.getImageShape();\n    imageShape.attr('x', start.x);\n    imageShape.attr('y', end.y);\n    imageShape.attr('width', width);\n    imageShape.attr('height', height);\n    imageShape.attr('img', ctx.canvas);\n    imageShape.set('origin', this.getShapeInfo(data)); // 存储绘图信息数据\n  }\n\n  private getDefaultSize() {\n    const position = this.getAttribute('position');\n    const coordinate = this.coordinate;\n    return Math.min(\n      coordinate.getWidth() / (position.scales[0].ticks.length * 4),\n      coordinate.getHeight() / (position.scales[1].ticks.length * 4)\n    );\n  }\n\n  private clearShadowCanvasCtx() {\n    const ctx = this.getShadowCanvasCtx();\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  private getShadowCanvasCtx() {\n    let canvas = this.shadowCanvas;\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      this.shadowCanvas = canvas;\n    }\n    canvas.width = this.coordinate.getWidth();\n    canvas.height = this.coordinate.getHeight();\n    return canvas.getContext('2d');\n  }\n\n  private getGrayScaleBlurredCanvas() {\n    if (!this.grayScaleBlurredCanvas) {\n      this.grayScaleBlurredCanvas = document.createElement('canvas');\n    }\n\n    return this.grayScaleBlurredCanvas;\n  }\n\n  private drawGrayScaleBlurredCircle(x: number, y: number, r: number, alpha: number, ctx: CanvasRenderingContext2D) {\n    const grayScaleBlurredCanvas = this.getGrayScaleBlurredCanvas();\n    ctx.globalAlpha = alpha;\n    ctx.drawImage(grayScaleBlurredCanvas, x - r, y - r);\n  }\n\n  private colorize(img: ImageData) {\n    const colorAttr = this.getAttribute('color') as Color;\n    const pixels = img.data;\n    const paletteCache = this.paletteCache;\n    for (let i = 3; i < pixels.length; i += 4) {\n      const alpha = pixels[i]; // get gradient color from opacity value\n      if (isNumber(alpha)) {\n        const palette = paletteCache[alpha] ? paletteCache[alpha] : ColorUtil.rgb2arr(colorAttr.gradient(alpha / 256));\n        pixels[i - 3] = palette[0];\n        pixels[i - 2] = palette[1];\n        pixels[i - 1] = palette[2];\n        pixels[i] = alpha;\n      }\n    }\n  }\n\n  private getImageShape() {\n    let imageShape = this.imageShape;\n    if (imageShape) {\n      return imageShape;\n    }\n    const container = this.container;\n    imageShape = container.addShape({\n      type: 'image',\n      attrs: {},\n    });\n    this.imageShape = imageShape;\n    return imageShape;\n  }\n\n  private getShapeInfo(mappingData: MappingDatum[]): ShapeInfo {\n    const shapeCfg = this.getDrawCfg(mappingData[0]);\n\n    return {\n      ...shapeCfg,\n      mappingData,\n      data: this.getData(mappingData),\n    };\n  }\n\n  private getData(mappingData: MappingDatum[]): Data {\n    return mappingData.map((obj: Datum) => {\n      return obj[FIELD_ORIGIN];\n    });\n  }\n}\n","import { isArray, isNil } from '@antv/util';\nimport { PathCommand } from '../../../dependents';\nimport { Point, ShapePoint } from '../../../interface';\n\n/**\n * @ignore\n * 根据数据点生成矩形的四个关键点\n * @param pointInfo 数据点信息\n * @param [isPyramid] 是否为尖底漏斗图\n * @returns rect points 返回矩形四个顶点信息\n */\nexport function getRectPoints(pointInfo: ShapePoint, isPyramid = false): Point[] {\n  const { x, y, y0, size } = pointInfo;\n  // 有 4 种情况，\n  // 1. x, y 都不是数组\n  // 2. y是数组，x不是\n  // 3. x是数组，y不是\n  // 4. x, y 都是数组\n  let yMin;\n  let yMax;\n  if (isArray(y)) {\n    [yMin, yMax] = y;\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  let xMin;\n  let xMax;\n  if (isArray(x)) {\n    [xMin, xMax] = x;\n  } else {\n    xMin = x - size / 2;\n    xMax = x + size / 2;\n  }\n\n  const points = [\n    { x: xMin, y: yMin },\n    { x: xMin, y: yMax },\n  ];\n\n  if (isPyramid) {\n    // 绘制尖底漏斗图\n    // 金字塔漏斗图的关键点\n    // 1\n    // |   2\n    // 0\n    points.push({\n      x: xMax,\n      y: (yMax + yMin) / 2,\n    });\n  } else {\n    // 矩形的四个关键点，结构如下（左下角顺时针连接）\n    // 1 ---- 2\n    // |      |\n    // 0 ---- 3\n    points.push({ x: xMax, y: yMax }, { x: xMax, y: yMin });\n  }\n\n  return points;\n}\n\n/**\n * @ignore\n * 根据矩形关键点绘制 path\n * @param points 关键点数组\n * @param isClosed path 是否需要闭合\n * @returns 返回矩形的 path\n */\nexport function getRectPath(points: Point[], isClosed: boolean = true): PathCommand[] {\n  const path = [];\n  const firstPoint = points[0];\n  path.push(['M', firstPoint.x, firstPoint.y]);\n  for (let i = 1, len = points.length; i < len; i++) {\n    path.push(['L', points[i].x, points[i].y]);\n  }\n  // 对于 shape=\"line\" path 不应该闭合，否则会造成 lineCap 绘图属性失效\n  if (isClosed) {\n    path.push(['L', firstPoint.x, firstPoint.y]); // 需要闭合\n    path.push(['z']);\n  }\n  return path;\n}\n\n/**\n * @ignore\n * 根据 funnel 关键点绘制漏斗图的 path\n * @param points 图形关键点信息\n * @param nextPoints 下一个数据的图形关键点信息\n * @param isPyramid 是否为尖底漏斗图\n * @returns 返回漏斗图的图形 path\n */\nexport function getFunnelPath(points: Point[], nextPoints: Point[], isPyramid: boolean) {\n  const path = [];\n  if (!isNil(nextPoints)) {\n    path.push(\n      ['M', points[0].x, points[0].y],\n      ['L', points[1].x, points[1].y],\n      ['L', nextPoints[1].x, nextPoints[1].y],\n      ['L', nextPoints[0].x, nextPoints[0].y],\n      ['Z']\n    );\n  } else if (isPyramid) {\n    // 金字塔最底部\n    path.push(\n      ['M', points[0].x, points[0].y],\n      ['L', points[1].x, points[1].y],\n      ['L', points[2].x, points[2].y],\n      ['L', points[2].x, points[2].y],\n      ['Z']\n    );\n  } else {\n    // 漏斗图最底部\n    path.push(\n      ['M', points[0].x, points[0].y],\n      ['L', points[1].x, points[1].y],\n      ['L', points[2].x, points[2].y],\n      ['L', points[3].x, points[3].y],\n      ['Z']\n    );\n  }\n\n  return path;\n}\n","import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath, getRectPoints } from './util';\n\n/** Interval 的 shape 工厂 */\nconst IntervalShapeFactory = registerShapeFactory('interval', {\n  defaultShapeType: 'rect',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return getRectPoints(pointInfo);\n  },\n});\n\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const path = this.parsePath(getRectPath(cfg.points as Point[]));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color, isInPolar } = markerCfg;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          fill: color,\n        },\n      };\n    }\n\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n\nexport default IntervalShapeFactory;\n","import { flatten, isString, valuesOfKey } from '@antv/util';\nimport { getXDimensionLength } from '../../util/coordinate';\n\n// 已经排序后的数据查找距离最小的\nfunction findMinDistance(arr, scale) {\n  const count = arr.length;\n  let sourceArr = arr;\n  if (isString(sourceArr[0])) {\n    // 日期类型的 values 经常上文本类型，所以需要转换一下\n    sourceArr = arr.map((v: string) => {\n      return scale.translate(v);\n    });\n  }\n  let distance = sourceArr[1] - sourceArr[0];\n  for (let i = 2; i < count; i++) {\n    const tmp = sourceArr[i] - sourceArr[i - 1];\n    if (distance > tmp) {\n      distance = tmp;\n    }\n  }\n  return distance;\n}\n\nfunction getDodgeCount(dataArray, dodgeBy) {\n  if (dodgeBy) {\n    const mergeData = flatten(dataArray);\n    const values = valuesOfKey(mergeData, dodgeBy);\n    return values.length;\n  }\n\n  return dataArray.length;\n}\n\n/** @ignore */\nexport function getDefaultSize(geometry): number {\n  const theme = geometry.theme;\n  const coordinate = geometry.coordinate;\n  const xScale = geometry.getXScale();\n  const xValues = xScale.values;\n  const dataArray = geometry.beforeMappingData;\n  let count: number = xValues.length;\n  if (xScale.isLinear && xValues.length > 1) {\n    // Linear 类型用户有可能设置了 min, max 范围所以需要根据数据最小区间计算 count\n    xValues.sort();\n    const interval = findMinDistance(xValues, xScale);\n    count = (xScale.max - xScale.min) / interval;\n    if (xValues.length > count) {\n      count = xValues.length;\n    }\n  }\n\n  const range = xScale.range;\n  let normalizedSize = 1 / count;\n  let wr = 1;\n  if (coordinate.isPolar) {\n    if (coordinate.isTransposed && count > 1) {\n      // 极坐标下多层环图\n      wr = theme.multiplePieWidthRatio;\n    } else {\n      wr = theme.roseWidthRatio;\n    }\n  } else {\n    if (xScale.isLinear) {\n      normalizedSize *= range[1] - range[0];\n    }\n    wr = theme.columnWidthRatio;\n  }\n  normalizedSize *= wr;\n  if (geometry.getAdjust('dodge')) {\n    const dodgeAdjust = geometry.getAdjust('dodge');\n    const dodgeBy = dodgeAdjust.dodgeBy;\n    const dodgeCount = getDodgeCount(dataArray, dodgeBy);\n\n    normalizedSize = normalizedSize / dodgeCount;\n  }\n\n  // 最大和最小限制\n  const { maxColumnWidth, minColumnWidth } = theme;\n  const xDimensionLength = getXDimensionLength(geometry.coordinate);\n  if (maxColumnWidth) {\n    const normalizedMaxColumnWidth = maxColumnWidth / xDimensionLength;\n    if (normalizedSize > normalizedMaxColumnWidth) {\n      normalizedSize = normalizedMaxColumnWidth;\n    }\n  }\n\n  if (minColumnWidth) {\n    const normalizedMinColumnWidth = minColumnWidth / xDimensionLength;\n    if (normalizedSize < normalizedMinColumnWidth) {\n      normalizedSize = normalizedMinColumnWidth;\n    }\n  }\n\n  return normalizedSize;\n}\n","import { get } from '@antv/util';\nimport { Datum } from '../interface';\nimport { getXDimensionLength } from '../util/coordinate';\nimport Geometry from './base';\n/** 引入对应的 ShapeFactory */\nimport './shape/interval';\nimport { getDefaultSize } from './util/shape-size';\n\n/**\n * Interval 几何标记。\n * 用于绘制柱状图、饼图、条形图、玫瑰图等。\n */\nexport default class Interval extends Geometry {\n  public readonly type: string = 'interval';\n  public readonly shapeType: string = 'interval';\n  protected generatePoints: boolean = true;\n\n  /**\n   * 获取每条数据的 Shape 绘制信息\n   * @param obj 经过分组 -> 数字化 -> adjust 调整后的数据记录\n   * @returns\n   */\n  protected createShapePointsCfg(obj: Datum) {\n    const cfg = super.createShapePointsCfg(obj);\n\n    // 计算每个 shape 的 size\n    let size;\n    const sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, obj)[0];\n      // 归一化\n      const coordinate = this.coordinate;\n      const coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n\n    return cfg;\n  }\n\n  /**\n   * 调整 y 轴的 scale 范围。\n   * 对于 Y 轴为数值轴柱状图，默认从 0 开始 生长。\n   */\n  protected adjustScale() {\n    super.adjustScale();\n    const yScale = this.getYScale();\n    // 特殊逻辑：饼图需要填充满整个空间\n    if (this.coordinate.type === 'theta') {\n      yScale.change({\n        nice: false,\n        min: 0,\n        // 发生过 stack 调整，yScale 的 max 被调整过，this.updateStackRange()\n        max: Math.max(Math.max.apply(null, yScale.values), yScale.max),\n      });\n    } else {\n      // 柱状图数值轴默认从 0 开始\n      const scaleDefs = this.scaleDefs;\n      const { field, min, max, type } = yScale;\n      if (type !== 'time') {\n        // time 类型不做调整\n        // 柱状图的 Y 轴要从 0 开始生长，但是如果用户设置了则以用户的为准\n        if (min > 0 && !get(scaleDefs, [field, 'min'])) {\n          yScale.change({\n            min: 0,\n          });\n        }\n        // 柱当柱状图全为负值时也需要从 0 开始生长，但是如果用户设置了则以用户的为准\n        if (max <= 0 && !get(scaleDefs, [field, 'max'])) {\n          yScale.change({\n            max: 0,\n          });\n        }\n      }\n    }\n  }\n}\n","import Path, { PathCfg } from './path';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/line';\n\n/**\n * Line 几何标记。\n * 常用于折线图的绘制。\n */\nexport default class Line extends Path {\n  public type: string = 'line';\n\n  constructor(cfg: PathCfg) {\n    super(cfg);\n\n    const { sortable = true } = cfg; // Line 默认会对数据按照 x 轴字段进行排序\n    this.sortable = sortable;\n  }\n}\n","/** @ignore */\nexport const MarkerSymbols = {\n  hexagon: (x: number, y: number, r: number) => {\n    const diffX = (r / 2) * Math.sqrt(3);\n    return [\n      ['M', x, y - r],\n      ['L', x + diffX, y - r / 2],\n      ['L', x + diffX, y + r / 2],\n      ['L', x, y + r],\n      ['L', x - diffX, y + r / 2],\n      ['L', x - diffX, y - r / 2],\n      ['Z'],\n    ];\n  },\n  bowtie: (x: number, y: number, r: number) => {\n    const diffY = r - 1.5;\n    return [['M', x - r, y - diffY], ['L', x + r, y + diffY], ['L', x + r, y - diffY], ['L', x - r, y + diffY], ['Z']];\n  },\n  cross: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y - r],\n      ['L', x + r, y + r],\n      ['M', x + r, y - r],\n      ['L', x - r, y + r],\n    ];\n  },\n  tick: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r / 2, y - r],\n      ['L', x + r / 2, y - r],\n      ['M', x, y - r],\n      ['L', x, y + r],\n      ['M', x - r / 2, y + r],\n      ['L', x + r / 2, y + r],\n    ];\n  },\n  plus: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['L', x + r, y],\n      ['M', x, y - r],\n      ['L', x, y + r],\n    ];\n  },\n  hyphen: (x: number, y: number, r: number) => {\n    return [\n      ['M', x - r, y],\n      ['L', x + r, y],\n    ];\n  },\n  line: (x: number, y: number, r: number) => {\n    return [\n      ['M', x, y - r],\n      ['L', x, y + r],\n    ];\n  },\n};\n","import { IGroup, IShape } from '../../../dependents';\nimport { ShapeInfo } from '../../../interface';\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\n\nexport const SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport const HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\nexport function drawPoints(\n  shape,\n  cfg: ShapeInfo,\n  container: IGroup,\n  shapeName: string,\n  isStroke: boolean\n): IShape | IGroup {\n  const style = getStyle(cfg, isStroke, !isStroke, 'r');\n  const points = shape.parsePoints(cfg.points);\n  let pointPosition = points[0];\n  if (cfg.isStack) {\n    pointPosition = points[1];\n  } else if (points.length > 1) {\n    const group = container.addGroup();\n    for (const point of points) {\n      group.addShape({\n        type: 'marker',\n        attrs: {\n          ...style,\n          symbol: MarkerSymbols[shapeName] || shapeName,\n          ...point,\n        },\n      });\n    }\n    return group;\n  }\n\n  return container.addShape({\n    type: 'marker',\n    attrs: {\n      ...style,\n      symbol: MarkerSymbols[shapeName] || shapeName,\n      ...pointPosition,\n    },\n  });\n}\n","import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { MarkerSymbols } from '../../../util/marker';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { splitPoints } from '../util/split-points';\nimport { drawPoints, SHAPES } from './util';\n\nconst PointShapeFactory = registerShapeFactory('point', {\n  defaultShapeType: 'hollow-circle',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\neach(SHAPES, (shapeName: string) => {\n  // 添加该 shape 对应的 hollow-shape\n  registerShape('point', `hollow-${shapeName}`, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      return drawPoints(this, cfg, container, shapeName, true);\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      const { color } = markerCfg;\n      return {\n        symbol: MarkerSymbols[shapeName] || shapeName,\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null,\n        },\n      };\n    },\n  });\n});\n\nexport default PointShapeFactory;\n","import { MappingDatum, ShapeInfo } from '../interface';\nimport Geometry from './base';\n/** 引入 Point 对应的 ShapeFactory */\nimport './shape/point';\n\n/**\n * Point 几何标记。\n * 常用于绘制点图。\n */\nexport default class Point extends Geometry {\n  public readonly type: string = 'point';\n  public readonly shapeType: string = 'point';\n  protected generatePoints: boolean = true;\n\n  /**\n   * 获取一个点的绘制信息。\n   * @param mappingDatum\n   * @returns draw cfg\n   */\n  protected getDrawCfg(mappingDatum: MappingDatum): ShapeInfo {\n    const shapeCfg = super.getDrawCfg(mappingDatum);\n\n    return {\n      ...shapeCfg,\n      isStack: !!this.getAdjust('stack'), // 层叠点图\n    };\n  }\n}\n","import { each, isEmpty, isEqual, last } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getPath(points: any[]) {\n  let flag: any = points[0];\n  let i = 1;\n\n  const path = [['M', flag.x, flag.y]];\n\n  while (i < points.length) {\n    const c: any = points[i];\n    if (c.x !== points[i - 1].x || c.y !== points[i - 1].y) {\n      path.push(['L', c.x, c.y]);\n      if (c.x === flag.x && c.y === flag.y && i < points.length - 1) {\n        flag = points[i + 1];\n        path.push(['Z']);\n        path.push(['M', flag.x, flag.y]);\n        i++;\n      }\n    }\n    i++;\n  }\n\n  if (!isEqual(last(path), flag)) {\n    path.push(['L', flag.x, flag.y]);\n  }\n\n  path.push(['Z']);\n\n  return path;\n}\n\nconst PolygonShapeFactory = registerShapeFactory('polygon', {\n  defaultShapeType: 'polygon',\n  getDefaultPoints(pointInfo: ShapePoint) {\n    const points = [];\n    each(pointInfo.x as number[], (subX, index) => {\n      const subY = pointInfo.y[index];\n      points.push({\n        x: subX,\n        y: subY,\n      });\n    });\n    return points;\n  },\n});\n\nregisterShape('polygon', 'polygon', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    if (!isEmpty(cfg.points)) {\n      const shapeAttrs = getStyle(cfg, true, true);\n      const path = this.parsePath(getPath(cfg.points));\n      return container.addShape('path', {\n        attrs: {\n          ...shapeAttrs,\n          path,\n        },\n        name: 'polygon',\n      });\n    }\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n\nexport default PolygonShapeFactory;\n","import { isArray } from '@antv/util';\nimport { Datum } from '../interface';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/polygon';\n\n/**\n * Polygon 几何标记。\n * 常用于绘制色块图、日历图等。\n */\nexport default class Polygon extends Geometry {\n  public readonly type: string = 'polygon';\n  public readonly shapeType: string = 'polygon';\n  protected generatePoints: boolean = true;\n\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param obj\n   * @returns\n   */\n  protected createShapePointsCfg(obj: Datum) {\n    const cfg: any = super.createShapePointsCfg(obj);\n    let x = cfg.x;\n    let y = cfg.y;\n    let temp;\n    // x y 都是数组时，不做处理\n    if (!(isArray(x) && isArray(y))) {\n      const xScale = this.getXScale();\n      const yScale = this.getYScale();\n      const xCount = xScale.values.length;\n      const yCount = yScale.values.length;\n      const xOffset = (0.5 * 1) / xCount;\n      const yOffset = (0.5 * 1) / yCount;\n\n      if (xScale.isCategory && yScale.isCategory) {\n        // 如果x,y都是分类\n        x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];\n        y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];\n      } else if (isArray(x)) {\n        // x 是数组\n        temp = x;\n        x = [temp[0], temp[0], temp[1], temp[1]];\n        y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];\n      } else if (isArray(y)) {\n        // y 是数组\n        temp = y;\n        y = [temp[0], temp[1], temp[1], temp[0]];\n        x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];\n      }\n      cfg.x = x;\n      cfg.y = y;\n    }\n    return cfg;\n  }\n}\n","import { registerShapeFactory } from '../base';\n\nconst SchemaShapeFactory = registerShapeFactory('schema', {\n  defaultShapeType: '', // 'schema' is for some custom shapes, so will not specify defaultShapeType\n});\n\nexport default SchemaShapeFactory;\n","import { LooseObject } from '../interface';\nimport { getXDimensionLength } from '../util/coordinate';\nimport Geometry from './base';\n/** 引入对应的 ShapeFactory */\nimport './shape/schema';\nimport { getDefaultSize } from './util/shape-size';\n\n/**\n * Schema 几何标记，用于一些自定义图形的绘制，比如箱型图、股票图等。\n */\nexport default class Schema extends Geometry {\n  public readonly type: string = 'schema';\n  public readonly shapeType: string = 'schema';\n  protected generatePoints: boolean = true;\n\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n  protected createShapePointsCfg(record: LooseObject) {\n    const cfg = super.createShapePointsCfg(record);\n\n    // 计算每个 shape 的 size\n    let size;\n    const sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0];\n      // 归一化\n      const coordinate = this.coordinate;\n      const coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n\n    return cfg;\n  }\n}\n","import { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\nimport { registerShape } from '../base';\nimport { getShapeAttrs } from './util';\n\n/**\n * 描边但不填充的区域图\n */\nregisterShape('area', 'line', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const attrs = getShapeAttrs(cfg, true, false, this);\n    const shape = container.addShape({\n      type: 'path',\n      attrs,\n      name: 'area',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number = 5.5) => {\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n        fill: null,\n      },\n    };\n  },\n});\n","import { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getConstraint, getShapeAttrs } from './util';\n\n/**\n * 填充的平滑曲面图\n */\nregisterShape('area', 'smooth', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const coordinate = this.coordinate;\n    const attrs = getShapeAttrs(cfg, false, true, this, getConstraint(coordinate));\n    const shape = container.addShape({\n      type: 'path',\n      attrs,\n      name: 'area',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number = 5.5) => {\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        fill: color,\n      },\n    };\n  },\n});\n","import { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getConstraint, getShapeAttrs } from './util';\n\n/** 描边的平滑曲面图 */\nregisterShape('area', 'smooth-line', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const coordinate = this.coordinate;\n    const attrs = getShapeAttrs(cfg, true, true, this, getConstraint(coordinate));\n    const shape = container.addShape({\n      type: 'path',\n      attrs,\n      name: 'area',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number = 5.5) => {\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n        fill: null,\n      },\n    };\n  },\n});\n","import { each } from '@antv/util';\nimport { Point } from '../../../interface';\n\n/**\n * @ignore\n * Gets cpath\n * @param from\n * @param to\n * @returns\n */\nexport function getCPath(from: Point, to: Point) {\n  const points = [];\n  points.push({\n    x: from.x,\n    y: (from.y * 1) / 2 + (to.y * 1) / 2,\n  });\n\n  points.push({\n    x: to.x,\n    y: (from.y * 1) / 2 + (to.y * 1) / 2,\n  });\n  points.push(to);\n\n  const sub = ['C'];\n  each(points, (point) => {\n    sub.push(point.x, point.y);\n  });\n\n  return sub;\n}\n\n/**\n * @ignore\n * Gets qpath\n * @param to\n * @param center\n * @returns\n */\nexport function getQPath(to: Point, center: Point) {\n  const points = [];\n  points.push({\n    x: center.x,\n    y: center.y,\n  });\n  points.push(to);\n\n  const sub = ['Q'];\n  each(points, (point) => {\n    sub.push(point.x, point.y);\n  });\n\n  return sub;\n}\n","import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { getArcPath } from '../../../util/graphics';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getCPath, getQPath } from './util';\n\nfunction getArcShapePath(from: Point, to: Point, center: Point) {\n  const sub = getQPath(to, center);\n  const path = [['M', from.x, from.y]];\n  path.push(sub);\n  return path;\n}\n\nfunction getArcShapeWeightPath(points: Point[], center: Point) {\n  const arc1 = getQPath(points[1], center);\n  const arc2 = getQPath(points[3], center);\n  const path = [['M', points[0].x, points[0].y]];\n  path.push(arc2);\n  path.push(['L', points[3].x, points[3].y]);\n  path.push(['L', points[2].x, points[2].y]);\n  path.push(arc1);\n  path.push(['L', points[1].x, points[1].y]);\n  path.push(['L', points[0].x, points[0].y]);\n  path.push(['Z']);\n  return path;\n}\n\n// 弧线包括笛卡尔坐标系下的半圆弧线、极坐标系下以圆心为控制点的二阶曲线、笛卡尔坐标系下带权重的三阶曲线、极坐标系下带权重的以圆心为控制点的二阶曲线\nregisterShape('edge', 'arc', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n\n    let points = cfg.points as Point[];\n    const type = points.length > 2 ? 'weight' : 'normal';\n    let path;\n    if (cfg.isInCircle) {\n      const center = { x: 0, y: 1 };\n      if (type === 'normal') {\n        path = getArcShapePath(points[0], points[1], center);\n      } else {\n        style.fill = style.stroke;\n        path = getArcShapeWeightPath(points, center);\n      }\n      path = this.parsePath(path);\n\n      return container.addShape('path', {\n        attrs: {\n          ...style,\n          path,\n        },\n      });\n    } else {\n      if (type === 'normal') {\n        points = this.parsePoints(points);\n        path = getArcPath(\n          (points[1].x + points[0].x) / 2,\n          points[0].y,\n          Math.abs(points[1].x - points[0].x) / 2,\n          Math.PI,\n          Math.PI * 2\n        );\n        return container.addShape('path', {\n          attrs: {\n            ...style,\n            path,\n          },\n        });\n      } else {\n        const c1 = getCPath(points[1], points[3]);\n        const c2 = getCPath(points[2], points[0]);\n\n        path = [\n          ['M', points[0].x, points[0].y],\n          ['L', points[1].x, points[1].y],\n          c1,\n          ['L', points[3].x, points[3].y],\n          ['L', points[2].x, points[2].y],\n          c2,\n          ['Z'],\n        ];\n        path = this.parsePath(path);\n        style.fill = style.stroke;\n\n        return container.addShape('path', {\n          attrs: {\n            ...style,\n            path,\n          },\n        });\n      }\n    }\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n","import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getCPath } from './util';\n\nfunction getSmoothPath(from: Point, to: Point) {\n  const sub = getCPath(from, to);\n  const path = [['M', from.x, from.y]];\n\n  path.push(sub);\n  return path;\n}\n\nregisterShape('edge', 'smooth', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const points = cfg.points;\n    const path = this.parsePath(getSmoothPath(points[0] as Point, points[1] as Point));\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n","import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nconst CORNER_PERCENT = 1 / 3;\n\nfunction getVHVPath(from: Point, to: Point) {\n  const points = [];\n  points.push({\n    x: from.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n  });\n  points.push({\n    x: to.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n  });\n  points.push(to);\n\n  const path = [['M', from.x, from.y]];\n  each(points, (point) => {\n    path.push(['L', point.x, point.y]);\n  });\n\n  return path;\n}\n\nregisterShape('edge', 'vhv', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const points = cfg.points;\n    const path = this.parsePath(getVHVPath(points[0] as Point, points[1] as Point));\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n","import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getFunnelPath, getRectPoints } from './util';\n\n/** 漏斗图 */\nregisterShape('interval', 'funnel', {\n  getPoints(shapePoint: ShapePoint) {\n    shapePoint.size = shapePoint.size * 2; // 漏斗图的 size 是柱状图的两倍\n    return getRectPoints(shapePoint);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const path = this.parsePath(getFunnelPath(cfg.points as Point[], cfg.nextPoints as Point[], false));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n","import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath } from './util';\n\n/** 描边柱状图 */\nregisterShape('interval', 'hollow-rect', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getRectPath(cfg.points as Point[]));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color, isInPolar } = markerCfg;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null,\n        },\n      };\n    }\n\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        stroke: color,\n        fill: null,\n      },\n    };\n  },\n});\n","import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath } from './util';\n\n// 根据数据点生成 Line 的两个关键点\nfunction getLinePoints(pointInfo: ShapePoint): Point[] {\n  const { x, y, y0 } = pointInfo;\n\n  if (isArray(y)) {\n    return y.map((yItem, idx) => {\n      return {\n        x: isArray(x) ? x[idx] : x,\n        y: yItem,\n      };\n    });\n  }\n\n  // 起始点从 y0 开始\n  return [\n    { x: x as number, y: y0 },\n    { x: x as number, y },\n  ];\n}\n\nregisterShape('interval', 'line', {\n  getPoints(shapePoint: ShapePoint) {\n    return getLinePoints(shapePoint);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const path = this.parsePath(getRectPath(cfg.points as Point[], false));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number) => {\n        return [\n          ['M', x, y - r],\n          ['L', x, y + r],\n        ];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n      },\n    };\n  },\n});\n","import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getFunnelPath, getRectPoints } from './util';\n\n/** 金字塔图，尖底漏斗图 */\nregisterShape('interval', 'pyramid', {\n  getPoints(shapePoint: ShapePoint) {\n    shapePoint.size = shapePoint.size * 2; // 漏斗图的 size 是柱状图的两倍\n    return getRectPoints(shapePoint, true);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const path = this.parsePath(getFunnelPath(cfg.points as Point[], cfg.nextPoints as Point[], true));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n","import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\n// 根据数据点生成 tick shape 的 6 个关键点\nfunction getTickPoints(pointInfo: ShapePoint): Point[] {\n  const { x, y, y0, size } = pointInfo;\n  let yMin;\n  let yMax;\n  if (isArray(y)) {\n    [yMin, yMax] = y;\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n\n  const xMax = (x as number) + size / 2;\n  const xMin = (x as number) - size / 2;\n\n  // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n  return [\n    { x: x as number, y: yMin },\n    { x: x as number, y: yMax },\n    { x: xMin, y: yMin },\n    { x: xMax, y: yMin },\n    { x: xMin, y: yMax },\n    { x: xMax, y: yMax },\n  ];\n}\n\n// 根据 tick 关键点绘制 path\nfunction getTickPath(points: Point[]) {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n  ];\n}\n\n/** I 形状柱状图，常用于 error bar chart */\nregisterShape('interval', 'tick', {\n  getPoints(shapePoint: ShapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getTickPath(cfg.points as Point[]));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number) => {\n        return [\n          ['M', x - r / 2, y - r],\n          ['L', x + r / 2, y - r],\n          ['M', x, y - r],\n          ['L', x, y + r],\n          ['M', x - r / 2, y + r],\n          ['L', x + r / 2, y + r],\n        ];\n      },\n      style: {\n        r: 5,\n        stroke: color,\n      },\n    };\n  },\n});\n","import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getPathPoints } from '../util/get-path-points';\nimport { getStyle } from '../util/get-style';\nimport { getLineMarker } from './util';\n\nconst interpolateCallback = (point: Point, nextPoint: Point, shapeType: string) => {\n  const x = point.x as number;\n  const y = point.y as number;\n  const nextX = nextPoint.x as number;\n  const nextY = nextPoint.y as number;\n  let result;\n\n  switch (shapeType) {\n    case 'hv':\n      result = [{ x: nextX, y }];\n      break;\n    case 'vh':\n      result = [{ x, y: nextY }];\n      break;\n    case 'hvh':\n      const middleX = (nextX + x) / 2;\n      result = [\n        { x: middleX, y },\n        { x: middleX, y: nextY },\n      ];\n      break;\n    case 'vhv':\n      const middleY = (y + nextY) / 2;\n      result = [\n        { x, y: middleY },\n        { x: nextX, y: middleY },\n      ];\n      break;\n    default:\n      break;\n  }\n\n  return result;\n};\n\nfunction getInterpolatePoints(points: Point[], shapeType: string) {\n  let result = [];\n  each(points, (point: Point, index) => {\n    const nextPoint = points[index + 1];\n    result.push(point);\n    if (nextPoint) {\n      const interpolatePoint = interpolateCallback(point, nextPoint, shapeType);\n      result = result.concat(interpolatePoint);\n    }\n  });\n  return result;\n}\n\n// 插值的图形path，不考虑null\nfunction getInterpolatePath(points: Point[]) {\n  return points.map((point, index) => {\n    return index === 0 ? ['M', point.x, point.y] : ['L', point.x, point.y];\n  });\n}\n\n// 插值的图形\nfunction getInterpolateShapeAttrs(cfg: ShapeInfo, shapeType: string) {\n  const points = getPathPoints(cfg.points, cfg.connectNulls, cfg.showSinglePoint); // 根据 connectNulls 值处理 points\n  let path = [];\n  each(points, (eachLinePoints) => {\n    const interpolatePoints = getInterpolatePoints(eachLinePoints, shapeType);\n    path = path.concat(getInterpolatePath(interpolatePoints));\n  });\n\n  return {\n    ...getStyle(cfg, true, false, 'lineWidth'),\n    path,\n  };\n}\n\n// step line\neach(['hv', 'vh', 'hvh', 'vhv'], (shapeType) => {\n  registerShape('line', shapeType, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      const attrs = getInterpolateShapeAttrs(cfg, shapeType);\n      const shape = container.addShape({\n        type: 'path',\n        attrs,\n        name: 'line',\n      });\n\n      return shape;\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      return getLineMarker(markerCfg, shapeType);\n    },\n  });\n});\n","import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { MarkerSymbols } from '../../../util/marker';\nimport { registerShape } from '../base';\nimport { drawPoints, HOLLOW_SHAPES } from './util';\n\n// 添加 hollowShape\neach(HOLLOW_SHAPES, (shapeName: string) => {\n  registerShape('point', shapeName, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      return drawPoints(this, cfg, container, shapeName, true);\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      const { color } = markerCfg;\n      return {\n        symbol: MarkerSymbols[shapeName],\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null,\n        },\n      };\n    },\n  });\n});\n","import { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nregisterShape('point', 'image', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const { r: size } = getStyle(cfg, false, false, 'r');\n    const points = this.parsePoints(cfg.points);\n    let pointPosition = points[0];\n    if (cfg.isStack) {\n      pointPosition = points[1];\n    } else if (points.length > 1) {\n      const group = container.addGroup();\n      for (const point of points) {\n        group.addShape('image', {\n          attrs: {\n            x: (point.x as number) - size / 2,\n            y: (point.y as number) - size,\n            width: size,\n            height: size,\n            img: cfg.shape[1],\n          },\n        });\n      }\n\n      return group;\n    }\n\n    return container.addShape('image', {\n      attrs: {\n        x: (pointPosition.x as number) - size / 2,\n        y: (pointPosition.y as number) - size,\n        width: size,\n        height: size,\n        img: cfg.shape[1],\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: color,\n      },\n    };\n  },\n});\n","import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { MarkerSymbols } from '../../../util/marker';\nimport { registerShape } from '../base';\nimport { drawPoints, SHAPES } from './util';\n\n// 所有的 SHAPES 都注册一下\neach(SHAPES, (shapeName: string) => {\n  registerShape('point', shapeName, {\n    draw(cfg: ShapeInfo, container: IGroup) {\n      return drawPoints(this, cfg, container, shapeName, false);\n    },\n    getMarker(markerCfg: ShapeMarkerCfg) {\n      const { color } = markerCfg;\n      return {\n        symbol: MarkerSymbols[shapeName] || shapeName,\n        style: {\n          r: 4.5,\n          fill: color,\n        },\n      };\n    },\n  });\n});\n","import { isArray, isNil } from '@antv/util';\nimport { IGroup, PathCommand } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction parseValue(value: number[]) {\n  const array = !isArray(value) ? [value] : value;\n\n  const min = array[0]; // 最小值\n  const max = array[array.length - 1]; // 最大值\n  const min1 = array.length > 1 ? array[1] : min;\n  const max1 = array.length > 3 ? array[3] : max;\n  const median = array.length > 2 ? array[2] : min1;\n\n  return {\n    min, // 最小值\n    max, // 最大值\n    min1,\n    max1,\n    median,\n  };\n}\n\nfunction getBoxPoints(x: number | number[], y: number | number[], size: number): Point[] {\n  const halfSize = size / 2;\n  let pointsArray;\n  if (isArray(y)) {\n    // 2维\n    const { min, max, median, min1, max1 } = parseValue(y);\n    const minX = (x as number) - halfSize;\n    const maxX = (x as number) + halfSize;\n    pointsArray = [\n      [minX, max],\n      [maxX, max],\n      [x as number, max],\n      [x as number, max1],\n      [minX, min1],\n      [minX, max1],\n      [maxX, max1],\n      [maxX, min1],\n      [x as number, min1],\n      [x as number, min],\n      [minX, min],\n      [maxX, min],\n      [minX, median],\n      [maxX, median],\n    ];\n  } else {\n    // 只有一个维度\n    y = isNil(y) ? 0.5 : y;\n    const { min, max, median, min1, max1 } = parseValue(x as number[]);\n    const minY = y - halfSize;\n    const maxY = y + halfSize;\n    pointsArray = [\n      [min, minY],\n      [min, maxY],\n      [min, y],\n      [min1, y],\n      [min1, minY],\n      [min1, maxY],\n      [max1, maxY],\n      [max1, minY],\n      [max1, y],\n      [max, y],\n      [max, minY],\n      [max, maxY],\n      [median, minY],\n      [median, maxY],\n    ];\n  }\n\n  return pointsArray.map((arr) => {\n    return {\n      x: arr[0],\n      y: arr[1],\n    };\n  });\n}\n\nfunction getBoxPath(points): PathCommand[] {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n    ['L', points[6].x, points[6].y],\n    ['L', points[7].x, points[7].y],\n    ['L', points[4].x, points[4].y], // 封闭 z\n    ['Z'],\n    ['M', points[8].x, points[8].y],\n    ['L', points[9].x, points[9].y],\n    ['M', points[10].x, points[10].y],\n    ['L', points[11].x, points[11].y],\n    ['M', points[12].x, points[12].y],\n    ['L', points[13].x, points[13].y],\n  ];\n}\n\n// box shape\nregisterShape('schema', 'box', {\n  getPoints(shapePoint: ShapePoint) {\n    const { x, y, size } = shapePoint;\n    return getBoxPoints(x as number, y as number[], size);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getBoxPath(cfg.points));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n        name: 'schema',\n      },\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol(x: number, y: number, r: number) {\n        const yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        const points = getBoxPoints(x, yValues, r);\n        return [\n          ['M', points[0].x + 1, points[0].y],\n          ['L', points[1].x - 1, points[1].y],\n          ['M', points[2].x, points[2].y],\n          ['L', points[3].x, points[3].y],\n          ['M', points[4].x, points[4].y],\n          ['L', points[5].x, points[5].y],\n          ['L', points[6].x, points[6].y],\n          ['L', points[7].x, points[7].y],\n          ['L', points[4].x, points[4].y],\n          ['Z'],\n          ['M', points[8].x, points[8].y],\n          ['L', points[9].x, points[9].y],\n          ['M', points[10].x + 1, points[10].y],\n          ['L', points[11].x - 1, points[11].y],\n          ['M', points[12].x, points[12].y],\n          ['L', points[13].x, points[13].y],\n        ];\n      },\n      style: {\n        r: 6,\n        lineWidth: 1,\n        stroke: color,\n      },\n    };\n  },\n});\n","import { isArray } from '@antv/util';\nimport { IGroup, PathCommand } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { padEnd } from '../../../util/helper';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getCandleYValues(value: number | number[]) {\n  const array = !isArray(value) ? [value] : value;\n  // 从大到小排序\n  const sorted = array.sort((a, b) => b - a);\n  return padEnd(sorted, 4, sorted[sorted.length - 1]);\n}\n\n// get candle shape's key points\nfunction getCandlePoints(x: number, y: number[], size: number): Point[] {\n  const yValues = getCandleYValues(y);\n  return [\n    { x, y: yValues[0] },\n    { x, y: yValues[1] },\n    { x: x - size / 2, y: yValues[2] },\n    { x: x - size / 2, y: yValues[1] },\n    { x: x + size / 2, y: yValues[1] },\n    { x: x + size / 2, y: yValues[2] },\n    { x, y: yValues[2] },\n    { x, y: yValues[3] },\n  ];\n}\n\nfunction getCandlePath(points): PathCommand[] {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['L', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n    ['Z'],\n    ['M', points[6].x, points[6].y],\n    ['L', points[7].x, points[7].y],\n  ];\n}\n\n// k line shape\nregisterShape('schema', 'candle', {\n  getPoints(shapePoint: ShapePoint) {\n    const { x, y, size } = shapePoint;\n    return getCandlePoints(x as number, y as number[], size);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, true);\n    const path = this.parsePath(getCandlePath(cfg.points));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n        name: 'schema',\n      },\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol(x: number, y: number, r: number) {\n        const yValues = [y + 7.5, y + 3, y - 3, y - 7.5];\n        const points = getCandlePoints(x, yValues, r);\n        return [\n          ['M', points[0].x, points[0].y],\n          ['L', points[1].x, points[1].y],\n          ['M', points[2].x, points[2].y],\n          ['L', points[3].x, points[3].y],\n          ['L', points[4].x, points[4].y],\n          ['L', points[5].x, points[5].y],\n          ['Z'],\n          ['M', points[6].x, points[6].y],\n          ['L', points[7].x, points[7].y],\n        ];\n      },\n      style: {\n        lineWidth: 1,\n        stroke: color,\n        fill: color,\n        r: 6,\n      },\n    };\n  },\n});\n","import { isEmpty, clamp } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction getRectAttrs(points: any[], size: number) {\n  const width = Math.abs(points[0].x - points[2].x);\n  const height = Math.abs(points[0].y - points[2].y);\n\n  let len = Math.min(width, height);\n  if (size) {\n    len = clamp(size, 0, Math.min(width, height));\n  }\n  len = len / 2;\n  const centerX = (points[0].x + points[2].x) / 2;\n  const centerY = (points[0].y + points[2].y) / 2;\n\n  return {\n    x: centerX - len,\n    y: centerY - len,\n    width: len * 2,\n    height: len * 2,\n  };\n}\n\nregisterShape('polygon', 'square', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    if (!isEmpty(cfg.points)) {\n      const shapeAttrs = getStyle(cfg, true, true);\n      const points = this.parsePoints(cfg.points); // 转换为画布坐标\n      return container.addShape('rect', {\n        attrs: {\n          ...shapeAttrs,\n          ...getRectAttrs(points, cfg.size), // 获取 rect 绘图信息\n        },\n        name: 'polygon',\n      });\n    }\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n","import { get } from '@antv/util';\n\nimport { MappingDatum, Point } from '../../interface';\nimport GeometryLabel from './base';\nimport { LabelPointCfg } from './interface';\n\n/**\n * 柱状图 label\n */\nexport default class IntervalLabel extends GeometryLabel {\n  protected setLabelPosition(labelPointCfg: LabelPointCfg, mappingData: MappingDatum, index: number, position: string) {\n    const coordinate = this.getCoordinate();\n    const transposed = coordinate.isTransposed;\n    const shapePoints = mappingData.points as Point[];\n    const point0 = coordinate.convert(shapePoints[0]);\n    const point1 = coordinate.convert(shapePoints[2]);\n    const flag = transposed ? -1 : 1;\n    const width = ((point0.x - point1.x) / 2) * flag;\n    const height = ((point0.y - point1.y) / 2) * flag;\n\n    switch (position) {\n      case 'right':\n        if (!transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'left');\n        break;\n      case 'left':\n        if (transposed) {\n          labelPointCfg.x -= width * 2;\n        } else {\n          labelPointCfg.x += width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'right');\n        break;\n      case 'bottom':\n        if (transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y -= height;\n        } else {\n          labelPointCfg.y += height * 2;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'top');\n        break;\n      case 'middle':\n        if (transposed) {\n          labelPointCfg.x -= width;\n        } else {\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        break;\n      case 'top':\n        if (transposed) {\n          labelPointCfg.x -= width;\n          labelPointCfg.y += height;\n        }\n        labelPointCfg.textAlign = get(labelPointCfg, 'textAlign', 'center');\n        labelPointCfg.textBaseline = get(labelPointCfg, 'textBaseline', 'bottom');\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { each, isArray } from '@antv/util';\nimport { MappingDatum, Point } from '../../interface';\nimport { getDistanceToCenter } from '../../util/coordinate';\nimport { getAngleByPoint } from '../../util/coordinate';\nimport GeometryLabel from './base';\nimport { LabelCfg, LabelItem, LabelPointCfg } from './interface';\n\nconst HALF_PI = Math.PI / 2;\n\n/**\n * 极坐标下的图形 label\n */\nexport default class PolarLabel extends GeometryLabel {\n  /**\n   * @override\n   * 获取文本的对齐方式\n   * @param point\n   */\n  protected getLabelAlign(point: LabelItem) {\n    const coordinate = this.getCoordinate();\n    let align;\n    if (point.labelEmit) {\n      align = point.angle <= Math.PI / 2 && point.angle >= -Math.PI / 2 ? 'left' : 'right';\n    } else if (!coordinate.isTransposed) {\n      align = 'center';\n    } else {\n      const center = coordinate.getCenter();\n      const offset = this.getDefaultOffset(point.offset);\n      if (Math.abs(point.x - center.x) < 1) {\n        align = 'center';\n      } else if (point.angle > Math.PI || point.angle <= 0) {\n        align = offset > 0 ? 'left' : 'right';\n      } else {\n        align = offset > 0 ? 'right' : 'left';\n      }\n    }\n    return align;\n  }\n\n  /**\n   * @override\n   * 获取 label 的位置\n   * @param labelCfg\n   * @param mappingData\n   * @param index\n   */\n  protected getLabelPoint(labelCfg: LabelCfg, mappingData: MappingDatum, index: number): LabelPointCfg {\n    let factor = 1;\n    let arcPoint;\n    const content = labelCfg.content[index];\n    if (this.isToMiddle(mappingData)) {\n      arcPoint = this.getMiddlePoint(mappingData.points as Point[]);\n    } else {\n      if (labelCfg.content.length === 1 && index === 0) {\n        index = 1;\n      } else if (index === 0) {\n        factor = -1;\n      }\n      arcPoint = this.getArcPoint(mappingData, index);\n    }\n\n    const offset = this.getDefaultOffset(labelCfg.offset) * factor;\n    const middleAngle = this.getPointAngle(arcPoint);\n    const isLabelEmit = labelCfg.labelEmit;\n    const labelPositionCfg: LabelPointCfg = this.getCirclePoint(middleAngle, offset, arcPoint, isLabelEmit);\n    if (labelPositionCfg.r === 0) {\n      // 如果文本位置位于圆心，则不展示\n      labelPositionCfg.content = '';\n    } else {\n      labelPositionCfg.content = content;\n      labelPositionCfg.angle = middleAngle;\n      labelPositionCfg.color = mappingData.color;\n    }\n\n    labelPositionCfg.rotate = labelCfg.autoRotate\n      ? this.getLabelRotate(middleAngle, offset, isLabelEmit)\n      : labelCfg.rotate;\n    labelPositionCfg.start = {\n      x: arcPoint.x,\n      y: arcPoint.y,\n    };\n    return labelPositionCfg;\n  }\n\n  /**\n   * 获取圆弧的位置\n   */\n  protected getArcPoint(mappingData: MappingDatum, index: number = 0): Point {\n    if (!isArray(mappingData.x) && !isArray(mappingData.y)) {\n      return {\n        x: mappingData.x,\n        y: mappingData.y,\n      };\n    }\n\n    return {\n      x: isArray(mappingData.x) ? mappingData.x[index] : mappingData.x,\n      y: isArray(mappingData.y) ? mappingData.y[index] : mappingData.y,\n    };\n  }\n\n  /**\n   * 计算坐标线点在极坐标系下角度\n   * @param point\n   */\n  protected getPointAngle(point: Point): number {\n    return getAngleByPoint(this.getCoordinate(), point);\n  }\n\n  /**\n   * 获取坐标点与圆心形成的圆的位置信息\n   * @param angle\n   * @param offset\n   * @param point\n   * @param isLabelEmit\n   */\n  protected getCirclePoint(angle: number, offset: number, point: Point, isLabelEmit: boolean) {\n    const coordinate = this.getCoordinate();\n    const center = coordinate.getCenter();\n    let r = getDistanceToCenter(coordinate, point);\n    if (r === 0) {\n      return {\n        ...center,\n        r,\n      };\n    }\n\n    let labelAngle = angle;\n    if (coordinate.isTransposed && r > offset && !isLabelEmit) {\n      const appendAngle = Math.asin(offset / (2 * r));\n      labelAngle = angle + appendAngle * 2;\n    } else {\n      r = r + offset;\n    }\n\n    return {\n      x: center.x + r * Math.cos(labelAngle),\n      y: center.y + r * Math.sin(labelAngle),\n      r,\n    };\n  }\n\n  /**\n   * 获取 label 的旋转角度\n   * @param angle\n   * @param offset\n   * @param isLabelEmit\n   */\n  protected getLabelRotate(angle: number, offset: number, isLabelEmit: boolean) {\n    let rotate = angle + HALF_PI;\n    if (isLabelEmit) {\n      rotate -= HALF_PI;\n    }\n    if (rotate) {\n      if (rotate > HALF_PI) {\n        rotate = rotate - Math.PI;\n      } else if (rotate < -HALF_PI) {\n        rotate = rotate + Math.PI;\n      }\n    }\n    return rotate;\n  }\n\n  // 获取中心的位置\n  private getMiddlePoint(points: Point[]) {\n    const coordinate = this.getCoordinate();\n    const count = points.length;\n    let middlePoint = {\n      x: 0,\n      y: 0,\n    };\n    each(points, (point: Point) => {\n      middlePoint.x += point.x;\n      middlePoint.y += point.y;\n    });\n    middlePoint.x /= count;\n    middlePoint.y /= count;\n\n    middlePoint = coordinate.convert(middlePoint);\n    return middlePoint;\n  }\n\n  // 是否居中\n  private isToMiddle(mappingData: MappingDatum) {\n    return (mappingData.x as number[]).length > 2;\n  }\n}\n","import { get, isArray } from '@antv/util';\nimport { getAngleByPoint } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport Geometry from '../base';\nimport { LabelItem } from './interface';\nimport PolarLabel from './polar';\n\n/**\n * 饼图 label\n */\nexport default class PieLabel extends PolarLabel {\n  public defaultLayout = 'distribute';\n\n  constructor(geometry: Geometry) {\n    super(geometry);\n  }\n\n  protected getDefaultLabelCfg() {\n    return get(this.geometry.theme, 'pieLabels', {});\n  }\n\n  protected getDefaultOffset(offset) {\n    return offset || 0;\n  }\n\n  protected getLabelRotate(angle: number, offset: number, isLabelLimit: boolean) {\n    let rotate;\n    if (offset < 0) {\n      rotate = angle;\n      if (rotate > Math.PI / 2) {\n        rotate = rotate - Math.PI;\n      }\n      if (rotate < -Math.PI / 2) {\n        rotate = rotate + Math.PI;\n      }\n    }\n    return rotate;\n  }\n\n  protected getLabelAlign(point: LabelItem) {\n    const coordinate = this.getCoordinate();\n    const center = coordinate.getCenter();\n\n    let align;\n    if (point.angle <= Math.PI / 2 && point.x >= center.x) {\n      align = 'left';\n    } else {\n      align = 'right';\n    }\n    const offset = this.getDefaultOffset(point.offset);\n    if (offset <= 0) {\n      if (align === 'right') {\n        align = 'left';\n      } else {\n        align = 'right';\n      }\n    }\n    return align;\n  }\n\n  protected getArcPoint(point) {\n    return point;\n  }\n\n  protected getPointAngle(point) {\n    const coordinate = this.getCoordinate();\n    const startPoint = {\n      x: isArray(point.x) ? point.x[0] : point.x,\n      y: point.y[0],\n    };\n    const endPoint = {\n      x: isArray(point.x) ? point.x[1] : point.x,\n      y: point.y[1],\n    };\n    let angle;\n    const startAngle = getAngleByPoint(coordinate, startPoint);\n    if (point.points && point.points[0].y === point.points[1].y) {\n      angle = startAngle;\n    } else {\n      let endAngle = getAngleByPoint(coordinate, endPoint);\n      if (startAngle >= endAngle) {\n        // 100% pie slice\n        endAngle = endAngle + Math.PI * 2;\n      }\n      angle = startAngle + (endAngle - startAngle) / 2;\n    }\n    return angle;\n  }\n\n  protected getCirclePoint(angle, offset, p?) {\n    const coordinate = this.getCoordinate();\n    const center = coordinate.getCenter();\n    const r = coordinate.getRadius() + offset;\n    return {\n      ...polarToCartesian(center.x, center.y, r, angle),\n      angle,\n      r,\n    };\n  }\n}\n","import { isObject, each, find, get } from '@antv/util';\n\nimport { BBox, IGroup, IShape } from '../../../../dependents';\nimport { LabelItem } from '../../interface';\n\nimport { polarToCartesian } from '../../../../util/graphics';\nimport { IElement } from '@antv/g-base';\n\n/** label text和line距离 4px */\nconst MARGIN = 4;\n\nfunction antiCollision(labelShapes, labels, lineHeight, plotRange, center, isRight) {\n  // adjust y position of labels to avoid overlapping\n  let overlapping = true;\n  const start = plotRange.start;\n  const end = plotRange.end;\n  const startY = Math.min(start.y, end.y);\n  let totalHeight = Math.abs(start.y - end.y);\n  let i;\n\n  let maxY = 0;\n  let minY = Number.MIN_VALUE;\n  const boxes = labels.map((label) => {\n    if (label.y > maxY) {\n      maxY = label.y;\n    }\n    if (label.y < minY) {\n      minY = label.y;\n    }\n    return {\n      size: lineHeight,\n      targets: [label.y - startY],\n    };\n  });\n  minY -= startY;\n  if (maxY - startY > totalHeight) {\n    totalHeight = maxY - startY;\n  }\n\n  while (overlapping) {\n    /* eslint no-loop-func: 0 */\n    boxes.forEach((box) => {\n      const target = (Math.min.apply(minY, box.targets) + Math.max.apply(minY, box.targets)) / 2;\n      box.pos = Math.min(Math.max(minY, target - box.size / 2), totalHeight - box.size);\n      // box.pos = Math.max(0, target - box.size / 2);\n    });\n\n    // detect overlapping and join boxes\n    overlapping = false;\n    i = boxes.length;\n    while (i--) {\n      if (i > 0) {\n        const previousBox = boxes[i - 1];\n        const box = boxes[i];\n        if (previousBox.pos + previousBox.size > box.pos) {\n          // overlapping\n          previousBox.size += box.size;\n          previousBox.targets = previousBox.targets.concat(box.targets);\n\n          // overflow, shift up\n          if (previousBox.pos + previousBox.size > totalHeight) {\n            previousBox.pos = totalHeight - previousBox.size;\n          }\n          boxes.splice(i, 1); // removing box\n          overlapping = true;\n        }\n      }\n    }\n  }\n\n  i = 0;\n  // step 4: normalize y and adjust x\n  boxes.forEach((b) => {\n    let posInCompositeBox = startY + lineHeight / 2; // middle of the label\n    b.targets.forEach(() => {\n      labels[i].y = b.pos + posInCompositeBox;\n      posInCompositeBox += lineHeight;\n      i++;\n    });\n  });\n\n  const labelsMap = {};\n  for (const labelShape of labelShapes) {\n    labelsMap[labelShape.get('id')] = labelShape;\n  }\n\n  // (x - cx)^2 + (y - cy)^2 = totalR^2\n  labels.forEach((label) => {\n    const rPow2 = label.r * label.r;\n    const dyPow2 = Math.pow(Math.abs(label.y - center.y), 2);\n    if (rPow2 < dyPow2) {\n      label.x = center.x;\n    } else {\n      const dx = Math.sqrt(rPow2 - dyPow2);\n      if (!isRight) {\n        // left\n        label.x = center.x - dx;\n      } else {\n        // right\n        label.x = center.x + dx;\n      }\n    }\n\n    // adjust labelShape\n    const labelShape = labelsMap[label.id];\n    labelShape.attr('x', label.x);\n    labelShape.attr('y', label.y);\n\n    // because group could not effect text-shape, should set text-shape position manually\n    const textShape = find(labelShape.getChildren(), (ele) => ele.get('type') === 'text') as IElement;\n    // @ts-ignore\n    if (textShape) {\n      textShape.attr('y', label.y);\n      textShape.attr('x', label.x);\n    }\n  });\n}\n\nexport function distribute(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  const offset = items[0] ? items[0].offset : 0;\n  const coordinate = labels[0].get('coordinate');\n  const radius = coordinate.getRadius();\n  const center = coordinate.getCenter();\n\n  if (offset > 0) {\n    // const lineHeight = get(this.geometry.theme, ['pieLabels', 'labelHeight'], 14);\n    const lineHeight = 14; // TODO\n    const totalR = radius + offset;\n    const totalHeight = totalR * 2 + lineHeight * 2;\n    const plotRange = {\n      start: coordinate.start,\n      end: coordinate.end,\n    };\n\n    // step 1: separate labels\n    const halves = [\n      [], // left\n      [], // right\n    ];\n    items.forEach((labelItem) => {\n      if (!labelItem) {\n        return;\n      }\n      if (labelItem.textAlign === 'right') {\n        // left\n        halves[0].push(labelItem);\n      } else {\n        // right or center will be put on the right side\n        halves[1].push(labelItem);\n      }\n    });\n\n    halves.forEach((half, index) => {\n      // step 2: reduce labels\n      const maxLabelsCountForOneSide = totalHeight / lineHeight;\n      if (half.length > maxLabelsCountForOneSide) {\n        half.sort((a, b) => {\n          // sort by percentage DESC\n          return b['..percent'] - a['..percent'];\n        });\n        half.splice(maxLabelsCountForOneSide, half.length - maxLabelsCountForOneSide);\n      }\n\n      // step 3: distribute position (x and y)\n      half.sort((a, b) => {\n        // sort by y ASC\n        return a.y - b.y;\n      });\n\n      antiCollision(labels, half, lineHeight, plotRange, center, index);\n    });\n  }\n\n  // 配置 labelLine\n  each(items, (item) => {\n    if (item && item.labelLine) {\n      const distance = item.offset;\n      const angle = item.angle;\n      // 贴近圆周\n      const startPoint = polarToCartesian(center.x, center.y, radius, angle);\n      const innerPoint = polarToCartesian(center.x, center.y, radius + distance / 2, angle);\n      const itemX = item.x + get(item, 'offsetX', 0);\n      const itemY = item.y + get(item, 'offsetY', 0);\n      const endPoint = {\n        x: itemX - Math.cos(angle) * MARGIN,\n        y: itemY - Math.sin(angle) * MARGIN,\n      };\n      if (!isObject(item.labelLine)) {\n        // labelLine: true\n        item.labelLine = {};\n      }\n      item.labelLine.path = [\n        `M ${startPoint.x}`,\n        `${startPoint.y} Q${innerPoint.x}`,\n        `${innerPoint.y} ${endPoint.x}`,\n        endPoint.y,\n      ].join(',');\n    }\n  });\n}\n","import { Coordinate } from '@antv/coord';\nimport { BBox, IGroup, IShape, IElement } from '@antv/g-base';\nimport { isObject, each, find, get } from '@antv/util';\nimport { Point } from '../../../../interface';\nimport { polarToCartesian } from '../../../../util/graphics';\nimport { LabelItem } from '../../interface';\n\n/** label text和line距离 4px */\nconst MARGIN = 4;\n\nfunction antiCollision(\n  labelShapes: IGroup[],\n  labels: LabelItem[],\n  labelHeight: number,\n  plotRange,\n  center: Point,\n  radius: number,\n  isRight\n) {\n  // sorted by y, mutable\n  labels.sort((a, b) => a.y - b.y);\n\n  // adjust y position of labels to avoid overlapping\n  const start = plotRange.start;\n  const end = plotRange.end;\n  const startY = Math.min(start.y, end.y);\n  const endY = Math.max(start.y, end.y);\n  let i;\n\n  const boxes = labels.map((label) => {\n    return {\n      content: label.content,\n      size: labelHeight,\n      pos: label.y,\n      targets: [label.y],\n    };\n  });\n\n  const maxPos = Math.max(...boxes.map((b) => b.pos));\n  const minPos = Math.min(...boxes.map((b) => b.pos));\n  /**\n   * when in right, shift from up to down\n   */\n  if (isRight) {\n    const minY = Math.min(minPos, endY - (boxes.length - 1) * labelHeight);\n    const maxY = Math.max(minY + boxes.length * labelHeight, maxPos + labelHeight);\n    let overlapping = true;\n    while (overlapping) {\n      // detect overlapping and join boxes\n      overlapping = false;\n      i = boxes.length;\n      while (i--) {\n        if (i > 0) {\n          const previousBox = boxes[i - 1];\n          const box = boxes[i];\n          // overlap\n          if (previousBox.pos + previousBox.size > box.pos) {\n            if (box.pos + i * labelHeight < maxY) {\n              // join boxes\n              previousBox.size += box.size;\n              previousBox.targets = previousBox.targets.concat(box.targets);\n              // removing box\n              boxes.splice(i, 1);\n            } else {\n              previousBox.pos = box.pos - previousBox.size;\n            }\n            overlapping = true;\n          }\n        }\n      }\n    }\n  } else {\n    const maxY = Math.max(startY + (boxes.length - 1) * labelHeight, maxPos);\n    const minY = Math.min(minPos, maxY - (boxes.length - 1) * labelHeight);\n    let overlapping = true;\n    while (overlapping) {\n      // detect overlapping and join boxes\n      overlapping = false;\n      i = boxes.length;\n      while (i--) {\n        if (i > 0) {\n          const previousBox = boxes[i - 1];\n          const box = boxes[i];\n          // overlap\n          if (previousBox.pos + previousBox.size > box.pos) {\n            if (previousBox.pos - minY > i * labelHeight) {\n              previousBox.pos -= previousBox.size;\n            } else {\n              // join boxes\n              previousBox.size += box.size;\n              previousBox.targets = previousBox.targets.concat(box.targets);\n              // removing box\n              boxes.splice(i, 1);\n            }\n            overlapping = true;\n          }\n        }\n      }\n    }\n  }\n\n  // step 4: normalize y and adjust x\n  i = 0;\n  boxes.forEach((b) => {\n    let posInCompositeBox = b.pos;\n    b.targets.forEach(() => {\n      labels[i].y = posInCompositeBox;\n      posInCompositeBox += labelHeight;\n      i++;\n    });\n  });\n\n  const labelsMap = {};\n  for (const labelShape of labelShapes) {\n    labelsMap[labelShape.get('id')] = labelShape;\n  }\n\n  // (x - cx)^2 + (y - cy)^2 = totalR^2\n  let totalR = (Math.max(...labels.map((l) => l.y)) - Math.min(...labels.map((l) => l.y))) / 2;\n  totalR = Math.max(totalR, radius);\n  labels.forEach((label) => {\n    const labelShape = labelsMap[label.id];\n\n    // because group could not effect text-shape, should set text-shape position manually\n    const textShape = labelShape.find((child) => child.get('type') === 'text') as IElement;\n\n    // textShape 发生过调整\n    if (textShape && textShape.attr('y') !== label.y) {\n      const rPow2 = totalR * totalR;\n      const dyPow2 = Math.pow(Math.abs(label.y - center.y), 2);\n      if (rPow2 < dyPow2) {\n        label.x = center.x;\n      } else {\n        const dx = Math.sqrt(rPow2 - dyPow2);\n        if (!isRight) {\n          // left\n          label.x = center.x - dx;\n        } else {\n          // right\n          label.x = center.x + dx;\n        }\n      }\n    }\n\n    // adjust labelShape\n    labelShape.attr('x', label.x);\n    labelShape.attr('y', label.y);\n\n    // @ts-ignore\n    if (textShape) {\n      textShape.attr('y', label.y);\n      textShape.attr('x', label.x);\n    }\n  });\n}\n\nexport function pieOuterLabelLayout(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  const offset = items[0] ? items[0].offset : 0;\n  const coordinate: Coordinate = labels[0].get('coordinate');\n  const radius = coordinate.getRadius();\n  const center = coordinate.getCenter();\n\n  if (offset > 0) {\n    // note labelHeight 可以控制 label 的行高\n    const lineHeight: number = get(items[0], 'labelHeight', 14);\n    const totalR = radius + offset;\n    const totalHeight = totalR * 2 + lineHeight * 2;\n    const plotRange = {\n      start: coordinate.start,\n      end: coordinate.end,\n    };\n\n    // step 1: separate labels\n    const halves: LabelItem[][] = [\n      [], // left\n      [], // right\n    ];\n    items.forEach((labelItem) => {\n      if (!labelItem) {\n        return;\n      }\n      if (labelItem.x < center.x) {\n        // left\n        halves[0].push(labelItem);\n      } else {\n        // right or center will be put on the right side\n        halves[1].push(labelItem);\n      }\n    });\n\n    halves.forEach((half, index) => {\n      // step 2: reduce labels\n      const maxLabelsCountForOneSide = totalHeight / lineHeight;\n      if (half.length > maxLabelsCountForOneSide) {\n        half.sort((a, b) => {\n          // sort by percentage DESC\n          // fixme-xinming 目前还获取不到，需要使用 scale 去获取 percent\n          return b['data.percent'] - a['data.percent'];\n        });\n\n        const hidden = half.splice(maxLabelsCountForOneSide, half.length - maxLabelsCountForOneSide + 1);\n        hidden.forEach((l) => {\n          const idx = labels.findIndex((item) => item.get('id') === l.id);\n          if (labels[idx]) {\n            labels[idx].remove(true);\n            // 同时移除\n            labels.splice(idx, 1);\n          }\n        });\n      }\n      antiCollision(labels, half, lineHeight, plotRange, center, totalR, index === 1);\n    });\n  }\n\n  // 配置 labelLine\n  each(items, (item) => {\n    if (item && item.labelLine) {\n      const { angle } = item;\n      // 贴近圆周\n      const startPoint = polarToCartesian(center.x, center.y, radius, angle);\n      const itemX = item.x + get(item, 'offsetX', 0) * (Math.cos(angle) > 0 ? 1 : -1);\n      const itemY = item.y + get(item, 'offsetY', 0) * (Math.sin(angle) > 0 ? 1 : -1);\n\n      const endPoint = {\n        x: itemX - Math.cos(angle) * MARGIN,\n        y: itemY - Math.sin(angle) * MARGIN,\n      };\n\n      const smoothConnector = item.labelLine.smooth;\n      const path = [];\n      const dx = endPoint.x - center.x;\n      const dy = endPoint.y - center.y;\n      let endAngle = Math.atan(dy / dx);\n      // 第三象限 & 第四象限\n      if (dx < 0) {\n        endAngle += Math.PI;\n      }\n\n      // 默认 smooth, undefined 也为 smooth\n      if (smoothConnector === false) {\n        if (!isObject(item.labelLine)) {\n          // labelLine: true\n          item.labelLine = {};\n        }\n\n        // 表示弧线的方向，0 表示从起点到终点沿逆时针画弧, 1 表示顺时针\n        let sweepFlag = 0;\n\n        // 第一象限\n        if ((angle < 0 && angle > -Math.PI / 2) || angle > Math.PI * 1.5) {\n          if (endPoint.y > startPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        // 第二象限\n        if (angle >= 0 && angle < Math.PI / 2) {\n          if (endPoint.y > startPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        // 第三象限\n        if (angle >= Math.PI / 2 && angle < Math.PI) {\n          if (startPoint.y > endPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        // 第四象限\n        if (angle < -Math.PI / 2 || (angle >= Math.PI && angle < Math.PI * 1.5)) {\n          if (startPoint.y > endPoint.y) {\n            sweepFlag = 1;\n          }\n        }\n\n        const distance = offset / 2 > 4 ? 4 : Math.max(offset / 2 - 1, 0);\n        const breakPoint = polarToCartesian(center.x, center.y, radius + distance, angle);\n        // 圆弧的结束点\n        const breakPoint3 = polarToCartesian(center.x, center.y, radius + offset / 2, endAngle);\n\n        /**\n         * @example\n         * M 100 100 L100 90 A 50 50 0 0 0 150 50\n         * 移动至 (100, 100), 连接到 (100, 90), 以 (50, 50) 为圆心，绘制圆弧至 (150, 50);\n         * A 命令的第 4 个参数 large-arc-flag, 决定弧线是大于还是小于 180 度: 0 表示小角度弧，1 表示大角\n         * 第 5 个参数: 是否顺时针绘制\n         */\n        // 默认小弧\n        const largeArcFlag = 0;\n        // step1: 移动至起点\n        path.push(`M ${startPoint.x} ${startPoint.y}`);\n        // step2: 连接拐点\n        path.push(`L ${breakPoint.x} ${breakPoint.y}`);\n        // step3: 绘制圆弧 至 结束点\n        path.push(`A ${center.x} ${center.y} 0 ${largeArcFlag} ${sweepFlag} ${breakPoint3.x} ${breakPoint3.y}`);\n        // step4: 连接结束点\n        path.push(`L ${endPoint.x} ${endPoint.y}`);\n      } else {\n        const breakPoint = polarToCartesian(\n          center.x,\n          center.y,\n          radius + (offset / 2 > 4 ? 4 : Math.max(offset / 2 - 1, 0)),\n          angle\n        );\n        // G2 旧的拉线\n        // path.push('Q', `${breakPoint.x}`, `${breakPoint.y}`, `${endPoint.x}`, `${endPoint.y}`);\n        const xSign = startPoint.x < center.x ? 1 : -1;\n        // step1: 连接结束点\n        path.push(`M ${endPoint.x} ${endPoint.y}`);\n        const slope1 = (startPoint.y - center.y) / (startPoint.x - center.x);\n        const slope2 = (endPoint.y - center.y) / (endPoint.x - center.x);\n        if (Math.abs(slope1 - slope2) > Math.pow(Math.E, -16)) {\n          // step2: 绘制 curve line (起点 & 结合点与圆心的斜率不等时, 由于存在误差, 使用近似处理)\n          path.push(\n            ...[\n              'C',\n              endPoint.x + xSign * 4,\n              endPoint.y,\n              2 * breakPoint.x - startPoint.x,\n              2 * breakPoint.y - startPoint.y,\n              startPoint.x,\n              startPoint.y,\n            ]\n          );\n        }\n        // step3: 连接至起点\n        path.push(`L ${startPoint.x} ${startPoint.y}`);\n      }\n\n      item.labelLine.path = path.join(' ');\n    }\n  });\n}\n","import { each } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { translate } from '../../../util/transform';\nimport { LabelItem } from '../interface';\n\n/**\n * @ignore\n * 将 label 限制在画布范围内，简单得将超出画布的 label 往画布内调整\n * @param labels\n * @param cfg\n */\nexport function limitInCanvas(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  each(labels, (label: IGroup) => {\n    const { minX: regionMinX, minY: regionMinY, maxX: regionMaxX, maxY: regionMaxY } = region;\n    const { minX, minY, maxX, maxY, x, y, width, height } = label.getCanvasBBox();\n\n    let finalX = x;\n    let finalY = y;\n    if (minX < regionMinX || maxX < regionMinX) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n    if (minY < regionMinY || maxY < regionMinY) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n\n    if (minX > regionMaxX) {\n      // 整体超出右侧\n      finalX = regionMaxX - width;\n    } else if (maxX > regionMaxX) {\n      // 超出右侧\n      finalX = finalX - (maxX - regionMaxX);\n    }\n\n    if (minY > regionMaxY) {\n      // 整体超出顶部\n      finalY = regionMaxY - height;\n    } else if (maxY > regionMaxY) {\n      // 超出底部\n      finalY = finalY - (maxY - regionMaxY);\n    }\n\n    if (finalX !== x || finalY !== y) {\n      translate(label, finalX - x, finalY - y);\n    }\n  });\n}\n","import { each } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { LabelItem } from '../interface';\n\n/**\n * @ignore\n * 根据图形元素以及 label 的 bbox 进行调整，如果 label 超出了 shape 的 bbox 则不展示\n */\nexport function limitInShape(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  each(labels, (label, index) => {\n    const labelBBox = label.getCanvasBBox(); // 文本有可能发生旋转\n    const shapeBBox = shapes[index].getBBox();\n    if (\n      labelBBox.minX < shapeBBox.minX ||\n      labelBBox.minY < shapeBBox.minY ||\n      labelBBox.maxX > shapeBBox.maxX ||\n      labelBBox.maxY > shapeBBox.maxY\n    ) {\n      label.remove(true); // 超出则不展示\n    }\n  });\n}\n","import { each } from '@antv/util';\nimport { BBox, IGroup, IShape } from '../../../dependents';\nimport { LabelItem } from '../interface';\n\nconst MAX_TIMES = 100;\n\n/** @ignore */\ninterface Bitmap {\n  [key: number]: {\n    [key: number]: boolean;\n  };\n}\n\n/** @ignore */\ninterface GreedyCfg {\n  readonly xGap?: number;\n  readonly yGap?: number;\n}\n\n/**\n * @ignore\n * Greedy 贪婪算法\n */\nclass Greedy {\n  public readonly xGap: number;\n  /** optimizing for text overlapping detection: use a min text height as gap */\n  public readonly yGap: number;\n\n  private bitmap: Bitmap = {};\n\n  constructor(cfg: GreedyCfg = {}) {\n    const { xGap = 1, yGap = 8 } = cfg;\n    this.xGap = xGap;\n    this.yGap = yGap;\n  }\n\n  public hasGap(bbox: BBox): boolean {\n    let hasGap = true;\n    const bitmap = this.bitmap;\n    const minX = Math.round(bbox.minX);\n    const maxX = Math.round(bbox.maxX);\n    const minY = Math.round(bbox.minY);\n    const maxY = Math.round(bbox.maxY);\n    for (let i = minX; i <= maxX; i += 1) {\n      if (!bitmap[i]) {\n        bitmap[i] = {};\n        continue;\n      }\n      if (i === minX || i === maxX) {\n        for (let j = minY; j <= maxY; j++) {\n          if (bitmap[i][j]) {\n            hasGap = false;\n            break;\n          }\n        }\n      } else {\n        if (bitmap[i][minY] || bitmap[i][maxY]) {\n          hasGap = false;\n          break;\n        }\n      }\n    }\n    return hasGap;\n  }\n\n  public fillGap(bbox: BBox): void {\n    const bitmap = this.bitmap;\n    const minX = Math.round(bbox.minX);\n    const maxX = Math.round(bbox.maxX);\n    const minY = Math.round(bbox.minY);\n    const maxY = Math.round(bbox.maxY);\n    // filling grid\n    for (let i = minX; i <= maxX; i += 1) {\n      if (!bitmap[i]) {\n        bitmap[i] = {};\n      }\n    }\n    for (let i = minX; i <= maxX; i += this.xGap) {\n      for (let j = minY; j <= maxY; j += this.yGap) {\n        bitmap[i][j] = true;\n      }\n      bitmap[i][maxY] = true;\n    }\n\n    // filling y edges\n    if (this.yGap !== 1) {\n      for (let i = minY; i <= maxY; i += 1) {\n        bitmap[minX][i] = true;\n        bitmap[maxX][i] = true;\n      }\n    }\n\n    // filling x edges\n    if (this.xGap !== 1) {\n      for (let i = minX; i <= maxX; i += 1) {\n        bitmap[i][minY] = true;\n        bitmap[i][maxY] = true;\n      }\n    }\n  }\n\n  public destroy(): void {\n    this.bitmap = {};\n  }\n}\n\nfunction spiralFill(label: IShape, greedy: Greedy, maxTimes: number = MAX_TIMES) {\n  const dt = -1;\n  const { x, y } = label.attr();\n  const bbox = label.getCanvasBBox();\n  const maxDelta = Math.sqrt(bbox.width * bbox.width + bbox.height * bbox.height);\n  let dxdy;\n  let t = -dt;\n  let dx = 0;\n  let dy = 0;\n  const f = (param: number) => {\n    const nt = param * 0.1;\n    return [nt * Math.cos(nt), nt * Math.sin(nt)];\n  };\n\n  if (greedy.hasGap(bbox)) {\n    greedy.fillGap(bbox);\n    return true;\n  }\n  let canFill = false;\n  let times = 0;\n  const accessedCache = {};\n  while (Math.min(Math.abs(dx), Math.abs(dy)) < maxDelta && times < maxTimes) {\n    dxdy = f((t += dt));\n    dx = ~~dxdy[0];\n    dy = ~~dxdy[1];\n    if ((!dx && !dy) || accessedCache[`${dx}-${dy}`]) {\n      continue;\n    }\n    label.attr({ x: x + dx, y: y + dy });\n    if (dx + dy < 0) {\n      label.attr('textAlign', 'right');\n    }\n    times++;\n    if (greedy.hasGap(label.getCanvasBBox())) {\n      greedy.fillGap(label.getCanvasBBox());\n      canFill = true;\n      accessedCache[`${dx}-${dy}`] = true;\n      break;\n    }\n  }\n  return canFill;\n}\n\n/*\n *  根据如下规则尝试放置label\n *                5\n *        ------------------\n *        |    1   |   0   |\n *    8   —————————4————————   7\n *        |    2   |   3   |\n *        ——————————————————\n *                 6\n */\nfunction adjustLabelPosition(label: IShape, x: number, y: number, index: number) {\n  const { width, height } = label.getCanvasBBox();\n  const attrs = {\n    x,\n    y,\n    textAlign: 'center',\n  };\n  switch (index) {\n    case 0:\n      attrs.y -= height + 1;\n      attrs.x += 1;\n      attrs.textAlign = 'left';\n      break;\n    case 1:\n      attrs.y -= height + 1;\n      attrs.x -= 1;\n      attrs.textAlign = 'right';\n      break;\n    case 2:\n      attrs.y += height + 1;\n      attrs.x -= 1;\n      attrs.textAlign = 'right';\n      break;\n    case 3:\n      attrs.y += height + 1;\n      attrs.x += 1;\n      attrs.textAlign = 'left';\n      break;\n    case 5:\n      attrs.y -= height * 2 + 2;\n      break;\n    case 6:\n      attrs.y += height * 2 + 2;\n      break;\n    case 7:\n      attrs.x += width + 1;\n      attrs.textAlign = 'left';\n      break;\n    case 8:\n      attrs.x -= width + 1;\n      attrs.textAlign = 'right';\n      break;\n    default:\n      break;\n  }\n  label.attr(attrs);\n  return label.getCanvasBBox();\n}\n\n/**\n * @ignore\n * label 防遮挡布局：在不改变 label 位置的情况下对相互重叠的 label 进行调整。\n * 不同于 'overlap' 类型的布局，该布局不会对 label 的位置进行偏移调整。\n * @param labels 参与布局调整的 label 数组集合\n */\nexport function fixedOverlap(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  const greedy = new Greedy();\n  each(labels, (label: IGroup) => {\n    const labelShape = label.find((shape) => shape.get('type') === 'text') as IShape;\n    if (!spiralFill(labelShape, greedy)) {\n      label.remove(true);\n    }\n  });\n  greedy.destroy();\n}\n\n/**\n * @ignore\n * label 防遮挡布局：为了防止 label 之间相互覆盖同时保证尽可能多 的 label 展示，通过尝试将 label 向**四周偏移**来剔除放不下的 label\n * @param labels 参与布局调整的 label 数组集合\n */\nexport function overlap(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[], region: BBox) {\n  const greedy = new Greedy();\n  each(labels, (label: IGroup) => {\n    const labelShape = label.find((shape) => shape.get('type') === 'text') as IShape;\n    const { x, y } = labelShape.attr();\n    let canFill = false;\n    for (let i = 0; i <= 8; i++) {\n      const bbox = adjustLabelPosition(labelShape, x, y, i);\n      if (greedy.hasGap(bbox)) {\n        greedy.fillGap(bbox);\n        canFill = true;\n        break;\n      }\n    }\n    if (!canFill) {\n      label.remove(true);\n    }\n  });\n\n  greedy.destroy();\n}\n","import { isNil } from '@antv/util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 单个 shape 动画\n * 渐现动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function fadeIn(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const endState = {\n    fillOpacity: isNil(shape.attr('fillOpacity')) ? 1 : shape.attr('fillOpacity'),\n    strokeOpacity: isNil(shape.attr('strokeOpacity')) ? 1 : shape.attr('strokeOpacity'),\n    opacity: isNil(shape.attr('opacity')) ? 1 : shape.attr('opacity'),\n  };\n  shape.attr({\n    fillOpacity: 0,\n    strokeOpacity: 0,\n    opacity: 0,\n  });\n  shape.animate(endState, animateCfg);\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * 渐隐动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function fadeOut(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const endState = {\n    fillOpacity: 0,\n    strokeOpacity: 0,\n    opacity: 0,\n  };\n  const { easing, duration, delay } = animateCfg;\n  shape.animate(\n    endState,\n    duration,\n    easing,\n    () => {\n      shape.remove(true);\n    },\n    delay\n  );\n}\n","import { ext } from '@antv/matrix-util';\nimport { Coordinate, IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg, Point } from '../../interface';\n\n/**\n * @ignore\n * 对图形元素进行矩阵变换，同时返回变换前的图形矩阵\n * @param shape 进行矩阵变换的图形\n * @param vector 矩阵变换的中心点\n * @param direct 矩阵变换的类型\n */\nexport function transformShape(shape: IShape | IGroup, vector: [number, number], direct: string): number[] {\n  let scaledMatrix;\n\n  const [x, y] = vector;\n  shape.applyToMatrix([x, y, 1]);\n  if (direct === 'x') {\n    shape.setMatrix(\n      ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 0.01, 1],\n        ['t', x, y],\n      ])\n    );\n    scaledMatrix = ext.transform(shape.getMatrix(), [\n      ['t', -x, -y],\n      ['s', 100, 1],\n      ['t', x, y],\n    ]);\n  } else if (direct === 'y') {\n    shape.setMatrix(\n      ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 1, 0.01],\n        ['t', x, y],\n      ])\n    );\n    scaledMatrix = ext.transform(shape.getMatrix(), [\n      ['t', -x, -y],\n      ['s', 1, 100],\n      ['t', x, y],\n    ]);\n  } else if (direct === 'xy') {\n    shape.setMatrix(\n      ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 0.01, 0.01],\n        ['t', x, y],\n      ])\n    );\n    scaledMatrix = ext.transform(shape.getMatrix(), [\n      ['t', -x, -y],\n      ['s', 100, 100],\n      ['t', x, y],\n    ]);\n  }\n  return scaledMatrix;\n}\n\n/**\n * 对图形元素进行剪切动画\n * @param element 进行动画的图形元素\n * @param animateCfg 动画配置\n * @param coordinate 当前坐标系\n * @param yMinPoint y 轴的最小值对应的图形坐标点\n * @param type 剪切动画的类型\n */\nexport function doScaleAnimate(\n  element: IGroup | IShape,\n  animateCfg: GAnimateCfg,\n  coordinate: Coordinate,\n  yMinPoint: Point,\n  type: string\n) {\n  const { start, end } = coordinate;\n  const width = coordinate.getWidth();\n  const height = coordinate.getHeight();\n  let x: number;\n  let y: number;\n\n  if (type === 'y') {\n    x = start.x + width / 2;\n    y = yMinPoint.y < start.y ? yMinPoint.y : start.y;\n  } else if (type === 'x') {\n    x = yMinPoint.x > start.x ? yMinPoint.x : start.x;\n    y = start.y + height / 2;\n  } else if (type === 'xy') {\n    if (coordinate.isPolar) {\n      x = coordinate.getCenter().x;\n      y = coordinate.getCenter().y;\n    } else {\n      x = (start.x + end.x) / 2;\n      y = (start.y + end.y) / 2;\n    }\n  }\n\n  const endMatrix = transformShape(element, [x, y], type);\n  element.animate(\n    {\n      matrix: endMatrix,\n    },\n    animateCfg\n  );\n}\n","import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nimport { doScaleAnimate } from './util';\n\n/**\n * @ignore\n * 入场动画\n * x 方向的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInX(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'x');\n}\n\n/**\n * @ignore\n * 入场动画\n * y 轴方向上的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInY(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'y');\n}\n\n/**\n * @ignore\n * 入场\n * 中心点的向四周的生长动画\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInXY(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'xy');\n}\n","import { IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 入场动画\n * path 的入场动画\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function pathIn(element: IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  // @ts-ignore\n  const length = element.getTotalLength();\n  // 设置虚线样式\n  element.attr('lineDash', [length]);\n  element.animate((ratio: number) => {\n    return {\n      // 对虚线偏移量做动画\n      lineDashOffset: (1 - ratio) * length,\n    };\n  }, animateCfg);\n}\n","import { IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 坐标移动动画\n * @param shape 图形\n * @param animateCfg\n * @param cfg\n */\nexport function positionUpdate(shape: IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { toAttrs } = cfg;\n  // @ts-ignore\n  const x = toAttrs.x;\n  // @ts-ignore\n  const y = toAttrs.y;\n\n  // @ts-ignore\n  delete toAttrs.x;\n  // @ts-ignore\n  delete toAttrs.y;\n\n  shape.attr(toAttrs);\n\n  shape.animate(\n    {\n      x,\n      y,\n    },\n    animateCfg\n  );\n}\n","import { ext } from '@antv/matrix-util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg, Point } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 沿着 x 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\nexport function scaleInX(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const box = shape.getBBox();\n  const { mappingData } = shape.get('origin');\n  const points = mappingData.points as Point[];\n  // x 数值如果为负值，那么应该从右往左生长\n  const x = points[0].y - points[1].y > 0 ? box.maxX : box.minX;\n  const y = (box.minY + box.maxY) / 2;\n\n  shape.applyToMatrix([x, y, 1]);\n\n  const matrix = ext.transform(shape.getMatrix(), [\n    ['t', -x, -y],\n    ['s', 0.01, 1],\n    ['t', x, y],\n  ]);\n  shape.setMatrix(matrix);\n\n  shape.animate(\n    {\n      matrix: ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 100, 1],\n        ['t', x, y],\n      ]),\n    },\n    animateCfg\n  );\n}\n\n/**\n * @ignore\n * 沿着 y 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\nexport function scaleInY(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const box = shape.getBBox();\n  const { mappingData } = shape.get('origin');\n  const x = (box.minX + box.maxX) / 2;\n  const points = mappingData.points as Point[];\n  // 数值如果为负值，那么应该从上往下生长，通过 shape 的关键点进行判断\n  const y = points[0].y - points[1].y <= 0 ? box.maxY : box.minY;\n\n  shape.applyToMatrix([x, y, 1]);\n  const matrix = ext.transform(shape.getMatrix(), [\n    ['t', -x, -y],\n    ['s', 1, 0.01],\n    ['t', x, y],\n  ]);\n  shape.setMatrix(matrix);\n\n  shape.animate(\n    {\n      matrix: ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 1, 100],\n        ['t', x, y],\n      ]),\n    },\n    animateCfg\n  );\n}\n","import getArcParams from '@antv/g-canvas/lib/util/arc-params';\nimport { isNumberEqual, isEqual } from '@antv/util';\n\nimport { IShape, PathCommand } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nimport { getArcPath, getSectorPath } from '../../util/graphics';\n\nfunction getAngle(startPoint: number[], arcPath: PathCommand) {\n  let { startAngle, endAngle } = getArcParams(startPoint, arcPath);\n\n  if (!isNumberEqual(startAngle, -Math.PI * 0.5) && startAngle < -Math.PI * 0.5) {\n    startAngle += Math.PI * 2;\n  }\n  if (!isNumberEqual(endAngle, -Math.PI * 0.5) && endAngle < -Math.PI * 0.5) {\n    endAngle += Math.PI * 2;\n  }\n\n  if (arcPath[5] === 0) {\n    // 逆时针，需要将 startAngle 和 endAngle 转置，因为 G2 极坐标系为顺时针方向\n    [startAngle, endAngle] = [endAngle, startAngle];\n  }\n\n  if (isNumberEqual(startAngle, Math.PI * 1.5)) {\n    startAngle = Math.PI * -0.5;\n  }\n\n  if (isNumberEqual(endAngle, Math.PI * -0.5)) {\n    endAngle = Math.PI * 1.5;\n  }\n\n  return {\n    startAngle,\n    endAngle,\n  };\n}\n\nfunction getArcStartPoint(path: PathCommand) {\n  let startPoint;\n  if (path[0] === 'M' || path[0] === 'L') {\n    startPoint = [path[1], path[2]];\n  } else if (path[0] === 'a' || path[0] === 'A') {\n    startPoint = [path[path.length - 2], path[path.length - 1]];\n  }\n\n  return startPoint;\n}\n\n/**\n * path 存在以下情况\n * 1. 饼图不为整圆的 path，命令为 M, L, A, L, Z\n * 2. 饼图为整圆的 path，命令为 M, M, A, A, M, Z\n * 3. 环图不为整圆的 path，命令为 M, A, L, A, L, Z\n * 4. 环图为整圆的 path，命令为 M, A, A, M, A, A, M, Z\n * 5. radial-line, 不为整圆时的 path, 命令为 M, A, A, Z\n * 6. radial-line, 为整圆时的 path，命令为 M, A, A, A, A, Z\n * @param path theta 坐标系下圆弧的 path 命令\n */\nfunction getArcInfo(path: PathCommand[]) {\n  let startAngle;\n  let endAngle;\n\n  const arcPaths = path.filter((command) => {\n    return command[0] === 'A' || command[0] === 'a';\n  });\n\n  const firstArcPathCommand = arcPaths[0];\n  const lastArcPathCommand = arcPaths.length > 1 ? arcPaths[1] : arcPaths[0];\n  const firstIndex = path.indexOf(firstArcPathCommand);\n  const lastIndex = path.indexOf(lastArcPathCommand);\n  const firstStartPoint = getArcStartPoint(path[firstIndex - 1]);\n  const lastStartPoint = getArcStartPoint(path[lastIndex - 1]);\n\n  const { startAngle: firstStartAngle, endAngle: firstEndAngle } = getAngle(firstStartPoint, firstArcPathCommand);\n  const { startAngle: lastStartAngle, endAngle: lastEndAngle } = getAngle(lastStartPoint, lastArcPathCommand);\n\n  if (isNumberEqual(firstStartAngle, lastStartAngle) && isNumberEqual(firstEndAngle, lastEndAngle)) {\n    startAngle = firstStartAngle;\n    endAngle = firstEndAngle;\n  } else {\n    startAngle = Math.min(firstStartAngle, lastStartAngle);\n    endAngle = Math.max(firstEndAngle, lastEndAngle);\n  }\n\n  let radius = firstArcPathCommand[1];\n  let innerRadius = arcPaths[arcPaths.length - 1][1];\n  if (radius < innerRadius) {\n    [radius, innerRadius] = [innerRadius, radius];\n  } else if (radius === innerRadius) {\n    innerRadius = 0;\n  }\n\n  return {\n    startAngle,\n    endAngle,\n    radius,\n    innerRadius,\n  };\n}\n\n/**\n * @ignore\n * 饼图更新动画\n * @param shape 文本图形\n * @param animateCfg\n * @param cfg\n */\nexport function sectorPathUpdate(shape: IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { toAttrs, coordinate } = cfg;\n  // @ts-ignore\n  const path = toAttrs.path;\n  const pathCommands = path.map((command) => command[0]);\n\n  const { startAngle: curStartAngle, endAngle: curEndAngle, radius, innerRadius } = getArcInfo(path);\n  const { startAngle: preStartAngle, endAngle: preEndAngle } = getArcInfo(shape.attr('path'));\n\n  const center = coordinate.getCenter();\n  const diffStartAngle = curStartAngle - preStartAngle;\n  const diffEndAngle = curEndAngle - preEndAngle;\n\n  shape.animate(\n    (ratio) => {\n      const onFrameStartAngle = preStartAngle + ratio * diffStartAngle;\n      const onFrameEndAngle = preEndAngle + ratio * diffEndAngle;\n      return {\n        ...toAttrs,\n        path:\n          // hack, 兼容 /examples/bar/basic/demo/radial-line.ts 动画\n          isEqual(pathCommands, ['M', 'A', 'A', 'Z'])\n            ? getArcPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle)\n            : getSectorPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle, innerRadius),\n      };\n    },\n    {\n      ...animateCfg,\n      callback: () => {\n        // 将 path 保持原始态，否则会影响 setState() 的动画\n        shape.attr('path', path);\n      },\n    }\n  );\n}\n","import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { getCoordinateClipCfg } from '../../util/coordinate';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { type, startState, endState } = getCoordinateClipCfg(cfg.coordinate, 20); // 根据坐标系类型获取整体的剪切区域配置信息\n  const clipShape = element.setClip({\n    type,\n    attrs: startState,\n  }) as IShape; // 为 shape 设置剪切区域\n\n  // \b对剪切图形做动画\n  clipShape.animate(endState, {\n    ...animateCfg,\n    callback: () => {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    },\n  });\n}\n","import { ext } from '@antv/matrix-util';\nimport { each } from '@antv/util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nfunction doShapeZoom(shape: IShape | IGroup, animateCfg: GAnimateCfg, type: 'zoomIn' | 'zoomOut') {\n  if (shape.isGroup()) {\n    each((shape as IGroup).getChildren(), (child) => {\n      doShapeZoom(child, animateCfg, type);\n    });\n  } else {\n    const bbox = shape.getBBox();\n    const x = (bbox.minX + bbox.maxX) / 2;\n    const y = (bbox.minY + bbox.maxY) / 2;\n    shape.applyToMatrix([x, y, 1]);\n\n    if (type === 'zoomIn') {\n      // 放大\n      const matrix = ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 0.01, 0.01],\n        ['t', x, y],\n      ]);\n      shape.setMatrix(matrix);\n      shape.animate(\n        {\n          matrix: ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 100, 100],\n            ['t', x, y],\n          ]),\n        },\n        animateCfg\n      );\n    } else {\n      shape.animate(\n        {\n          matrix: ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 0.01, 0.01],\n            ['t', x, y],\n          ]),\n        },\n        {\n          ...animateCfg,\n          callback: () => {\n            shape.remove(true);\n          },\n        }\n      );\n    }\n  }\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * shape 以自身中心点逐渐放大的进入动画\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomIn(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  doShapeZoom(shape, animateCfg, 'zoomIn');\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * 消失动画，shape 以自身为中心点的逐渐缩小\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomOut(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  doShapeZoom(shape, animateCfg, 'zoomOut');\n}\n","import { DIRECTION } from '../constant';\nimport { Point } from '../dependents';\nimport { FacetTitle } from '../interface';\n\n/**\n * @ignore\n * 获取 facet title 的最佳默认配置，防止\n */\nexport function getFactTitleConfig(direction: DIRECTION): FacetTitle {\n  if ([DIRECTION.TOP, DIRECTION.BOTTOM].includes(direction)) {\n    return {\n      offsetX: 0,\n      offsetY: direction === DIRECTION.TOP ? -8 : 8,\n      style: {\n        textAlign: 'center',\n        textBaseline: direction === DIRECTION.TOP ? 'bottom' : 'top',\n      },\n    };\n  }\n\n  if ([DIRECTION.LEFT, DIRECTION.RIGHT].includes(direction)) {\n    return {\n      offsetX: direction === DIRECTION.LEFT ? -8 : 8,\n      offsetY: 0,\n      style: {\n        textAlign: direction === DIRECTION.LEFT ? 'right' : 'left',\n        textBaseline: 'middle',\n        rotate: Math.PI / 2, // 文本阅读习惯从上往下\n      },\n    };\n  }\n\n  return {};\n}\n\n/**\n * @ignore\n * 根据角度，获取 ○ 上的点\n * @param center\n * @param r\n * @param angle\n */\nexport function getAnglePoint(center: Point, r: number, angle: number): Point {\n  return {\n    x: center.x + r * Math.cos(angle),\n    y: center.y + r * Math.sin(angle),\n  };\n}\n","import { deepMix, each, filter, get } from '@antv/util';\nimport { AxisCfg, CircleCfg, CircleData, Datum } from '../interface';\n\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { getAnglePoint, getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Circle extends Facet<CircleCfg, CircleData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'circle',\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  /**\n   * 根据总数和当前索引，计算分面的 region\n   * @param count\n   * @param index\n   */\n  protected getRegion(count: number, index: number) {\n    const r = 1 / 2; // 画布半径\n    // 画布圆心\n    const center = { x: 0.5, y: 0.5 };\n    // 每隔分面间隔的弧度\n    const avgAngle = (Math.PI * 2) / count;\n\n    // 当前分面所在的弧度\n    const angle = (-1 * Math.PI) / 2 + avgAngle * index;\n    // TODO 没看懂\n    const facetR = r / (1 + 1 / Math.sin(avgAngle / 2));\n    // 分面的中心点\n    const middle = getAnglePoint(center, r - facetR, angle);\n    const startAngle = (Math.PI * 5) / 4; // 右上角\n    const endAngle = (Math.PI * 1) / 4; // 左下角\n\n    return {\n      start: getAnglePoint(middle, facetR, startAngle),\n      end: getAnglePoint(middle, facetR, endAngle),\n    };\n  }\n\n  protected afterEachView(view: View, facet: CircleData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: CircleData) {}\n\n  protected generateFacets(data: Datum[]): CircleData[] {\n    const { fields, type } = this.cfg;\n    const [field] = fields;\n    if (!field) {\n      throw new Error('No `fields` specified!');\n    }\n\n    const values = this.getFieldValues(data, field);\n    const count = values.length;\n\n    const rst = [];\n    values.forEach((value: any, index: number) => {\n      const conditions = [{ field, value, values }];\n      const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n      const facet: CircleData = {\n        type,\n        data: facetData,\n        region: this.getRegion(count, index),\n\n        columnValue: value,\n        columnField: field,\n        columnIndex: index,\n        columnValuesLength: count,\n\n        rowValue: null,\n        rowField: null,\n        rowIndex: 0,\n        rowValuesLength: 1,\n      };\n      rst.push(facet);\n    });\n    return rst;\n  }\n\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: CircleData): object {\n    // 不做任何处理\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: CircleData): object {\n    // 不做任何处理\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: CircleData) => {\n      const { columnValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      const config = deepMix(\n        {\n          position: ['50%', '0%'] as [string, string],\n          content: formatter ? formatter(columnValue) : columnValue,\n        },\n        getFactTitleConfig(DIRECTION.TOP),\n        this.cfg.title\n      );\n\n      view.annotation().text(config);\n    });\n  }\n}\n","import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, ListCfg, ListData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class List extends Facet<ListCfg, ListData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'list',\n      cols: null, // 默认显示一列\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected afterEachView(view: View, facet: ListData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: ListData) {}\n\n  protected generateFacets(data: Datum[]): ListData[] {\n    const { fields } = this.cfg;\n    let { cols } = this.cfg;\n\n    const [columnField] = fields;\n    if (!columnField) {\n      throw new Error('No `fields` specified!');\n    }\n\n    const colValues = this.getFieldValues(data, columnField);\n\n    const count = colValues.length;\n    cols = cols || count; // 每行有几列数据\n\n    // 总共有几行\n    const rows = this.getPageCount(count, cols);\n    const rst = [];\n\n    colValues.forEach((val, index) => {\n      // 当前 index 在那个行列\n      const { row, col } = this.getRowCol(index, cols);\n\n      const conditions = [{ field: columnField, value: val, values: colValues }];\n\n      const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n      const facet: ListData = {\n        type: this.cfg.type,\n        data: facetData,\n        region: this.getRegion(rows, cols, col, row),\n\n        columnValue: val,\n        rowValue: val,\n        columnField,\n        rowField: null,\n        columnIndex: col,\n        rowIndex: row,\n        columnValuesLength: cols,\n        rowValuesLength: rows,\n\n        total: count,\n      };\n\n      rst.push(facet);\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: ListData): object {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (\n      facet.rowIndex !== facet.rowValuesLength - 1 &&\n      facet.columnValuesLength * facet.rowIndex + facet.columnIndex + 1 + facet.columnValuesLength <= facet.total\n    ) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: ListData): object {\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: ListData) => {\n      const { columnValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      const config = deepMix(\n        {\n          position: ['50%', '0%'] as [string, string],\n          content: formatter ? formatter(columnValue) : columnValue,\n        },\n        getFactTitleConfig(DIRECTION.TOP),\n        this.cfg.title\n      );\n\n      view.annotation().text(config);\n    });\n  }\n\n  /**\n   * 计算分页数\n   * @param total\n   * @param pageSize\n   */\n  private getPageCount(total: number, pageSize: number): number {\n    return Math.floor((total + pageSize - 1) / pageSize);\n  }\n\n  /**\n   * 索引值在哪一页\n   * @param index\n   * @param pageSize\n   */\n  private getRowCol(index: number, pageSize: number) {\n    const row = Math.floor(index / pageSize);\n    const col = index % pageSize;\n\n    return { row, col };\n  }\n}\n","import { deepMix, each, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MatrixCfg, MatrixData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Matrix extends Facet<MatrixCfg, MatrixData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'matrix',\n      showTitle: false,\n      columnTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n      rowTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected afterEachView(view: View, facet: MatrixData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: MatrixData) {}\n\n  protected generateFacets(data: Datum[]): MatrixData[] {\n    const { fields, type } = this.cfg;\n\n    // 矩阵中行列相等，等于指定的字段个数\n    const rowValuesLength = fields.length;\n    const columnValuesLength = rowValuesLength;\n\n    const rst = [];\n    for (let i = 0; i < columnValuesLength; i++) {\n      const columnField = fields[i];\n      for (let j = 0; j < rowValuesLength; j++) {\n        const rowField = fields[j];\n\n        const facet: MatrixData = {\n          type,\n          data,\n          region: this.getRegion(rowValuesLength, columnValuesLength, i, j),\n\n          columnValue: columnField,\n          rowValue: rowField,\n          columnField,\n          rowField,\n          columnIndex: i,\n          rowIndex: j,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      }\n    }\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MatrixData): object {\n    // 最后一行显示\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MatrixData): object {\n    // 第一列显示\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: MatrixData, facetIndex: number) => {\n      const { columnIndex, rowIndex, columnValuesLength, rowValuesLength, columnValue, rowValue, view } = facet;\n\n      // top\n      if (rowIndex === 0) {\n        const formatter = get(this.cfg.columnTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.columnTitle\n        );\n\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        const formatter = get(this.cfg.rowTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.rowTitle\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n","import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MirrorCfg, MirrorData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Mirror extends Facet<MirrorCfg, MirrorData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'mirror',\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n      transpose: false,\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected beforeEachView(view: View, facet: MirrorData) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  }\n\n  protected afterEachView(view: View, facet: MirrorData) {\n    this.processAxis(view, facet);\n  }\n\n  protected generateFacets(data: Datum[]): MirrorData[] {\n    const [f] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    let columnField;\n    let rowField;\n\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: MirrorData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // do nothing\n    return option;\n  }\n\n  private renderTitle() {\n    each(this.facets, (facet: MirrorData, facetIndex: number) => {\n      const { columnValue, rowValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      if (this.cfg.transpose) {\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      } else {\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n","import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, RectCfg, RectData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 矩阵分面\n */\nexport default class Rect extends Facet<RectCfg, RectData> {\n  protected afterEachView(view: View, facet: RectData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: RectData) {\n    // do nothing\n  }\n\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'rect',\n      columnTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n      rowTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  /**\n   * 生成矩阵分面的分面数据\n   * @param data\n   */\n  protected generateFacets(data: Datum[]): RectData[] {\n    const [columnField, rowField] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    if (columnField) {\n      columnValues = this.getFieldValues(data, columnField);\n      columnValuesLength = columnValues.length;\n    }\n    if (rowField) {\n      rowValues = this.getFieldValues(data, rowField);\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: RectData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  private renderTitle(): void {\n    each(this.facets, (facet: RectData, facetIndex: number) => {\n      const { columnIndex, rowIndex, columnValuesLength, columnValue, rowValue, view } = facet;\n\n      // top\n      if (rowIndex === 0) {\n        const formatter = get(this.cfg.columnTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.columnTitle\n        );\n\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        const formatter = get(this.cfg.rowTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.rowTitle\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: RectData): object {\n    // 非最后一行\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.columnIndex !== Math.floor((facet.columnValuesLength - 1) / 2)) {\n      // 不是中间列\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: RectData): object {\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    } else if (facet.rowIndex !== Math.floor((facet.rowValuesLength - 1) / 2)) {\n      return {\n        ...option,\n        title: null,\n      };\n    }\n    return option;\n  }\n}\n","/**\n * Create By Bruce Too\n * On 2020-02-10\n */\nimport { assign, deepMix, each, get } from '@antv/util';\nimport View from '../chart/view';\nimport { DIRECTION, VIEW_LIFE_CIRCLE } from '../constant';\nimport { AxisCfg, Condition, Datum, TreeCfg, TreeData } from '../interface';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * Tree Facet\n */\nexport default class Tree extends Facet<TreeCfg, TreeData> {\n  protected afterEachView(view: View, facet: TreeData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: TreeData) {}\n\n  public init() {\n    super.init();\n    this.view.on(VIEW_LIFE_CIRCLE.AFTER_RENDER, this.afterChartRender);\n  }\n\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'tree',\n      line: {\n        style: {\n          lineWidth: 1,\n          stroke: '#ddd',\n        },\n        smooth: false,\n      },\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n    });\n  }\n\n  protected generateFacets(data: Datum[]): TreeData[] {\n    const fields = this.cfg.fields;\n    if (!fields.length) {\n      throw new Error('Please specify for the fields for rootFacet!');\n    }\n    const rst = [];\n    const rootFacet: TreeData = {\n      type: this.cfg.type,\n      data,\n      region: null,\n      rowValuesLength: this.getRows(),\n      columnValuesLength: 1,\n      rowIndex: 0,\n      columnIndex: 0,\n      rowField: '',\n      columnField: '',\n      rowValue: '',\n      columnValue: '',\n    };\n    rst.push(rootFacet);\n    rootFacet.children = this.getChildFacets(data, 1, rst);\n    this.setRegion(rst);\n    return rst;\n  }\n\n  private setRegion(facets: TreeData[]) {\n    this.forceColIndex(facets);\n    facets.forEach((facet) => {\n      // @ts-ignore 允许调整\n      facet.region = this.getRegion(facet.rowValuesLength, facet.columnValuesLength, facet.columnIndex, facet.rowIndex);\n    });\n  }\n\n  protected getRegion(rows: number, cols: number, xIndex: number, yIndex: number) {\n    const xWidth = 1 / cols; // x轴方向的每个分面的偏移\n    const yWidth = 1 / rows; // y轴方向的每个分面的偏移\n\n    const start = {\n      x: xWidth * xIndex,\n      y: yWidth * yIndex,\n    };\n\n    const end = {\n      x: start.x + xWidth,\n      y: start.y + (yWidth * 2) / 3, // 预留1/3的空隙，方便添加连接线\n    };\n    return {\n      start,\n      end,\n    };\n  }\n\n  private forceColIndex(facets: TreeData[]) {\n    const leafs: TreeData[] = [];\n    let index = 0;\n    facets.forEach((facet) => {\n      if (this.isLeaf(facet)) {\n        leafs.push(facet);\n        // @ts-ignore 允许调整\n        facet.columnIndex = index;\n        index++;\n      }\n    });\n\n    leafs.forEach((facet) => {\n      // @ts-ignore\n      facet.columnValuesLength = leafs.length;\n    });\n    const maxLevel = this.cfg.fields.length;\n    for (let i = maxLevel - 1; i >= 0; i--) {\n      const levelFacets = this.getFacetsByLevel(facets, i);\n      // var yIndex = maxLevel - i;\n      for (const facet of levelFacets) {\n        if (!this.isLeaf(facet)) {\n          facet.originColIndex = facet.columnIndex;\n          // @ts-ignore\n          facet.columnIndex = this.getRegionIndex(facet.children);\n          // @ts-ignore\n          facet.columnValuesLength = leafs.length;\n        }\n      }\n    }\n  }\n\n  // get facet use level\n  private getFacetsByLevel(facets: TreeData[], level: number) {\n    const rst: TreeData[] = [];\n    facets.forEach((facet) => {\n      if (facet.rowIndex === level) {\n        rst.push(facet);\n      }\n    });\n    return rst;\n  }\n\n  // if the facet has children , make it's column index in the middle of it's children\n  private getRegionIndex(children: TreeData[]) {\n    const first = children[0];\n    const last = children[children.length - 1];\n    return (last.columnIndex - first.columnIndex) / 2 + first.columnIndex;\n  }\n\n  // is  a leaf without children\n  private isLeaf(facet: TreeData) {\n    return !facet.children || !facet.children.length;\n  }\n\n  private getRows() {\n    return this.cfg.fields.length + 1;\n  }\n\n  // get child\n  private getChildFacets(data: Datum[], level: number, arr: TreeData[]) {\n    // [ 'grade', 'class' ]\n    const fields = this.cfg.fields;\n    const length = fields.length;\n    if (length < level) {\n      return;\n    }\n    const rst = [];\n    // get fist level except root node\n    const field = fields[level - 1];\n    // get field value\n    const values = this.getFieldValues(data, field);\n    values.forEach((value, index) => {\n      const conditions = [{ field, value, values } as Condition];\n      const subData = data.filter(this.getFacetDataFilter(conditions));\n      if (subData.length) {\n        const facet: TreeData = {\n          type: this.cfg.type,\n          data: subData,\n          region: null,\n          columnValue: value,\n          rowValue: '',\n          columnField: field,\n          rowField: '',\n          columnIndex: index,\n          rowValuesLength: this.getRows(),\n          columnValuesLength: 1,\n          rowIndex: level,\n          children: this.getChildFacets(subData, level + 1, arr),\n        };\n        rst.push(facet);\n        arr.push(facet);\n      }\n    });\n    return rst;\n  }\n\n  public render() {\n    super.render();\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  private afterChartRender = () => {\n    if (this.facets && this.cfg.line) {\n      this.container.clear();\n      this.drawLines(this.facets);\n    }\n  };\n\n  private renderTitle() {\n    each(this.facets, (facet: TreeData) => {\n      const { columnValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      const config = deepMix(\n        {\n          position: ['50%', '0%'] as [string, string],\n          content: formatter ? formatter(columnValue) : columnValue,\n        },\n        getFactTitleConfig(DIRECTION.TOP),\n        this.cfg.title\n      );\n\n      view.annotation().text(config);\n    });\n  }\n\n  private drawLines(facets: TreeData[]) {\n    facets.forEach((facet) => {\n      if (!this.isLeaf(facet)) {\n        const children = facet.children;\n        this.addFacetLines(facet, children);\n      }\n    });\n  }\n\n  // add lines with it's children\n  private addFacetLines(facet: TreeData, children: TreeData[]) {\n    const view = facet.view;\n    const region = view.coordinateBBox;\n    // top, right, bottom, left\n    const start = {\n      x: region.x + region.width / 2,\n      y: region.y + region.height,\n    };\n\n    children.forEach((subFacet) => {\n      const subRegion = subFacet.view.coordinateBBox;\n      const end = {\n        x: subRegion.bl.x + (subRegion.tr.x - subRegion.bl.x) / 2,\n        y: subRegion.tr.y,\n      };\n\n      const middle1 = {\n        x: start.x,\n        y: start.y + (end.y - start.y) / 2,\n      };\n      const middle2 = {\n        x: end.x,\n        y: middle1.y,\n      };\n      this.drawLine([start, middle1, middle2, end]);\n    });\n  }\n\n  private getPath(points) {\n    const path = [];\n    const smooth = this.cfg.line.smooth;\n    if (smooth) {\n      path.push(['M', points[0].x, points[0].y]);\n      path.push(['C', points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y]);\n    } else {\n      points.forEach((point, index) => {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n    }\n\n    return path;\n  }\n\n  // draw line width points\n  private drawLine(points) {\n    const path = this.getPath(points);\n    const line = this.cfg.line.style;\n    this.container.addShape('path', {\n      attrs: assign(\n        {\n          // @ts-ignore\n          path,\n        },\n        line\n      ),\n    });\n  }\n\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: TreeData): object {\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: TreeData): object {\n    if (facet.originColIndex !== 0 && facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n}\n","import { contains, deepMix, each, get, isArray, isFunction, isNil, isString, keys, upperFirst } from '@antv/util';\n\nimport { Annotation as AnnotationComponent, IElement, IGroup, Scale } from '../../dependents';\nimport {\n  AnnotationBaseOption as BaseOption,\n  AnnotationPosition as Position,\n  ArcOption,\n  ComponentOption,\n  Data,\n  DataMarkerOption,\n  DataRegionOption,\n  ImageOption,\n  LineOption,\n  Point,\n  RegionFilterOption,\n  RegionOption,\n  RegionPositionBaseOption,\n  TextOption,\n} from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\n\nimport Geometry from '../../geometry/base';\nimport Element from '../../geometry/element';\nimport { getAngleByPoint, getDistanceToCenter } from '../../util/coordinate';\nimport { omit } from '../../util/helper';\nimport View from '../view';\nimport { Controller } from './base';\n\n/**\n * Annotation controller, 主要作用:\n * 1. 创建 Annotation: line、text、arc ...\n * 2. 生命周期: init、layout、render、clear、destroy\n */\nexport default class Annotation extends Controller<BaseOption[]> {\n  private foregroundContainer: IGroup;\n  private backgroundContainer: IGroup;\n\n  /* 组件更新的 cache，组件配置 object : 组件 */\n  private cache = new Map<BaseOption, ComponentOption>();\n\n  constructor(view: View) {\n    super(view);\n\n    this.foregroundContainer = this.view.getLayer(LAYER.FORE).addGroup();\n    this.backgroundContainer = this.view.getLayer(LAYER.BG).addGroup();\n\n    this.option = [];\n  }\n\n  public get name(): string {\n    return 'annotation';\n  }\n\n  public init() {}\n\n  public layout() {\n    const components = this.getComponents();\n    const updateComponentFn = (co: ComponentOption) => {\n      const { component, extra } = co;\n      const { type } = extra;\n      const theme = this.getAnnotationTheme(type);\n\n      component.update(this.getAnnotationCfg(type, extra, theme));\n    };\n    const createComponentFn = (option: BaseOption) => {\n      const co = this.createAnnotation(option);\n      if (co) {\n        co.component.init();\n        // Note：regionFilter 特殊处理，regionFilter需要取到 Geometry 中的 Shape，需要在 view render 之后处理\n        // 其他组件使用外层的统一 render 逻辑\n        if (option.type === 'regionFilter') {\n          co.component.render();\n        }\n        // 缓存起来\n        this.cache.set(option, co);\n      }\n    };\n\n    if (components.length) {\n      each(components, (co: ComponentOption) => {\n        const { component } = co;\n\n        if (component.get('type') === 'regionFilter') {\n          // regionFilter 依赖绘制后的 Geometry Shapes\n          this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, () => {\n            updateComponentFn(co);\n          });\n        } else {\n          updateComponentFn(co);\n        }\n      });\n    } else {\n      each(this.option, (option: BaseOption) => {\n        if (option.type === 'regionFilter') {\n          this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, () => {\n            // regionFilter 依赖绘制后的 Geometry Shapes\n            createComponentFn(option);\n          });\n        } else {\n          createComponentFn(option);\n        }\n      });\n    }\n  }\n\n  public render() {\n    // 因为 Annotation 不参与布局，但是渲染的位置依赖于坐标系，所以可以将绘制阶段延迟到 layout() 进行\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 已经处理过的 legend\n    const updated = new WeakMap<BaseOption, true>();\n\n    const updateComponentFn = (option: BaseOption) => {\n      const { type } = option;\n      const theme = this.getAnnotationTheme(type);\n      const cfg = this.getAnnotationCfg(type, option, theme);\n\n      const existCo = this.cache.get(option);\n\n      // 存在，则更新\n      if (existCo) {\n        // 忽略掉一些配置\n        omit(cfg, ['container']);\n\n        existCo.component.update(cfg);\n        updated.set(option, true);\n      } else {\n        // 不存在，则创建\n        const co = this.createAnnotation(option);\n        if (co) {\n          co.component.init();\n          // Note：regionFilter 特殊处理，regionFilter需要取到 Geometry 中的 Shape，需要在 view render 之后处理\n          // 其他组件使用外层的统一 render 逻辑\n          if (option.type === 'regionFilter') {\n            co.component.render();\n          }\n          // 缓存起来\n          this.cache.set(option, co);\n          updated.set(option, true);\n        }\n      }\n    };\n\n    this.view.once(VIEW_LIFE_CIRCLE.AFTER_RENDER, () => {\n      // 先看是否有 regionFilter 要更新\n      each(this.option, (option: BaseOption) => {\n        if (option.type === 'regionFilter') {\n          updateComponentFn(option);\n        }\n      });\n\n      // 处理完成之后，销毁删除的\n      // 不在处理中的\n      const newCache = new Map<BaseOption, ComponentOption>();\n\n      this.cache.forEach((value: ComponentOption, key: BaseOption) => {\n        if (updated.has(key)) {\n          newCache.set(key, value);\n        } else {\n          // 不存在，则是所有需要被销毁的组件\n          value.component.destroy();\n        }\n      });\n\n      // 更新缓存\n      this.cache = newCache;\n    });\n\n    each(this.option, (option: BaseOption) => {\n      if (option.type !== 'regionFilter') {\n        updateComponentFn(option);\n      }\n    });\n  }\n\n  /**\n   * 清空\n   * @param includeOption 是否清空 option 配置项\n   */\n  public clear(includeOption = false) {\n    super.clear();\n\n    this.cache.clear();\n    this.foregroundContainer.clear();\n    this.backgroundContainer.clear();\n    // clear all option\n    if (includeOption) {\n      this.option = [];\n    }\n  }\n\n  public destroy() {\n    this.clear(true);\n\n    this.foregroundContainer.remove(true);\n    this.backgroundContainer.remove(true);\n  }\n\n  /**\n   * 复写基类的方法\n   */\n  public getComponents(): ComponentOption[] {\n    const co = [];\n\n    this.cache.forEach((value: ComponentOption) => {\n      co.push(value);\n    });\n\n    return co;\n  }\n\n  private createAnnotation(option: BaseOption) {\n    const { type } = option;\n\n    const Ctor = AnnotationComponent[upperFirst(type)];\n    if (Ctor) {\n      const theme = this.getAnnotationTheme(type);\n      const cfg = this.getAnnotationCfg(type, option, theme);\n      const annotation = new Ctor(cfg);\n\n      return {\n        component: annotation,\n        layer: this.isTop(cfg) ? LAYER.FORE : LAYER.BG,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.ANNOTATION,\n        extra: option,\n      };\n    }\n  }\n\n  // APIs for creating annotation component\n  public annotation(option: any) {\n    this.option.push(option);\n  }\n\n  /**\n   * 创建 Arc\n   * @param option\n   * @returns AnnotationController\n   */\n  public arc(option: ArcOption) {\n    this.annotation({\n      type: 'arc',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 image\n   * @param option\n   * @returns AnnotationController\n   */\n  public image(option: ImageOption) {\n    this.annotation({\n      type: 'image',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Line\n   * @param option\n   * @returns AnnotationController\n   */\n  public line(option: LineOption) {\n    this.annotation({\n      type: 'line',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Region\n   * @param option\n   * @returns AnnotationController\n   */\n  public region(option: RegionOption) {\n    this.annotation({\n      type: 'region',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Text\n   * @param option\n   * @returns AnnotationController\n   */\n  public text(option: TextOption) {\n    this.annotation({\n      type: 'text',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 DataMarker\n   * @param option\n   * @returns AnnotationController\n   */\n  public dataMarker(option: DataMarkerOption) {\n    this.annotation({\n      type: 'dataMarker',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 DataRegion\n   * @param option\n   * @returns AnnotationController\n   */\n  public dataRegion(option: DataRegionOption) {\n    this.annotation({\n      type: 'dataRegion',\n      ...option,\n    });\n  }\n\n  /**\n   * 创建 RegionFilter\n   * @param option\n   * @returns AnnotationController\n   */\n  public regionFilter(option: RegionFilterOption) {\n    this.annotation({\n      type: 'regionFilter',\n      ...option,\n    });\n  }\n  // end API\n\n  /**\n   * parse the point position to [x, y]\n   * @param p Position\n   * @returns { x, y }\n   */\n  private parsePosition(p: Position): Point {\n    const xScale = this.view.getXScale();\n    // 转成 object\n    const yScales = this.view.getScalesByDim('y');\n\n    const position: Position = isFunction(p) ? p.call(null, xScale, yScales) : p;\n\n    let x = 0;\n    let y = 0;\n\n    // 入参是 [24, 24] 这类时\n    if (isArray(position)) {\n      const [xPos, yPos] = position;\n      // 如果数据格式是 ['50%', '50%'] 的格式\n      // fix: 原始数据中可能会包含 'xxx5%xxx' 这样的数据，需要判断下 https://github.com/antvis/f2/issues/590\n      // @ts-ignore\n      if (isString(xPos) && xPos.indexOf('%') !== -1 && !isNaN(xPos.slice(0, -1))) {\n        return this.parsePercentPosition(position as [string, string]);\n      }\n\n      x = this.getNormalizedValue(xPos, xScale);\n      y = this.getNormalizedValue(yPos, Object.values(yScales)[0]);\n    } else if (!isNil(position)) {\n      // 入参是 object 结构，数据点\n      for (const key of keys(position)) {\n        const value = position[key];\n        if (key === xScale.field) {\n          x = this.getNormalizedValue(value, xScale);\n        }\n        if (yScales[key]) {\n          y = this.getNormalizedValue(value, yScales[key]);\n        }\n      }\n    }\n\n    return this.view.getCoordinate().convert({ x, y });\n  }\n\n  /**\n   * parse all the points between start and end\n   * @param start\n   * @param end\n   * @return Point[]\n   */\n  private getRegionPoints(start: Position | Data, end: Position | Data): Point[] {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getScalesByDim('y');\n    const yScale = Object.values(yScales)[0];\n    const xField = xScale.field;\n    const viewData = this.view.getData();\n    const startXValue = isArray(start) ? start[0] : start[xField];\n    const endXValue = isArray(end) ? end[0] : end[xField];\n    const arr = [];\n\n    let startIndex;\n    each(viewData, (item, idx) => {\n      if (item[xField] === startXValue) {\n        startIndex = idx;\n      }\n      if (idx >= startIndex) {\n        const point = this.parsePosition([item[xField], item[yScale.field]]);\n        if (point) {\n          arr.push(point);\n        }\n      }\n      if (item[xField] === endXValue) {\n        return false;\n      }\n    });\n\n    return arr;\n  }\n\n  /**\n   * parse the value position\n   * @param val\n   * @param scale\n   */\n  private getNormalizedValue(val: number | string, scale: Scale) {\n    let result: number;\n    let scaled: number;\n\n    switch (val) {\n      case 'start':\n        result = 0;\n        break;\n      case 'end':\n        result = 1;\n        break;\n      case 'median': {\n        scaled = scale.isCategory ? (scale.values.length - 1) / 2 : (scale.min + scale.max) / 2;\n        result = scale.scale(scaled);\n        break;\n      }\n      case 'min':\n      case 'max':\n        if (scale.isCategory) {\n          scaled = val === 'min' ? 0 : scale.values.length - 1;\n        } else {\n          scaled = scale[val];\n        }\n        result = scale.scale(scaled);\n        break;\n      default:\n        result = scale.scale(val);\n    }\n\n    return result;\n  }\n\n  /**\n   * parse percent position\n   * @param position\n   */\n  private parsePercentPosition(position: [string, string]): Point {\n    const xPercent = parseFloat(position[0]) / 100;\n    const yPercent = parseFloat(position[1]) / 100;\n    const coordinate = this.view.getCoordinate();\n    const { start, end } = coordinate;\n\n    const topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y),\n    };\n    const x = coordinate.getWidth() * xPercent + topLeft.x;\n    const y = coordinate.getHeight() * yPercent + topLeft.y;\n    return { x, y };\n  }\n\n  /**\n   * get coordinate bbox\n   */\n  private getCoordinateBBox() {\n    const coordinate = this.view.getCoordinate();\n    const { start, end } = coordinate;\n\n    const width = coordinate.getWidth();\n    const height = coordinate.getHeight();\n    const topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y),\n    };\n\n    return {\n      x: topLeft.x,\n      y: topLeft.y,\n      minX: topLeft.x,\n      minY: topLeft.y,\n      maxX: topLeft.x + width,\n      maxY: topLeft.y + height,\n      width,\n      height,\n    };\n  }\n\n  /**\n   * get annotation component config by different type\n   * @param type\n   * @param option 用户的配置\n   * @param theme\n   */\n  private getAnnotationCfg(type: string, option: any, theme: object): object {\n    const coordinate = this.view.getCoordinate();\n    let o = {};\n\n    if (isNil(option)) {\n      return null;\n    }\n\n    if (type === 'arc') {\n      const { start, end } = option as ArcOption;\n      const sp = this.parsePosition(start);\n      const ep = this.parsePosition(end);\n      const startAngle = getAngleByPoint(coordinate, sp);\n      let endAngle = getAngleByPoint(coordinate, ep);\n      if (startAngle > endAngle) {\n        endAngle = Math.PI * 2 + endAngle;\n      }\n\n      o = {\n        center: coordinate.getCenter(),\n        radius: getDistanceToCenter(coordinate, sp),\n        startAngle,\n        endAngle,\n      };\n    } else if (type === 'image') {\n      const { start, end } = option as ImageOption;\n      o = {\n        start: this.parsePosition(start),\n        end: this.parsePosition(end),\n        src: option.src,\n      };\n    } else if (type === 'line') {\n      const { start, end } = option as LineOption;\n      o = {\n        start: this.parsePosition(start),\n        end: this.parsePosition(end),\n        text: get(option, 'text', null),\n      };\n    } else if (type === 'region') {\n      const { start, end } = option as RegionPositionBaseOption;\n      o = {\n        start: this.parsePosition(start),\n        end: this.parsePosition(end),\n      };\n    } else if (type === 'text') {\n      const filteredData = this.view.getData();\n      const { position, content, ...rest } = option as TextOption;\n      let textContent = content;\n      if (isFunction(content)) {\n        textContent = content(filteredData);\n      }\n      o = {\n        ...this.parsePosition(position),\n        ...rest,\n        content: textContent,\n      };\n    } else if (type === 'dataMarker') {\n      const { position, point, line, text, autoAdjust, direction } = option as DataMarkerOption;\n      o = {\n        ...this.parsePosition(position),\n        coordinateBBox: this.getCoordinateBBox(),\n        point,\n        line,\n        text,\n        autoAdjust,\n        direction,\n      };\n    } else if (type === 'dataRegion') {\n      const { start, end, region, text, lineLength } = option as DataRegionOption;\n      o = {\n        points: this.getRegionPoints(start, end),\n        region,\n        text,\n        lineLength,\n      };\n    } else if (type === 'regionFilter') {\n      const { start, end, apply, color } = option as RegionFilterOption;\n      const geometries: Geometry[] = this.view.geometries;\n      const shapes = [];\n      const addShapes = (item?: IElement) => {\n        if (!item) {\n          return;\n        }\n        if (item.isGroup()) {\n          (item as IGroup).getChildren().forEach((child) => addShapes(child));\n        } else {\n          shapes.push(item);\n        }\n      };\n      each(geometries, (geom: Geometry) => {\n        if (apply) {\n          if (contains(apply, geom.type)) {\n            each(geom.elements, (elem: Element) => {\n              addShapes(elem.shape);\n            });\n          }\n        } else {\n          each(geom.elements, (elem: Element) => {\n            addShapes(elem.shape);\n          });\n        }\n      });\n      o = {\n        color,\n        shapes,\n        start: this.parsePosition(start),\n        end: this.parsePosition(end),\n      };\n    }\n    // 合并主题，用户配置优先级高于默认主题\n    const cfg = deepMix({}, theme, {\n      ...o,\n      top: option.top,\n      style: option.style,\n      offsetX: option.offsetX,\n      offsetY: option.offsetY,\n    });\n    cfg.container = this.getComponentContainer(cfg);\n    cfg.animate = this.view.getOptions().animate && cfg.animate && get(option, 'animate', cfg.animate); // 如果 view 关闭动画，则不执行\n    cfg.animateOption = deepMix({}, DEFAULT_ANIMATE_CFG, cfg.animateOption, option.animateOption);\n\n    return cfg;\n  }\n\n  /**\n   * is annotation render on top\n   * @param option\n   * @return whethe on top\n   */\n  private isTop(option: any): boolean {\n    return get(option, 'top', true);\n  }\n\n  /**\n   * get the container by option.top\n   * default is on top\n   * @param option\n   * @returns the container\n   */\n  private getComponentContainer(option: any) {\n    return this.isTop(option) ? this.foregroundContainer : this.backgroundContainer;\n  }\n\n  private getAnnotationTheme(type: string) {\n    return get(this.view.getTheme(), ['components', 'annotation', type], {});\n  }\n}\n","import { get, map } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Coordinate, Scale, Tick } from '../dependents';\n\n/**\n * @ignore\n * get the grid theme by type\n * @param theme\n * @param direction\n * @returns theme object\n */\nexport function getGridThemeCfg(theme: object, direction: DIRECTION): object {\n  return get(theme, ['components', 'axis', direction, 'grid'], {});\n}\n\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\nexport function getLineGridItems(coordinate: Coordinate, scale: Scale, dim: string, alignTick?: boolean) {\n  const items = [];\n  const ticks = scale.getTicks();\n  if (coordinate.isPolar) {\n    // 补全 ticks\n    ticks.push({\n      value: 1,\n      text: '',\n      tickValue: '',\n    });\n  }\n  ticks.reduce((preTick: Tick, currentTick: Tick, currentIndex) => {\n    const currentValue = currentTick.value;\n    if (alignTick) {\n      items.push({\n        points: [\n          coordinate.convert(dim === 'y' ? { x: 0, y: currentValue } : { x: currentValue, y: 0 }),\n          coordinate.convert(dim === 'y' ? { x: 1, y: currentValue } : { x: currentValue, y: 1 }),\n        ],\n      });\n    } else {\n      if (currentIndex) {\n        const preValue = preTick.value;\n        const middleValue = (preValue + currentValue) / 2;\n        items.push({\n          points: [\n            coordinate.convert(dim === 'y' ? { x: 0, y: middleValue } : { x: middleValue, y: 0 }),\n            coordinate.convert(dim === 'y' ? { x: 1, y: middleValue } : { x: middleValue, y: 1 }),\n          ],\n        });\n      }\n    }\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\nexport function getCircleGridItems(\n  coordinate: Coordinate,\n  xScale: Scale,\n  yScale: Scale,\n  alignTick: boolean,\n  dim: string\n) {\n  const count = xScale.values.length;\n  const items = [];\n  const ticks = yScale.getTicks();\n\n  ticks.reduce((preTick: Tick, currentTick: Tick) => {\n    const preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n    const currentValue = currentTick.value;\n    const middleValue = (preValue + currentValue) / 2;\n    if (dim === 'x') {\n      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n      items.push({\n        points: [\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 0,\n          }),\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 1,\n          }),\n        ],\n      });\n    } else {\n      items.push({\n        points: map(Array(count + 1), (__: any, idx: number) => {\n          return coordinate.convert({\n            x: idx / count,\n            y: alignTick ? currentValue : middleValue,\n          });\n        }),\n      });\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\nexport function showGrid(axisTheme: any, axisOption: any): boolean {\n  const userGrid = get(axisOption, 'grid');\n  if (userGrid === null) {\n    return false;\n  }\n\n  const themeGrid = get(axisTheme, 'grid');\n\n  return !(userGrid === undefined && themeGrid === null);\n}\n","import { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, IGroup, LineAxis, LineGrid, Scale } from '../../dependents';\nimport { AxisCfg, AxisOption, ComponentOption } from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\n\nimport {\n  getAxisDirection,\n  getAxisFactorByRegion,\n  getAxisRegion,\n  getAxisThemeCfg,\n  getAxisTitleText,\n  getCircleAxisCenterRadius,\n  isVertical,\n} from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport View from '../view';\nimport { Controller } from './base';\n\ntype Option = Record<string, AxisOption> | boolean;\n\ntype Cache = Map<string, ComponentOption>;\n\n// update 组件的时候，忽略的数据更新\nconst OMIT_CFG = ['container'];\n\n// 坐标轴默认动画配置\nconst AXIS_DEFAULT_ANIMATE_CFG = {\n  ...DEFAULT_ANIMATE_CFG,\n  appear: null,\n};\n\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\nexport default class Axis extends Controller<Option> {\n  /** the draw group of axis */\n  private axisContainer: IGroup;\n  private gridContainer: IGroup;\n\n  /** 使用 object 存储组件 */\n  private cache: Cache = new Map<string, ComponentOption>();\n\n  constructor(view: View) {\n    super(view);\n\n    // 先创建 gridContainer，将 grid 放到 axis 底层\n    this.gridContainer = this.view.getLayer(LAYER.BG).addGroup();\n    this.axisContainer = this.view.getLayer(LAYER.BG).addGroup();\n  }\n\n  public get name(): string {\n    return 'axis';\n  }\n\n  public init() {}\n\n  public render() {\n    this.update();\n  }\n\n  /**\n   * 更新组件布局，位置大小\n   */\n  public layout() {\n    const coordinate = this.view.getCoordinate();\n\n    each(this.getComponents(), (co: ComponentOption) => {\n      const { component, direction, type, extra } = co;\n      const { dim, scale, alignTick } = extra;\n\n      let updated;\n\n      if (type === COMPONENT_TYPE.AXIS) {\n        if (coordinate.isPolar) {\n          if (dim === 'x') {\n            updated = coordinate.isTransposed\n              ? getAxisRegion(coordinate, direction)\n              : getCircleAxisCenterRadius(coordinate);\n          } else if (dim === 'y') {\n            updated = coordinate.isTransposed\n              ? getCircleAxisCenterRadius(coordinate)\n              : getAxisRegion(coordinate, direction);\n          }\n        } else {\n          updated = getAxisRegion(coordinate, direction);\n        }\n      } else if (type === COMPONENT_TYPE.GRID) {\n        if (coordinate.isPolar) {\n          let items;\n          if (coordinate.isTransposed) {\n            items =\n              dim === 'x'\n                ? getCircleGridItems(coordinate, this.view.getYScales()[0], scale, alignTick, dim)\n                : getLineGridItems(coordinate, scale, dim, alignTick);\n          } else {\n            items =\n              dim === 'x'\n                ? getLineGridItems(coordinate, scale, dim, alignTick)\n                : getCircleGridItems(coordinate, this.view.getXScale(), scale, alignTick, dim);\n          }\n          updated = {\n            items,\n            // coordinate 更新之后，center 也变化了\n            center: this.view.getCoordinate().getCenter(),\n          };\n        } else {\n          updated = { items: getLineGridItems(coordinate, scale, dim, alignTick) };\n        }\n      }\n      component.update(updated);\n    });\n  }\n\n  /**\n   * 更新 axis 组件\n   */\n  public update() {\n    this.option = this.view.getOptions().axes;\n\n    const updatedCache = new Map<string, ComponentOption>();\n\n    this.updateXAxes(updatedCache);\n    this.updateYAxes(updatedCache);\n\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    const newCache = new Map<string, ComponentOption>();\n\n    this.cache.forEach((co: ComponentOption, key: string) => {\n      if (updatedCache.has(key)) {\n        newCache.set(key, co);\n      } else {\n        // 不存在，则是所有需要被销毁的组件\n        co.component.destroy();\n      }\n    });\n\n    // 更新缓存\n    this.cache = newCache;\n  }\n\n  public clear() {\n    super.clear();\n\n    this.cache.clear();\n    this.gridContainer.clear();\n    this.axisContainer.clear();\n  }\n\n  public destroy() {\n    super.destroy();\n\n    this.gridContainer.remove(true);\n    this.axisContainer.remove(true);\n  }\n\n  /**\n   * @override\n   */\n  public getComponents(): ComponentOption[] {\n    const co = [];\n\n    this.cache.forEach((value: ComponentOption) => {\n      co.push(value);\n    });\n\n    return co;\n  }\n\n  /**\n   * 更新 x axis\n   * @param updatedCache\n   */\n  private updateXAxes(updatedCache: Cache) {\n    // x axis\n    const scale = this.view.getXScale();\n\n    if (!scale || scale.isIdentity) {\n      return;\n    }\n\n    const xAxisOption = getAxisOption(this.option, scale.field);\n    if (xAxisOption === false) {\n      return;\n    }\n\n    const direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n    const layer = LAYER.BG;\n    const dim = 'x';\n\n    const coordinate = this.view.getCoordinate();\n\n    const axisId = this.getId('axis', scale.field);\n    const gridId = this.getId('grid', scale.field);\n\n    if (coordinate.isRect) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else if (coordinate.isPolar) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = coordinate.isTransposed\n          ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS)\n          : this.getCircleAxisCfg(scale, xAxisOption, direction);\n\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            // 默认不渲染转置极坐标下的坐标轴\n            return;\n          } else {\n            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n            axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n        }\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = coordinate.isTransposed\n          ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim)\n          : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            return;\n          } else {\n            grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n          grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n        }\n\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else {\n      // helix and other, do not draw axis\n    }\n  }\n\n  private updateYAxes(updatedCache: Cache) {\n    // y axes\n    const yScales = this.view.getYScales();\n\n    each(yScales, (scale: Scale, idx: number) => {\n      // @ts-ignore\n      if (!scale || scale.isIdentity) {\n        return;\n      }\n      const { field } = scale;\n      const yAxisOption = getAxisOption(this.option, field);\n\n      if (yAxisOption !== false) {\n        const layer = LAYER.BG;\n        const dim = 'y';\n        const axisId = this.getId('axis', field);\n        const gridId = this.getId('grid', field);\n\n        const coordinate = this.view.getCoordinate();\n\n        if (coordinate.isRect) {\n          const direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT);\n\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = this.getLineAxisCfg(scale, yAxisOption, direction);\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            axis = this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = this.getLineGridCfg(scale, yAxisOption, direction, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            grid = this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else if (coordinate.isPolar) {\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = coordinate.isTransposed\n              ? this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE)\n              : this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS);\n\n            // @ts-ignore\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                axis = this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              axis = this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = coordinate.isTransposed\n              ? this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim)\n              : this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                grid = this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              grid = this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else {\n          // helix and other, do not draw axis\n        }\n      }\n    });\n  }\n\n  /**\n   * 创建 line axis\n   * @param scale\n   * @param option\n   * @param layer\n   * @param direction\n   * @param dim\n   */\n  private createLineAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    // axis\n    const axis = {\n      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n      layer,\n      direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createLineGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getLineGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new LineGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n      grid.component.init();\n\n      return grid;\n    }\n  }\n\n  private createCircleAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const axis = {\n      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n      layer,\n      direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createCircleGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getCircleGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new CircleGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n\n      grid.component.init();\n      return grid;\n    }\n  }\n\n  /**\n   * generate line axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return line axis cfg\n   */\n  private getLineAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION): object {\n    const container = this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n    const region = getAxisRegion(coordinate, direction);\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix({ title: { style: { text: titleText } } }, axisOption)\n      : axisOption;\n\n    const cfg = deepMix(\n      {\n        container,\n        ...region,\n        ticks: scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value })),\n        verticalFactor: coordinate.isPolar\n          ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1\n          : getAxisFactorByRegion(region, coordinate.getCenter()),\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animateOption = animateOption;\n    cfg.animate = animate;\n\n    // 计算 verticalLimitLength\n    const isAxisVertical = isVertical(region);\n    // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n    const verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n    if (verticalLimitLength <= 1) {\n      // 配置的相对值，相对于画布\n      const canvasWidth = this.view.getCanvas().get('width');\n      const canvasHeight = this.view.getCanvas().get('height');\n      cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n    }\n\n    return cfg;\n  }\n\n  /**\n   * generate line grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @param dim\n   * @return line grid cfg\n   */\n  private getLineGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string): object {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridCfg = deepMix(\n      {\n        container: this.gridContainer,\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n\n    return gridCfg;\n  }\n\n  /**\n   * generate circle axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle axis cfg\n   */\n  private getCircleAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION): object {\n    const container = this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n\n    const ticks = scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value }));\n    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n      ticks.pop();\n    }\n\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix({ title: { style: { text: titleText } } }, axisOption)\n      : axisOption;\n    const cfg = deepMix(\n      {\n        container,\n        ...getCircleAxisCenterRadius(this.view.getCoordinate()),\n        ticks,\n        verticalFactor: 1,\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animate = animate;\n    cfg.animateOption = animateOption;\n\n    return cfg;\n  }\n\n  /**\n   * generate circle grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle grid cfg\n   */\n  private getCircleGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string): object {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n    const gridCfg = deepMix(\n      {\n        container: this.gridContainer,\n        center: this.view.getCoordinate().getCenter(),\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    const alignTick = get(gridCfg, 'alignTick', true);\n    const verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    return gridCfg;\n  }\n\n  private getId(name: string, key: string): string {\n    const coordinate = this.view.getCoordinate();\n    // 坐标系类型也作为组件的 key\n    return `${name}-${key}-${coordinate.type}`;\n  }\n\n  private getAnimateCfg(cfg) {\n    return {\n      animate: this.view.getOptions().animate && get(cfg, 'animate'), // 如果 view 关闭动画，则不执行动画\n      animateOption:\n        cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG,\n    };\n  }\n}\n","import { DIRECTION } from '../constant';\nimport { Coordinate } from '../dependents';\nimport { Position } from '../interface';\nimport { BBox } from './bbox';\n\n/**\n * @ignore\n * 方位常量转实际的 bbox 位置大小\n * @param parentBBox\n * @param bbox\n * @param direction\n */\nexport function directionToPosition(parentBBox: BBox, bbox: BBox, direction: DIRECTION): Position {\n  if (direction === DIRECTION.TOP) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.minY];\n  }\n  if (direction === DIRECTION.BOTTOM) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.maxY - bbox.height];\n  }\n  if (direction === DIRECTION.LEFT) {\n    return [parentBBox.minX, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n  if (direction === DIRECTION.RIGHT) {\n    return [parentBBox.maxX - bbox.width, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n\n  if (direction === DIRECTION.TOP_LEFT || direction === DIRECTION.LEFT_TOP) {\n    return [parentBBox.tl.x, parentBBox.tl.y];\n  }\n  if (direction === DIRECTION.TOP_RIGHT || direction === DIRECTION.RIGHT_TOP) {\n    return [parentBBox.tr.x - bbox.width, parentBBox.tr.y];\n  }\n  if (direction === DIRECTION.BOTTOM_LEFT || direction === DIRECTION.LEFT_BOTTOM) {\n    return [parentBBox.bl.x, parentBBox.bl.y - bbox.height];\n  }\n  if (direction === DIRECTION.BOTTOM_RIGHT || direction === DIRECTION.RIGHT_BOTTOM) {\n    return [parentBBox.br.x - bbox.width, parentBBox.br.y - bbox.height];\n  }\n\n  return [0, 0];\n}\n\n/**\n * get direction after coordinate transpose\n * @param direction\n * @param coordinate\n * @returns direction after transpose or not\n */\nfunction getTransposedDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  if (coordinate.isTransposed) {\n    switch (direction) {\n      case DIRECTION.BOTTOM:\n        return DIRECTION.LEFT;\n      case DIRECTION.LEFT:\n        return DIRECTION.BOTTOM;\n      case DIRECTION.RIGHT:\n        return DIRECTION.TOP;\n      case DIRECTION.TOP:\n        return DIRECTION.RIGHT;\n    }\n  }\n  return direction;\n}\n\nfunction reflectX(direct: DIRECTION): DIRECTION {\n  if (direct === DIRECTION.LEFT) {\n    return DIRECTION.RIGHT;\n  }\n\n  if (direct === DIRECTION.RIGHT) {\n    return DIRECTION.LEFT;\n  }\n\n  return direct;\n}\n\nfunction reflectY(direct: DIRECTION): DIRECTION {\n  if (direct === DIRECTION.TOP) {\n    return DIRECTION.BOTTOM;\n  }\n  if (direct === DIRECTION.BOTTOM) {\n    return DIRECTION.TOP;\n  }\n\n  return direct;\n}\n\n/**\n * get direction after coordinate.scale\n * @param direction\n * @param coordinate\n */\nfunction getScaleDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  const x = coordinate.matrix[0];\n  const y = coordinate.matrix[4];\n\n  let d = direction;\n  if (x < 0) {\n    d = reflectX(d);\n  }\n  if (y < 0) {\n    d = reflectY(d);\n  }\n  return d;\n}\n\n/**\n *\n * @param direction\n * @param coordinate\n */\nfunction getReflectDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  let d = direction;\n\n  if (coordinate.isReflect('x')) {\n    d = reflectX(d);\n  }\n  if (coordinate.isReflect('y')) {\n    d = reflectY(d);\n  }\n\n  return d;\n}\n\n/**\n * @ignore\n * get direction after coordinate translate\n * @param direction\n * @param coordinate\n */\nexport function getTranslateDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  let d = direction;\n  d = getTransposedDirection(d, coordinate);\n  d = getScaleDirection(d, coordinate);\n  d = getReflectDirection(d, coordinate);\n\n  return d;\n}\n","import { Attribute } from '../dependents';\n\n/**\n * @ignore\n * get the mapping value by attribute, if mapping value is nil, return def\n * @param attr\n * @param value\n * @param def\n * @returns get mapping value\n */\nexport function getMappingValue(attr: Attribute, value: any, def: string): string {\n  if (!attr) {\n    return def;\n  }\n\n  let r;\n  // 多参数映射，阻止程序报错\n  if (attr.callback && attr.callback.length > 1) {\n    const restArgs = Array(attr.callback.length - 1).fill('');\n    r = attr.mapping(value, ...restArgs).join('');\n  } else {\n    r = attr.mapping(value).join('');\n  }\n\n  return r || def;\n}\n","import { deepMix, isString } from '@antv/util';\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { Attribute, Tick } from '../dependents';\nimport Geometry from '../geometry/base';\nimport { LegendItem } from '../interface';\nimport { getMappingValue } from './attr';\nimport { MarkerSymbols } from './marker';\n\nfunction setMarkerSymbol(marker) {\n  const symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction: DIRECTION): 'vertical' | 'horizontal' {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param userMarker\n * @returns legend items\n */\nexport function getLegendItems(\n  view: View,\n  geometry: Geometry,\n  attr: Attribute,\n  themeMarker: object,\n  userMarker\n): any[] {\n  const scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    const field = scale.field;\n    const colorAttr = geometry.getAttribute('color');\n    const shapeAttr = geometry.getAttribute('shape');\n    const defaultColor = view.getTheme().defaultColor;\n    const isInPolar = geometry.coordinate.isPolar;\n\n    return scale.getTicks().map((tick: Tick) => {\n      const { text, value: scaleValue } = tick;\n      const name = text;\n      const value = scale.invert(scaleValue);\n\n      // 通过过滤图例项的数据，来看是否 unchecked\n      const unchecked = view.filterFieldData(field, [{ [field]: value }]).length === 0;\n\n      // @ts-ignore\n      const color = getMappingValue(colorAttr, value, defaultColor);\n      const shape = getMappingValue(shapeAttr, value, 'point');\n      let marker = geometry.getShapeMarker(shape, {\n        color,\n        isInPolar,\n      });\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, userMarker);\n\n      setMarkerSymbol(marker);\n\n      return { id: value, name, value, marker, unchecked };\n    });\n  }\n  return [];\n}\n\n/**\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker: object, userMarker: object, customItems: LegendItem[]) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map((item: LegendItem) => {\n    const marker = deepMix({}, themeMarker, userMarker, item.marker);\n    setMarkerSymbol(marker);\n\n    item.marker = marker;\n    return item;\n  });\n}\n","import { deepMix, each, find, get, head, isBoolean, last } from '@antv/util';\n\nimport { COMPONENT_MAX_VIEW_PERCENTAGE, COMPONENT_TYPE, DIRECTION, LAYER } from '../../constant';\nimport { Attribute, CategoryLegend, ContinuousLegend, GroupComponent, IGroup, Scale, Tick } from '../../dependents';\nimport { ComponentOption, LegendCfg, LegendOption, LooseObject } from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate';\nimport Geometry from '../../geometry/base';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { omit } from '../../util/helper';\nimport { getCustomLegendItems, getLegendItems, getLegendLayout } from '../../util/legend';\nimport { getName } from '../../util/scale';\nimport View from '../view';\nimport { Controller } from './base';\n\ntype Option = Record<string, LegendOption> | boolean;\n\ntype DoEach = (geometry: Geometry, attr: Attribute, scale: Scale) => void;\n\n/**\n * 从配置中获取单个字段的 legend 配置\n * @param legends\n * @param field\n * @returns the option of one legend field\n */\nfunction getLegendOption(legends: Record<string, LegendOption> | boolean, field: string) {\n  if (isBoolean(legends)) {\n    return legends === false ? false : {};\n  }\n\n  return get(legends, [field], legends);\n}\n\nfunction getDirection(legendOption: any): DIRECTION {\n  return get(legendOption, 'position', DIRECTION.BOTTOM);\n}\n\n/**\n * @ignore\n * legend Controller\n */\nexport default class Legend extends Controller<Option> {\n  /** the draw group of axis */\n  private container: IGroup;\n  /** 用于多个 legend 布局的 bbox */\n  private layoutBBox: BBox;\n\n  constructor(view: View) {\n    super(view);\n\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n  }\n\n  public get name(): string {\n    return 'legend';\n  }\n\n  public init() {}\n\n  /**\n   * render the legend component by legend options\n   */\n  public render() {\n    this.option = this.view.getOptions().legends;\n\n    const doEachLegend = (geometry: Geometry, attr: Attribute, scale: Scale) => {\n      const legend = this.createFieldLegend(geometry, attr, scale);\n\n      if (legend) {\n        (legend.component as GroupComponent).init();\n        this.components.push(legend);\n      }\n    };\n\n    // 全局自定义图例\n    if (get(this.option, 'custom')) {\n      const component = this.createCustomLegend(undefined, undefined, undefined, this.option as LegendCfg);\n      if (component) {\n        component.init();\n\n        const layer = LAYER.FORE;\n        const direction = getDirection(this.option);\n\n        this.components.push({\n          id: 'global-custom',\n          component,\n          layer,\n          direction,\n          type: COMPONENT_TYPE.LEGEND,\n          extra: undefined,\n        });\n      }\n    } else {\n      // 遍历处理每一个创建逻辑\n      this.loopLegends(doEachLegend);\n    }\n  }\n\n  /**\n   * layout legend\n   * 计算出 legend 的 direction 位置 x, y\n   */\n  public layout() {\n    this.layoutBBox = this.view.viewBBox;\n    const margin = get(this.view.getTheme(), ['components', 'legend', 'margin'], [0, 0, 0, 0]);\n\n    each(this.components, (co: ComponentOption) => {\n      const { component, direction } = co;\n      const layout = getLegendLayout(direction);\n      const maxSize = this.getCategoryLegendSizeCfg(layout);\n\n      const maxWidth = component.get('maxWidth');\n      const maxHeight = component.get('maxHeight');\n\n      // 先更新 maxSize，更新 layoutBBox，以便计算正确的 x y\n      component.update({\n        maxWidth: Math.min(maxSize.maxWidth, maxWidth || 0),\n        maxHeight: Math.min(maxSize.maxHeight, maxHeight || 0),\n      });\n\n      const bboxObject = component.getLayoutBBox(); // 这里只需要他的 width、height 信息做位置调整\n      const bbox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n\n      const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, direction);\n      const [x2, y2] = directionToPosition(this.layoutBBox, bbox, direction);\n\n      let x = 0;\n      let y = 0;\n\n      // 因为 legend x y 要和 coordinateBBox 对齐，所以要做一个简单的判断\n      if (direction.startsWith('top') || direction.startsWith('bottom')) {\n        x = x1;\n        y = y2;\n      } else {\n        x = x2;\n        y = y1;\n      }\n\n      // 加上 margin\n      if (direction.indexOf('left') >= 0) {\n        x += margin[3];\n      }\n      if (direction.indexOf('right') >= 0) {\n        x -= margin[1];\n      }\n      if (direction.indexOf('top') >= 0) {\n        y += margin[0];\n      }\n      if (direction.indexOf('bottom') >= 0) {\n        y -= margin[2];\n      }\n\n      // 更新位置\n      component.update({\n        x,\n        y,\n      });\n\n      this.layoutBBox = this.layoutBBox.cut(bbox, direction);\n    });\n  }\n\n  /**\n   * legend 的更新逻辑\n   */\n  public update() {\n    this.option = this.view.getOptions().legends;\n\n    // 已经处理过的 legend\n    const updated: Record<string, true> = {};\n\n    const eachLegend = (geometry: Geometry, attr: Attribute, scale: Scale) => {\n      const id = this.getId(scale.field);\n\n      const existCo = this.getComponentById(id);\n\n      // 存在则 update\n      if (existCo) {\n        let cfg;\n        const legendOption = getLegendOption(this.option, scale.field);\n\n        // if the legend option is not false, means legend should be created.\n        if (legendOption !== false) {\n          if (get(legendOption, 'custom')) {\n            cfg = this.getCategoryCfg(geometry, attr, scale, legendOption, true);\n          } else {\n            if (scale.isLinear) {\n              // linear field, create continuous legend\n              cfg = this.getContinuousCfg(geometry, attr, scale, legendOption);\n            } else if (scale.isCategory) {\n              // category field, create category legend\n              cfg = this.getCategoryCfg(geometry, attr, scale, legendOption);\n            }\n          }\n        }\n\n        // 如果 cfg 为空，则不在 updated 标记，那么会在后面逻辑中删除\n        if (cfg) {\n          // omit 掉一些属性，比如 container 等\n          omit(cfg, ['container']);\n\n          existCo.direction = getDirection(legendOption);\n\n          existCo.component.update(cfg);\n\n          // 标记为新的\n          updated[id] = true;\n        }\n      } else {\n        // 不存在则 create\n        const legend = this.createFieldLegend(geometry, attr, scale);\n\n        if (legend) {\n          (legend.component as GroupComponent).init();\n          this.components.push(legend);\n\n          // 标记为新的\n          updated[id] = true;\n        }\n      }\n    };\n\n    // 全局自定义图例\n    if (get(this.option, 'custom')) {\n      const id = 'global-custom';\n      const existCo = this.getComponentById(id);\n      if (existCo) {\n        const customCfg = this.getCategoryCfg(undefined, undefined, undefined, this.option, true);\n        omit(customCfg, ['container']);\n        existCo.component.update(customCfg);\n\n        updated[id] = true;\n      } else {\n        const component = this.createCustomLegend(undefined, undefined, undefined, this.option as LegendCfg);\n        if (component) {\n          component.init();\n\n          const layer = LAYER.FORE;\n          const direction = getDirection(this.option);\n\n          this.components.push({\n            id,\n            component,\n            layer,\n            direction,\n            type: COMPONENT_TYPE.LEGEND,\n            extra: undefined,\n          });\n\n          // 标记为更新\n          updated[id] = true;\n        }\n      }\n    } else {\n      // 遍历处理每一个创建逻辑\n      this.loopLegends(eachLegend);\n    }\n\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    const components = [];\n    each(this.getComponents(), (co: ComponentOption) => {\n      if (updated[co.id]) {\n        components.push(co);\n      } else {\n        co.component.destroy();\n      }\n    });\n\n    // 更新当前已有的 components\n    this.components = components;\n  }\n\n  public clear() {\n    super.clear();\n    this.container.clear();\n  }\n\n  public destroy() {\n    super.destroy();\n\n    this.container.remove(true);\n  }\n\n  /**\n   * 递归获取所有的 Geometry\n   */\n  private getGeometries(view: View): Geometry[] {\n    let geometries = view.geometries;\n\n    each(view.views, (v: View) => {\n      geometries = geometries.concat(this.getGeometries(v));\n    });\n\n    return geometries;\n  }\n\n  /**\n   * 遍历 Geometry，处理 legend 逻辑\n   * @param doEach 每个 loop 中的处理方法\n   */\n  private loopLegends(doEach: DoEach) {\n    const isRootView = this.view.getRootView() === this.view;\n    // 非根 view，不处理 legend\n    if (!isRootView) {\n      return;\n    }\n\n    // 递归 view 中所有的 Geometry，进行创建 legend\n    const geometries = this.getGeometries(this.view);\n\n    const looped: Record<string, true> = {}; // 防止一个字段创建两个 legend\n\n    each(geometries, (geometry: Geometry) => {\n      const attributes = geometry.getGroupAttributes();\n\n      each(attributes, (attr: Attribute) => {\n        const scale = attr.getScale(attr.type);\n        // 如果在视觉通道上映射常量值，如 size(2) shape('circle') 不创建 legend\n        if (!scale || scale.type === 'identity' || looped[scale.field]) {\n          return;\n        }\n\n        doEach(geometry, attr, scale);\n\n        looped[scale.field] = true;\n      });\n    });\n  }\n\n  /**\n   * 创建一个 legend\n   * @param geometry\n   * @param attr\n   * @param scale\n   */\n  private createFieldLegend(geometry: Geometry, attr: Attribute, scale: Scale): ComponentOption {\n    let component;\n\n    const legendOption = getLegendOption(this.option, scale.field);\n    const layer = LAYER.FORE;\n    const direction = getDirection(legendOption);\n\n    // if the legend option is not false, means legend should be created.\n    if (legendOption !== false) {\n      if (get(legendOption, 'custom')) {\n        component = this.createCustomLegend(geometry, attr, scale, legendOption);\n      } else {\n        if (scale.isLinear) {\n          // linear field, create continuous legend\n          component = this.createContinuousLegend(geometry, attr, scale, legendOption);\n        } else if (scale.isCategory) {\n          // category field, create category legend\n          component = this.createCategoryLegend(geometry, attr, scale, legendOption);\n        }\n      }\n    }\n\n    if (component) {\n      component.set('field', scale.field);\n\n      return {\n        id: this.getId(scale.field),\n        component,\n        layer,\n        direction,\n        type: COMPONENT_TYPE.LEGEND,\n        extra: { scale },\n      };\n    }\n  }\n\n  /**\n   * 自定义图例使用 category 图例去渲染\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private createCustomLegend(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: LegendCfg) {\n    // 直接使用 分类图例渲染\n    const cfg = this.getCategoryCfg(geometry, attr, scale, legendOption, true);\n    return new CategoryLegend(cfg);\n  }\n\n  /**\n   * 创建连续图例\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private createContinuousLegend(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: any) {\n    const cfg = this.getContinuousCfg(geometry, attr, scale, legendOption);\n    return new ContinuousLegend(cfg);\n  }\n\n  /**\n   * 创建分类图例\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private createCategoryLegend(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: any) {\n    const cfg = this.getCategoryCfg(geometry, attr, scale, legendOption);\n    return new CategoryLegend(cfg);\n  }\n\n  /**\n   * 获得连续图例的配置\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private getContinuousCfg(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: any): object {\n    const ticks = scale.getTicks();\n\n    const containMin = find(ticks, (tick: Tick) => tick.value === 0);\n    const containMax = find(ticks, (tick: Tick) => tick.value === 1);\n    const items = ticks.map((tick: Tick) => {\n      const { value, tickValue } = tick;\n      const attrValue = attr.mapping(scale.invert(value)).join('');\n\n      return {\n        value: tickValue,\n        attrValue,\n        color: attrValue,\n        scaleValue: value,\n      };\n    });\n\n    if (!containMin) {\n      items.push({\n        value: scale.min,\n        attrValue: attr.mapping(scale.invert(0)).join(''),\n        color: attr.mapping(scale.invert(0)).join(''),\n        scaleValue: 0,\n      });\n    }\n    if (!containMax) {\n      items.push({\n        value: scale.max,\n        attrValue: attr.mapping(scale.invert(1)).join(''),\n        color: attr.mapping(scale.invert(1)).join(''),\n        scaleValue: 1,\n      });\n    }\n\n    // 排序\n    items.sort((a: any, b: any) => a.value - b.value);\n\n    // 跟 attr 相关的配置\n    // size color 区别的配置\n    const attrLegendCfg: LooseObject = {\n      min: head(items).value,\n      max: last(items).value,\n      colors: [],\n      rail: {\n        type: attr.type,\n      },\n      track: {},\n    };\n\n    if (attr.type === 'size') {\n      attrLegendCfg.track = {\n        style: {\n          // size 的选中前景色，对于 color，则直接使用 color 标识\n          // @ts-ignore\n          fill: attr.type === 'size' ? this.view.getTheme().defaultColor : undefined,\n        },\n      };\n    }\n\n    if (attr.type === 'color') {\n      attrLegendCfg.colors = items.map((item) => item.attrValue);\n    }\n\n    const container = this.container;\n    // if position is not set, use top as default\n    const direction = getDirection(legendOption);\n\n    const layout = getLegendLayout(direction);\n\n    let title = get(legendOption, 'title');\n    if (title) {\n      title = deepMix(\n        {\n          text: getName(scale),\n        },\n        title\n      );\n    }\n\n    // 基础配置，从当前数据中读到的配置\n    attrLegendCfg.container = container;\n    attrLegendCfg.layout = layout;\n    attrLegendCfg.title = title;\n    attrLegendCfg.animateOption = DEFAULT_ANIMATE_CFG;\n    // @ts-ignore\n    return this.mergeLegendCfg(attrLegendCfg, legendOption, 'continuous');\n  }\n\n  /**\n   * 获取分类图例的配置项\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param custom\n   * @param legendOption\n   */\n  private getCategoryCfg(\n    geometry: Geometry,\n    attr: Attribute,\n    scale: Scale,\n    legendOption: any,\n    custom?: boolean\n  ): object {\n    const container = this.container;\n    // if position is not set, use top as default\n    const direction = get(legendOption, 'position', DIRECTION.BOTTOM);\n\n    // the default marker style\n    const themeMarker = get(this.view.getTheme(), ['components', 'legend', direction, 'marker']);\n    const userMarker = get(legendOption, 'marker');\n    const layout = getLegendLayout(direction);\n\n    const items = custom\n      ? getCustomLegendItems(themeMarker, userMarker, legendOption.items)\n      : getLegendItems(this.view, geometry, attr, themeMarker, userMarker);\n\n    let title = get(legendOption, 'title');\n    if (title) {\n      title = deepMix(\n        {\n          text: scale ? getName(scale) : '',\n        },\n        title\n      );\n    }\n\n    const baseCfg: LooseObject = this.getCategoryLegendSizeCfg(layout);\n    baseCfg.container = container;\n    baseCfg.layout = layout;\n    baseCfg.items = items;\n    baseCfg.title = title;\n    baseCfg.animateOption = DEFAULT_ANIMATE_CFG;\n\n    const categoryCfg = this.mergeLegendCfg(baseCfg, legendOption, direction);\n    if (categoryCfg.reversed) {\n      // 图例项需要逆序\n      categoryCfg.items.reverse();\n    }\n\n    const maxItemWidth = get(categoryCfg, 'maxItemWidth');\n    if (maxItemWidth && maxItemWidth <= 1) {\n      // 转换成像素值\n      categoryCfg.maxItemWidth = this.view.viewBBox.width * maxItemWidth;\n    }\n\n    return categoryCfg;\n  }\n\n  /**\n   * get legend config, use option > suggestion > theme\n   * @param baseCfg\n   * @param legendOption\n   * @param direction\n   */\n  private mergeLegendCfg(baseCfg: object, legendOption: LegendOption, direction: DIRECTION) {\n    const position = direction.split('-')[0];\n    const themeObject = get(this.view.getTheme(), ['components', 'legend', position], {});\n\n    return deepMix({}, themeObject, baseCfg, legendOption);\n  }\n\n  /**\n   * 生成 id\n   * @param key\n   */\n  private getId(key: string): string {\n    return `${this.name}-${key}`;\n  }\n\n  /**\n   * 根据 id 来获取组件\n   * @param id\n   */\n  private getComponentById(id: string): ComponentOption {\n    return find(this.components, (co) => co.id === id);\n  }\n\n  private getCategoryLegendSizeCfg(layout: 'horizontal' | 'vertical') {\n    const { width: vw, height: vh } = this.view.viewBBox;\n    // 目前 legend 的布局是以 viewBBox 为参照\n    // const { width: cw, height: ch } = this.view.coordinateBBox;\n    return layout === 'vertical'\n      ? {\n          maxWidth: vw * COMPONENT_MAX_VIEW_PERCENTAGE,\n          maxHeight: vh,\n        }\n      : {\n          maxWidth: vw,\n          maxHeight: vh * COMPONENT_MAX_VIEW_PERCENTAGE,\n        };\n  }\n}\n","import { deepMix, get, isObject, size } from '@antv/util';\nimport { COMPONENT_TYPE, DIRECTION, LAYER } from '../../constant';\nimport { IGroup, Slider as SliderComponent, TrendCfg } from '../../dependents';\nimport { ComponentOption, Datum } from '../../interface';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { isBetween, omit } from '../../util/helper';\nimport View from '../view';\nimport { Controller } from './base';\n\nexport type SliderFormatterType = (val: any, datum: Datum, idx: number) => any;\n/** Slider 配置 */\nexport interface SliderOption {\n  /** slider 高度 */\n  readonly height?: number;\n\n  /** 滑块背景区域配置 */\n  readonly trendCfg?: TrendCfg;\n  /** 滑块背景样式 */\n  readonly backgroundStyle?: any;\n  /** 滑块前景样式 */\n  readonly foregroundStyle?: any;\n  /** 滑块两个操作块样式 */\n  readonly handlerStyle?: any;\n  /** 文本样式 */\n  readonly textStyle?: any;\n  /** 允许滑动位置的最小值 */\n  readonly minLimit?: number;\n  /** 允许滑动位置的最大值 */\n  readonly maxLimit?: number;\n  /** 滑块初始化的起始位置 */\n  readonly start?: number;\n  /** 滑块初始化的结束位置 */\n  readonly end?: number;\n  /** 滑块文本格式化函数 */\n  formatter?: SliderFormatterType;\n}\n\ntype Option = SliderOption | boolean;\n\n/**\n * @ignore\n * slider Controller\n */\nexport default class Slider extends Controller<Option> {\n  private slider: ComponentOption;\n  private container: IGroup;\n\n  constructor(view: View) {\n    super(view);\n\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n  }\n\n  get name(): string {\n    return 'slider';\n  }\n\n  /**\n   * 初始化\n   */\n  public init() {}\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().slider;\n\n    if (this.option) {\n      if (this.slider) {\n        // exist, update\n        this.slider = this.updateSlider();\n      } else {\n        // not exist, create\n        this.slider = this.createSlider();\n        // 监听事件，绑定交互\n        this.slider.component.on('sliderchange', this.onValueChanged);\n      }\n      // changeData 的时候同样需要更新\n      // 设置初始的 text\n      const min = this.slider.component.get('start') || 0;\n      const max = this.slider.component.get('end') || 1;\n\n      this.updateMinMaxText(min, max);\n    } else {\n      if (this.slider) {\n        // exist, destroy\n        this.slider.component.destroy();\n        this.slider = undefined;\n      } else {\n        // do nothing\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.slider) {\n      const width = this.view.coordinateBBox.width;\n      // 获取组件的 layout bbox\n      const bboxObject = this.slider.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height);\n\n      const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n      const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n\n      // 默认放在 bottom\n      this.slider.component.update({\n        x: x2,\n        y: y1,\n        width,\n      });\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  /**\n   * 创建 slider 组件\n   */\n  private createSlider(): ComponentOption {\n    const cfg = this.getSliderCfg();\n    // 添加 slider 组件\n    const component = new SliderComponent({\n      container: this.container,\n      ...cfg,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: DIRECTION.BOTTOM,\n      type: COMPONENT_TYPE.OTHER,\n    };\n  }\n\n  /**\n   * 更新配置\n   */\n  private updateSlider() {\n    const cfg = this.getSliderCfg();\n    omit(cfg, ['x', 'y', 'width', 'start', 'end', 'minText', 'maxText']);\n\n    this.slider.component.update(cfg);\n\n    return this.slider;\n  }\n\n  /**\n   * 生成 slider 配置\n   */\n  private getSliderCfg() {\n    if (isObject(this.option)) {\n      // 用户配置的数据，优先级更高\n      const trendCfg = {\n        data: this.getData(),\n        ...get(this.option, 'trendCfg', {}),\n      };\n\n      // 初始的位置大小信息\n      const x = 0;\n      const y = 0;\n      const width = this.view.coordinateBBox.width;\n\n      // 因为有样式，所以深层覆盖\n      const cfg = deepMix({}, { x, y, width }, this.option);\n\n      // trendCfg 因为有数据数组，所以使用浅替换\n      return { ...cfg, trendCfg };\n    }\n\n    return {};\n  }\n\n  /**\n   * 从 view 中获取数据，缩略轴使用全量的数据\n   */\n  private getData(): number[] {\n    const data = this.view.getOptions().data;\n    const [yScale] = this.view.getYScales();\n    const groupScales = this.view.getGroupScales();\n    if (groupScales.length) {\n      const { field, ticks } = groupScales[0];\n      return data.reduce((pre, cur) => {\n        if (cur[field] === ticks[0]) {\n          pre.push(cur[yScale.field] as number);\n        }\n        return pre;\n      }, []) as number[];\n    }\n\n    return data.map((datum) => datum[yScale.field] || 0);\n  }\n\n  /**\n   * 滑块滑动的时候出发\n   * @param v\n   */\n  private onValueChanged = (v: any) => {\n    const [min, max] = v;\n\n    this.updateMinMaxText(min, max);\n\n    this.view.render(true);\n  };\n\n  private updateMinMaxText(min: number, max: number) {\n    const data = this.view.getOptions().data;\n    const xScale = this.view.getXScale();\n    const dataSize = size(data);\n\n    if (!xScale || !dataSize) {\n      return;\n    }\n\n    const x = xScale.field;\n\n    // x 轴刻度\n    const xTicks = data.reduce((pre, datum) => {\n      if (!pre.includes(datum[x])) pre.push(datum[x]);\n      return pre;\n    }, []);\n\n    const xTickCount = size(xTicks);\n\n    const minIndex = Math.floor(min * (xTickCount - 1));\n    const maxIndex = Math.floor(max * (xTickCount - 1));\n\n    let minText = get(xTicks, [minIndex]);\n    let maxText = get(xTicks, [maxIndex]);\n\n    const formatter = this.getSliderCfg().formatter as SliderFormatterType;\n    if (formatter) {\n      minText = formatter(minText, data[minIndex], minIndex);\n      maxText = formatter(maxText, data[maxIndex], maxIndex);\n    }\n\n    // 更新文本\n    this.slider.component.update({\n      minText,\n      maxText,\n      start: min,\n      end: max,\n    });\n\n    // 增加 x 轴的过滤器\n    this.view.filter(xScale.field, (value: any, datum: Datum) => {\n      const idx: number = xTicks.indexOf(value);\n      return idx > -1 ? isBetween(idx, minIndex, maxIndex) : true;\n    });\n  }\n\n  /**\n   * 覆写父类方法\n   */\n  public getComponents() {\n    return this.slider ? [this.slider] : [];\n  }\n}\n","import { deepMix, find, flatten, get, isArray, isEqual, isFunction, isUndefined, mix } from '@antv/util';\nimport { Crosshair, HtmlTooltip, IGroup } from '../../dependents';\nimport Geometry from '../../geometry/base';\nimport { Point, TooltipOption } from '../../interface';\nimport { getAngleByPoint, getDistanceToCenter, isPointInCoordinate } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport { findDataByPoint, getTooltipItems } from '../../util/tooltip';\nimport { Controller } from './base';\n\n// Filter duplicates, use `name`, `color`, `value` and `title` property values as condition\nfunction uniq(items) {\n  const uniqItems = [];\n  for (let index = 0; index < items.length; index++) {\n    const item = items[index];\n    const result = find(uniqItems, (subItem) => {\n      return (\n        subItem.color === item.color &&\n        subItem.name === item.name &&\n        subItem.value === item.value &&\n        subItem.title === item.title\n      );\n    });\n    if (!result) {\n      uniqItems.push(item);\n    }\n  }\n  return uniqItems;\n}\n\n/** @ignore */\nexport default class Tooltip extends Controller<TooltipOption> {\n  private tooltip;\n  private tooltipMarkersGroup: IGroup;\n  private tooltipCrosshairsGroup: IGroup;\n  private xCrosshair;\n  private yCrosshair;\n  private guideGroup: IGroup;\n\n  private isLocked: boolean = false;\n  private items;\n  private title: string;\n  private point: Point;\n\n  public get name(): string {\n    return 'tooltip';\n  }\n\n  public init() {}\n\n  private isVisible() {\n    const option = this.view.getOptions().tooltip;\n    return option !== false;\n  }\n\n  public render() {}\n\n  /**\n   * Shows tooltip\n   * @param point\n   */\n  public showTooltip(point: Point) {\n    this.point = point;\n    if (!this.isVisible()) {\n      // 如果设置 tooltip(false) 则始终不显示\n      return;\n    }\n    const view = this.view;\n    const items = this.getTooltipItems(point);\n    if (!items.length) {\n      // 无内容则不展示，同时 tooltip 需要隐藏\n      this.hideTooltip();\n      return;\n    }\n    const title = this.getTitle(items);\n    const dataPoint = {\n      x: items[0].x,\n      y: items[0].y,\n    }; // 数据点位置\n\n    view.emit('tooltip:show', {\n      items,\n      title,\n      ...point,\n    });\n\n    const cfg = this.getTooltipCfg();\n    const { follow, showMarkers, showCrosshairs, showContent, marker } = cfg;\n    const lastItems = this.items;\n    const lastTitle = this.title;\n    if (!isEqual(lastTitle, title) || !isEqual(lastItems, items)) {\n      // 内容发生变化了更新 tooltip\n      view.emit('tooltip:change', {\n        items,\n        title,\n        ...point,\n      });\n\n      if (showContent) {\n        // 展示 tooltip 内容框才渲染 tooltip\n        if (!this.tooltip) {\n          // 延迟生成\n          this.renderTooltip();\n        }\n        this.tooltip.update(\n          mix(\n            {},\n            cfg,\n            {\n              items,\n              title,\n            },\n            follow ? point : {}\n          )\n        );\n        this.tooltip.show();\n      }\n\n      if (showMarkers) {\n        // 展示 tooltipMarkers，tooltipMarkers 跟随数据\n        this.renderTooltipMarkers(items, marker);\n      }\n    } else {\n      // 内容未发生变化，则更新位置\n      if (this.tooltip && follow) {\n        this.tooltip.update(point);\n        this.tooltip.show(); // tooltip 有可能被隐藏，需要保证显示状态\n      }\n\n      if (this.tooltipMarkersGroup) {\n        this.tooltipMarkersGroup.show();\n      }\n    }\n\n    this.items = items;\n    this.title = title;\n\n    if (showCrosshairs) {\n      // 展示 tooltip 辅助线\n      const isCrosshairsFollowCursor = get(cfg, ['crosshairs', 'follow'], false); // 辅助线是否要跟随鼠标\n      this.renderCrosshairs(isCrosshairsFollowCursor ? point : dataPoint, cfg);\n    }\n  }\n\n  public hideTooltip() {\n    const { follow } = this.getTooltipCfg();\n    if (!follow) {\n      this.point = null;\n      return;\n    }\n    // hide the tooltipMarkers\n    const tooltipMarkersGroup = this.tooltipMarkersGroup;\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.hide();\n    }\n\n    // hide crosshairs\n    const xCrosshair = this.xCrosshair;\n    const yCrosshair = this.yCrosshair;\n    if (xCrosshair) {\n      xCrosshair.hide();\n    }\n    if (yCrosshair) {\n      yCrosshair.hide();\n    }\n\n    const tooltip = this.tooltip;\n    if (tooltip) {\n      tooltip.hide();\n    }\n\n    this.view.emit('tooltip:hide', {});\n    this.point = null;\n  }\n\n  /**\n   * lockTooltip\n   */\n  public lockTooltip() {\n    this.isLocked = true;\n    if (this.tooltip) {\n      // tooltip contianer 可捕获事件\n      this.tooltip.setCapture(true);\n    }\n  }\n\n  /**\n   * unlockTooltip\n   */\n  public unlockTooltip() {\n    this.isLocked = false;\n    const cfg = this.getTooltipCfg();\n    if (this.tooltip) {\n      // 重置 capture 属性\n      this.tooltip.setCapture(cfg.capture);\n    }\n  }\n\n  /**\n   * isTooltipLocked\n   */\n  public isTooltipLocked() {\n    return this.isLocked;\n  }\n\n  public clear() {\n    const { tooltip, xCrosshair, yCrosshair, tooltipMarkersGroup } = this;\n    if (tooltip) {\n      tooltip.hide();\n      tooltip.clear();\n    }\n\n    if (xCrosshair) {\n      xCrosshair.clear();\n    }\n\n    if (yCrosshair) {\n      yCrosshair.clear();\n    }\n\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.clear();\n    }\n  }\n\n  public destroy() {\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n    if (this.xCrosshair) {\n      this.xCrosshair.destroy();\n    }\n    if (this.yCrosshair) {\n      this.yCrosshair.destroy();\n    }\n\n    if (this.guideGroup) {\n      this.guideGroup.remove(true);\n    }\n\n    this.items = null;\n    this.title = null;\n    this.tooltipMarkersGroup = null;\n    this.tooltipCrosshairsGroup = null;\n    this.xCrosshair = null;\n    this.yCrosshair = null;\n    this.tooltip = null;\n    this.guideGroup = null;\n    this.isLocked = false;\n    this.point = null;\n  }\n\n  public changeVisible(visible: boolean) {\n    if (this.visible === visible) {\n      return;\n    }\n    const { tooltip, tooltipMarkersGroup, xCrosshair, yCrosshair } = this;\n    if (visible) {\n      if (tooltip) {\n        tooltip.show();\n      }\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.show();\n      }\n      if (xCrosshair) {\n        xCrosshair.show();\n      }\n      if (yCrosshair) {\n        yCrosshair.show();\n      }\n    } else {\n      if (tooltip) {\n        tooltip.hide();\n      }\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.hide();\n      }\n      if (xCrosshair) {\n        xCrosshair.hide();\n      }\n      if (yCrosshair) {\n        yCrosshair.hide();\n      }\n    }\n    this.visible = visible;\n  }\n\n  public getTooltipItems(point: Point) {\n    let items = this.findItemsFromView(this.view, point);\n    if (items.length) {\n      // 三层\n      items = flatten(items);\n      for (const itemArr of items) {\n        for (const item of itemArr) {\n          const { x, y } = item.mappingData;\n          item.x = isArray(x) ? x[x.length - 1] : x;\n          item.y = isArray(y) ? y[y.length - 1] : y;\n        }\n      }\n\n      const { shared } = this.getTooltipCfg();\n      // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n      if (shared === false && items.length > 1) {\n        let snapItem = items[0];\n        let min = Math.abs(point.y - snapItem[0].y);\n        for (const aItem of items) {\n          const yDistance = Math.abs(point.y - aItem[0].y);\n          if (yDistance <= min) {\n            snapItem = aItem;\n            min = yDistance;\n          }\n        }\n        items = [snapItem];\n      }\n\n      return uniq(flatten(items));\n    }\n\n    return [];\n  }\n\n  public layout() {}\n\n  public update() {\n    if (this.point) {\n      this.showTooltip(this.point);\n    }\n\n    if (this.tooltip) {\n      // #2279 修复resize之后tooltip越界的问题\n      // 确保tooltip已经创建的情况下\n      const canvas = this.view.getCanvas();\n      // 更新 region\n      this.tooltip.set('region', {\n        start: { x: 0, y: 0 },\n        end: { x: canvas.get('width'), y: canvas.get('height') },\n      });\n    }\n  }\n\n  // 获取 tooltip 配置，因为用户可能会通过 view.tooltip() 重新配置 tooltip，所以就不做缓存，每次直接读取\n  protected getTooltipCfg() {\n    const view = this.view;\n    const option = view.getOptions().tooltip;\n    const theme = view.getTheme();\n    const defaultCfg = get(theme, ['components', 'tooltip'], {});\n    const enterable = isUndefined(get(option, 'enterable')) ? defaultCfg.enterable : get(option, 'enterable');\n    return deepMix({}, defaultCfg, option, {\n      capture: enterable || this.isLocked ? true : false,\n    });\n  }\n\n  private getTitle(items) {\n    const title = items[0].title || items[0].name;\n    this.title = title;\n\n    return title;\n  }\n\n  private renderTooltip() {\n    const canvas = this.view.getCanvas();\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n\n    const cfg = this.getTooltipCfg();\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      ...cfg,\n      visible: false,\n      crosshairs: null,\n    });\n\n    tooltip.init();\n    this.tooltip = tooltip;\n  }\n\n  private renderTooltipMarkers(items, marker) {\n    const tooltipMarkersGroup = this.getTooltipMarkersGroup();\n    for (const item of items) {\n      const { x, y } = item;\n      const attrs = {\n        fill: item.color,\n        symbol: 'circle',\n        shadowColor: item.color,\n        ...marker,\n        x,\n        y,\n      };\n\n      tooltipMarkersGroup.addShape('marker', {\n        attrs,\n      });\n    }\n  }\n\n  private renderCrosshairs(point: Point, cfg) {\n    const crosshairsType = get(cfg, ['crosshairs', 'type'], 'x'); // 默认展示 x 轴上的辅助线\n    if (crosshairsType === 'x') {\n      if (this.yCrosshair) {\n        this.yCrosshair.hide();\n      }\n      this.renderXCrosshairs(point, cfg);\n    } else if (crosshairsType === 'y') {\n      if (this.xCrosshair) {\n        this.xCrosshair.hide();\n      }\n      this.renderYCrosshairs(point, cfg);\n    } else if (crosshairsType === 'xy') {\n      this.renderXCrosshairs(point, cfg);\n      this.renderYCrosshairs(point, cfg);\n    }\n  }\n\n  // 渲染 x 轴上的 tooltip 辅助线\n  private renderXCrosshairs(point: Point, tooltipCfg) {\n    const coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n    if (!isPointInCoordinate(coordinate, point)) {\n      return;\n    }\n    let start;\n    let end;\n    if (coordinate.isRect) {\n      if (coordinate.isTransposed) {\n        start = {\n          x: coordinate.start.x,\n          y: point.y,\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y,\n        };\n      } else {\n        start = {\n          x: point.x,\n          y: coordinate.end.y,\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y,\n        };\n      }\n    } else {\n      // 极坐标下 x 轴上的 crosshairs 表现为半径\n      const angle = getAngleByPoint(coordinate, point);\n      const center = coordinate.getCenter();\n      const radius = coordinate.getRadius();\n      end = polarToCartesian(center.x, center.y, radius, angle);\n      start = center;\n    }\n\n    const cfg = deepMix(\n      {\n        start,\n        end,\n        container: this.getTooltipCrosshairsGroup(),\n      },\n      get(tooltipCfg, 'crosshairs', {}),\n      this.getCrosshairsText('x', point, tooltipCfg)\n    );\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n\n    let xCrosshair = this.xCrosshair;\n    if (xCrosshair) {\n      xCrosshair.update(cfg);\n    } else {\n      xCrosshair = new Crosshair.Line(cfg);\n      xCrosshair.init();\n    }\n    xCrosshair.render();\n    xCrosshair.show();\n    this.xCrosshair = xCrosshair;\n  }\n\n  // 渲染 y 轴上的辅助线\n  private renderYCrosshairs(point: Point, tooltipCfg) {\n    const coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n    if (!isPointInCoordinate(coordinate, point)) {\n      return;\n    }\n    let cfg;\n    let type;\n    if (coordinate.isRect) {\n      let start;\n      let end;\n      if (coordinate.isTransposed) {\n        start = {\n          x: point.x,\n          y: coordinate.end.y,\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y,\n        };\n      } else {\n        start = {\n          x: coordinate.start.x,\n          y: point.y,\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y,\n        };\n      }\n      cfg = {\n        start,\n        end,\n      };\n      type = 'Line';\n    } else {\n      // 极坐标下 y 轴上的 crosshairs 表现为圆弧\n      cfg = {\n        center: coordinate.getCenter(),\n        // @ts-ignore\n        radius: getDistanceToCenter(coordinate, point),\n        startAngle: coordinate.startAngle,\n        endAngle: coordinate.endAngle,\n      };\n      type = 'Circle';\n    }\n\n    cfg = deepMix(\n      {\n        container: this.getTooltipCrosshairsGroup(),\n      },\n      cfg,\n      get(tooltipCfg, 'crosshairs', {}),\n      this.getCrosshairsText('y', point, tooltipCfg)\n    );\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n\n    let yCrosshair = this.yCrosshair;\n    if (yCrosshair) {\n      // 如果坐标系发生直角坐标系与极坐标的切换操作\n      if (\n        (coordinate.isRect && yCrosshair.get('type') === 'circle') ||\n        (!coordinate.isRect && yCrosshair.get('type') === 'line')\n      ) {\n        yCrosshair = new Crosshair[type](cfg);\n        yCrosshair.init();\n      } else {\n        yCrosshair.update(cfg);\n      }\n    } else {\n      yCrosshair = new Crosshair[type](cfg);\n      yCrosshair.init();\n    }\n    yCrosshair.render();\n    yCrosshair.show();\n    this.yCrosshair = yCrosshair;\n  }\n\n  private getCrosshairsText(type, point: Point, tooltipCfg) {\n    let textCfg = get(tooltipCfg, ['crosshairs', 'text']);\n    const follow = get(tooltipCfg, ['crosshairs', 'follow']);\n    const items = this.items;\n\n    if (textCfg) {\n      const view = this.getViewWithGeometry(this.view);\n      // 需要展示文本\n      const firstItem = items[0];\n      const xScale = view.getXScale();\n      const yScale = view.getYScales()[0];\n      let xValue;\n      let yValue;\n      if (follow) {\n        // 如果需要跟随鼠标移动，就需要将当前鼠标坐标点转换为对应的数值\n        const invertPoint = this.view.getCoordinate().invert(point);\n        xValue = xScale.invert(invertPoint.x); // 转换为原始值\n        yValue = yScale.invert(invertPoint.y); // 转换为原始值\n      } else {\n        xValue = firstItem.data[xScale.field];\n        yValue = firstItem.data[yScale.field];\n      }\n\n      const content = type === 'x' ? xValue : yValue;\n      if (isFunction(textCfg)) {\n        textCfg = textCfg(type, content, items, point);\n      } else {\n        textCfg.content = content;\n      }\n\n      return {\n        text: textCfg,\n      };\n    }\n  }\n\n  // 获取存储 tooltipMarkers 和 crosshairs 的容器\n  private getGuideGroup() {\n    if (!this.guideGroup) {\n      const foregroundGroup = this.view.foregroundGroup;\n      this.guideGroup = foregroundGroup.addGroup({\n        name: 'tooltipGuide',\n        capture: false,\n      });\n    }\n\n    return this.guideGroup;\n  }\n\n  // 获取 tooltipMarkers 存储的容器\n  private getTooltipMarkersGroup() {\n    let tooltipMarkersGroup = this.tooltipMarkersGroup;\n    if (tooltipMarkersGroup && !tooltipMarkersGroup.destroyed) {\n      tooltipMarkersGroup.clear();\n      tooltipMarkersGroup.show();\n    } else {\n      tooltipMarkersGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipMarkersGroup',\n      });\n      tooltipMarkersGroup.toFront();\n      this.tooltipMarkersGroup = tooltipMarkersGroup;\n    }\n    return tooltipMarkersGroup;\n  }\n\n  // 获取 tooltip crosshairs 存储的容器\n  private getTooltipCrosshairsGroup() {\n    let tooltipCrosshairsGroup = this.tooltipCrosshairsGroup;\n    if (!tooltipCrosshairsGroup) {\n      tooltipCrosshairsGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipCrosshairsGroup',\n        capture: false,\n      });\n      tooltipCrosshairsGroup.toBack();\n      this.tooltipCrosshairsGroup = tooltipCrosshairsGroup;\n    }\n    return tooltipCrosshairsGroup;\n  }\n\n  private getTooltipItemsByHitShape(geometry, point, title) {\n    const result = [];\n    const container = geometry.container;\n    const shape = container.getShape(point.x, point.y);\n    if (shape && shape.get('visible') && shape.get('origin')) {\n      const mappingData = shape.get('origin').mappingData;\n      const items = getTooltipItems(mappingData, geometry, title);\n      if (items.length) {\n        result.push(items);\n      }\n    }\n\n    return result;\n  }\n\n  private getTooltipItemsByFindData(geometry: Geometry, point, title) {\n    const result = [];\n    const dataArray = geometry.dataArray;\n    geometry.sort(dataArray); // 先进行排序，便于 tooltip 查找\n    for (const data of dataArray) {\n      const record = findDataByPoint(point, data, geometry);\n      if (record) {\n        const elementId = geometry.getElementId(record);\n        const element = geometry.elementsMap[elementId];\n        if (geometry.type === 'heatmap' || element.visible) {\n          // Heatmap 没有 Element\n          // 如果图形元素隐藏了，怎不再 tooltip 上展示相关数据\n          const items = getTooltipItems(record, geometry, title);\n          if (items.length) {\n            result.push(items);\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n\n  private findItemsFromView(view, point) {\n    if (view.getOptions().tooltip === false) {\n      // 如果 view 关闭了 tooltip\n      return [];\n    }\n\n    let result = [];\n    // 先从 view 本身查找\n    const geometries = view.geometries;\n    const { shared, title } = this.getTooltipCfg();\n    for (const geometry of geometries) {\n      if (geometry.visible && geometry.tooltipOption !== false) {\n        // geometry 可见同时未关闭 tooltip\n        const geometryType = geometry.type;\n        let tooltipItems;\n        if (['point', 'edge', 'polygon'].includes(geometryType)) {\n          // 始终通过图形拾取\n          tooltipItems = this.getTooltipItemsByHitShape(geometry, point, title);\n        } else if (['area', 'line', 'path', 'heatmap'].includes(geometryType)) {\n          // 如果是 'area', 'line', 'path'，始终通过数据查找方法查找 tooltip\n          tooltipItems = this.getTooltipItemsByFindData(geometry, point, title);\n        } else {\n          if (shared !== false) {\n            tooltipItems = this.getTooltipItemsByFindData(geometry, point, title);\n          } else {\n            tooltipItems = this.getTooltipItemsByHitShape(geometry, point, title);\n          }\n        }\n        if (tooltipItems.length) {\n          // geometry 有可能会有多个 item，因为用户可以设置 geometry.tooltip('x*y*z')\n          result.push(tooltipItems);\n        }\n      }\n    }\n\n    // 递归查找，并合并结果\n    for (const childView of view.views) {\n      result = result.concat(this.findItemsFromView(childView, point));\n    }\n\n    return result;\n  }\n\n  // FIXME: hack 方法\n  // 因为 tooltip 的交互是挂载在 Chart 上，所以当chart 上没有绘制 Geometry 的时候，就查找不到数据，并且绘图区域同子 View 的区域不同\n  private getViewWithGeometry(view) {\n    if (view.geometries.length) {\n      return view;\n    }\n\n    return find(view.views, (childView) => this.getViewWithGeometry(childView));\n  }\n}\n","import { each, head, isEqual, last } from '@antv/util';\nimport { IShape } from '../../dependents';\nimport Element from '../../geometry/element/';\nimport { LooseObject } from '../../interface';\nimport { getAngle, getSectorPath } from '../../util/graphics';\nimport Action from './base';\n\n/**\n * 背景框的 Action\n * @ignore\n */\nclass ActiveRegion extends Action {\n  private items: any[];\n  private regionPath: IShape;\n  /**\n   * 显示\n   */\n  public show() {\n    const view = this.context.view;\n    const ev = this.context.event;\n    const tooltipItems = view.getTooltipItems({\n      x: ev.x,\n      y: ev.y,\n    });\n\n    if (isEqual(tooltipItems, this.items)) {\n      // 如果拾取数据同上次相同，则不重复绘制\n      return;\n    }\n    this.items = tooltipItems;\n    if (tooltipItems.length) {\n      const xField = view.getXScale().field;\n      const xValue = tooltipItems[0].data[xField];\n      // 根据 x 对应的值查找 elements\n      let elements: Element[] = [];\n      const geometries = view.geometries;\n      each(geometries, (geometry) => {\n        if (geometry.type === 'interval' || geometry.type === 'schema') {\n          const result = geometry.getElementsBy((ele) => {\n            const eleData = ele.getData();\n            return eleData[xField] === xValue;\n          });\n\n          elements = elements.concat(result);\n        }\n      });\n\n      // 根据 bbox 计算背景框的面积区域\n      if (elements.length) {\n        const coordinate = view.getCoordinate();\n\n        let firstBBox = elements[0].shape.getCanvasBBox();\n        let lastBBox = elements[0].shape.getCanvasBBox();\n        const groupBBox: LooseObject = firstBBox;\n\n        each(elements, (ele: Element) => {\n          const bbox = ele.shape.getCanvasBBox();\n          if (coordinate.isTransposed) {\n            if (bbox.minY < firstBBox.minY) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxY > lastBBox.maxY) {\n              lastBBox = bbox;\n            }\n          } else {\n            if (bbox.minX < firstBBox.minX) {\n              firstBBox = bbox;\n            }\n            if (bbox.maxX > lastBBox.maxX) {\n              lastBBox = bbox;\n            }\n          }\n\n          groupBBox.x = Math.min(bbox.minX, groupBBox.minX);\n          groupBBox.y = Math.min(bbox.minY, groupBBox.minY);\n          groupBBox.width = Math.max(bbox.maxX, groupBBox.maxX) - groupBBox.x;\n          groupBBox.height = Math.max(bbox.maxY, groupBBox.maxY) - groupBBox.y;\n        });\n\n        const { backgroundGroup, coordinateBBox } = view;\n        let path;\n        if (coordinate.isRect) {\n          const xScale = view.getXScale();\n          const appendRatio = xScale.isLinear ? 0 : 0.25; // 如果 x 轴是数值类型，如直方图，不需要家额外的宽度\n          let minX: number;\n          let minY: number;\n          let width: number;\n          let height: number;\n          if (coordinate.isTransposed) {\n            minX = coordinateBBox.minX;\n            minY = Math.min(lastBBox.minY, firstBBox.minY) - appendRatio * lastBBox.height;\n            width = coordinateBBox.width;\n            height = groupBBox.height + appendRatio * 2 * lastBBox.height;\n          } else {\n            minX = Math.min(firstBBox.minX, lastBBox.minX) - appendRatio * firstBBox.width;\n            minY = Math.min(coordinateBBox.minY, firstBBox.minY);\n            width = groupBBox.width + appendRatio * 2 * firstBBox.width;\n            height = coordinateBBox.height;\n          }\n          path = [\n            ['M', minX, minY],\n            ['L', minX + width, minY],\n            ['L', minX + width, minY + height],\n            ['L', minX, minY + height],\n            ['Z'],\n          ];\n        } else {\n          const firstElement = head(elements);\n          const lastElement = last(elements);\n          const { startAngle } = getAngle(firstElement.getModel(), coordinate);\n          const { endAngle } = getAngle(lastElement.getModel(), coordinate);\n          const center = coordinate.getCenter();\n          const radius = coordinate.getRadius();\n          const innterRadius = coordinate.innerRadius * radius;\n          path = getSectorPath(center.x, center.y, radius, startAngle, endAngle, innterRadius);\n        }\n\n        if (this.regionPath) {\n          this.regionPath.attr('path', path);\n          this.regionPath.show();\n        } else {\n          this.regionPath = backgroundGroup.addShape({\n            type: 'path',\n            name: 'active-region',\n            capture: false,\n            attrs: {\n              path,\n              fill: '#CCD6EC',\n              opacity: 0.3,\n            },\n          });\n        }\n      }\n    }\n  }\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.regionPath) {\n      this.regionPath.hide();\n    }\n    // this.regionPath = null;\n    this.items = null;\n  }\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.hide();\n    if (this.regionPath) {\n      this.regionPath.remove(true);\n    }\n    super.destroy();\n  }\n}\n\nexport default ActiveRegion;\n","import { isEqual } from '@antv/util';\nimport { View } from '../../../../chart';\nimport { Point } from '../../../../interface';\nimport Action from '../../base';\n\n/**\n * Tooltip 展示隐藏的 Action\n * @ignore\n */\nclass TooltipAction extends Action {\n  private timeStamp: number = 0;\n  private location: Point;\n\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  public show() {\n    const context = this.context;\n    const ev = context.event;\n    const view = context.view;\n    const isTooltipLocked = view.isTooltipLocked();\n    if (isTooltipLocked) {\n      // 锁定时不移动 tooltip\n      return;\n    }\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(view, curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hide() {\n    const view = this.context.view;\n    const isTooltipLocked = view.isTooltipLocked();\n    if (isTooltipLocked) {\n      // 锁定 tooltip 时不隐藏\n      return;\n    }\n    this.hideTooltip(view);\n    this.location = null;\n  }\n\n  protected showTooltip(view: View, point: Point) {\n    // 相同位置不重复展示\n    view.showTooltip(point);\n  }\n\n  protected hideTooltip(view) {\n    view.hideTooltip();\n  }\n}\n\nexport default TooltipAction;\n","import { each } from '@antv/util';\nimport { View } from '../../../../chart';\nimport { Point } from '../../../../interface';\nimport { getSiblingPoint, getSilbings } from '../../util';\nimport TooltipAction from './geometry';\n\n/**\n * 存在多个 view 时，控制其他 view 上的 tooltip 显示\n * @ignore\n */\nclass SiblingTooltip extends TooltipAction {\n  /**\n   * 所有同一层级的 tooltip 显示\n   * @param view\n   * @param point\n   */\n  protected showTooltip(view: View, point: Point) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const siblingPoint = getSiblingPoint(view, sibling, point);\n      sibling.showTooltip(siblingPoint);\n    });\n  }\n  /**\n   * 隐藏同一层级的 tooltip\n   * @param view\n   */\n  protected hideTooltip(view) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.hideTooltip();\n    });\n  }\n}\n\nexport default SiblingTooltip;\n","import { isEqual, get } from '@antv/util';\nimport { Point } from '../../../../interface';\nimport Action from '../../base';\nimport { HtmlTooltip } from '../../../../dependents';\n\n/**\n * 用于组件文本省略后需要展示完整信息的 Tooltip Action\n * @ignore\n */\nexport default class EllipsisText extends Action {\n  private timeStamp: number = 0;\n  private location: Point;\n  private tooltip;\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  public show() {\n    const context = this.context;\n    const ev = context.event;\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hide() {\n    this.hideTooltip();\n    this.location = null;\n  }\n\n  protected showTooltip(curLoc: Point) {\n    const context = this.context;\n    const ev = context.event;\n    const target = ev.target;\n\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n      const tipContent = target.get('tip');\n      // 展示 tooltip\n      this.tooltip.update({\n        title: tipContent,\n        ...curLoc,\n      });\n      this.tooltip.show();\n    }\n  }\n\n  protected hideTooltip() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  private renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n\n    const theme = view.getTheme();\n    const tooltipStyles = get(theme, ['components', 'tooltip', 'domStyles'], {}); // 获取 tooltip 样式\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      crosshairs: null,\n      domStyles: tooltipStyles,\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n    this.tooltip = tooltip;\n  }\n}\n","import { each } from '@antv/util';\nimport Element from '../../../geometry/element/';\nimport Action from '../base';\nimport { getElementsByState } from '../util';\n\n/**\n * 状态量 Action 的基类\n * @abstract\n * @class\n * @ignore\n */\nabstract class StateBase extends Action {\n  /**\n   * 状态名称\n   */\n  protected stateName: string = '';\n\n  /**\n   * 设置状态是否激活\n   * @param enable 状态值\n   */\n  protected abstract setStateEnable(enable: boolean);\n\n  /**\n   * 是否具有某个状态\n   * @param element 图表 Element 元素\n   */\n  protected hasState(element: Element): boolean {\n    return element.hasState(this.stateName);\n  }\n  /**\n   * 设置状态激活\n   * @param enable 状态值\n   */\n  protected setElementState(element: Element, enable: boolean) {\n    // 防止闪烁\n    element.setState(this.stateName, enable);\n  }\n\n  /**\n   * 设置状态\n   */\n  public setState() {\n    this.setStateEnable(true);\n  }\n\n  /**\n   * 清除所有 Element 的状态\n   */\n  public clear() {\n    const view = this.context.view;\n    this.clearViewState(view);\n  }\n\n  protected clearViewState(view) {\n    const elements = getElementsByState(view, this.stateName);\n    each(elements, (el: Element) => {\n      this.setElementState(el, false);\n    });\n  }\n}\n\nexport default StateBase;\n","import { each, isNil, get } from '@antv/util';\nimport { ListItem } from '../../../dependents';\nimport Element from '../../../geometry/element/';\nimport {\n  getCurrentElement,\n  getDelegationObject,\n  getElements,\n  getElementValue,\n  getScaleByField,\n  isElementChange,\n  isList,\n} from '../util';\nimport StateBase from './state-base';\n\nfunction getItem(shape) {\n  return get(shape.get('delegateObject'), 'item');\n}\n\n/**\n * 状态量 Action 的基类，允许多个 Element 同时拥有某个状态\n * @class\n * @ignore\n */\nclass ElementState extends StateBase {\n  protected ignoreListItemStates = ['unchecked'];\n\n  // 是否忽略触发的列表项\n  private isItemIgnore(item: ListItem, list) {\n    const states = this.ignoreListItemStates;\n    const filtered = states.filter((state) => {\n      return list.hasState(item, state);\n    });\n    return !!filtered.length;\n  }\n\n  // 设置由组件选项导致的状态变化\n  private setStateByComponent(component, item: ListItem, enable: boolean) {\n    const view = this.context.view;\n    const field = component.get('field');\n    const elements = getElements(view);\n    this.setElementsStateByItem(elements, field, item, enable);\n  }\n\n  // 处理触发源由 element 导致的状态变化\n  protected setStateByElement(element: Element, enable: boolean) {\n    this.setElementState(element, enable);\n  }\n\n  /** 组件的选项是否同 element 匹配 */\n  protected isMathItem(element: Element, field: string, item: ListItem) {\n    const view = this.context.view;\n    const scale = getScaleByField(view, field);\n    const value = getElementValue(element, field);\n    return !isNil(value) && item.name === scale.getText(value);\n  }\n\n  protected setElementsStateByItem(elements: Element[], field: string, item: ListItem, enable: boolean) {\n    each(elements, (el) => {\n      if (this.isMathItem(el, field, item)) {\n        el.setState(this.stateName, enable);\n      }\n    });\n  }\n\n  /** 设置状态是否激活 */\n  protected setStateEnable(enable: boolean) {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      // 触发源由于 element 导致\n      if (isElementChange(this.context)) {\n        this.setStateByElement(element, enable);\n      }\n    } else {\n      // 触发源由组件导致\n      const delegateObject = getDelegationObject(this.context);\n      // 如果触发源时列表，图例、坐标轴\n      if (isList(delegateObject)) {\n        const { item, component } = delegateObject;\n        if (item && component && !this.isItemIgnore(item, component)) {\n          const event = this.context.event.gEvent;\n          // 防止闪烁\n          if (event && event.fromShape && event.toShape && getItem(event.fromShape) === getItem(event.toShape)) {\n            return;\n          }\n          this.setStateByComponent(component, item, enable);\n        }\n      }\n    }\n  }\n\n  /**\n   * 切换状态\n   */\n  public toggle() {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      const hasState = element.hasState(this.stateName);\n      this.setElementState(element, !hasState);\n    }\n  }\n\n  /**\n   * 取消当前时间影响的状态\n   */\n  public reset() {\n    this.setStateEnable(false);\n  }\n}\n\nexport default ElementState;\n","import StateAction from './state';\n\n/**\n * 元素 active 的 Action，允许多个元素同时 active\n * @class\n * @ignore\n */\nclass ElementActive extends StateAction {\n  protected stateName: string = 'active';\n  /**\n   * Active Element\n   */\n  public active() {\n    this.setState();\n  }\n}\n\nexport default ElementActive;\n","import Action from '../base';\nimport { getCurrentElement, getElementValue, getElementsByField } from '../util';\nimport Element from '../../../geometry/element/';\nimport { each } from '@antv/util';\nimport { LooseObject } from '../../../interface';\nimport { IGroup } from '../../../dependents';\n\n/**\n * Link Elements by color\n * @ignore\n */\nclass LinkByColor extends Action {\n  private linkGroup: IGroup;\n  private cache: LooseObject = {};\n  // 获取颜色对应的 scale\n  private getColorScale(view, element) {\n    const colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return null;\n    }\n    const scale = view.getScaleByField(colorAttr.getFields()[0]);\n    return scale;\n  }\n  // 获取连接的 path\n  private getLinkPath(element: Element, nextElement: Element) {\n    const bbox = element.shape.getCanvasBBox();\n    const nextBBox = nextElement.shape.getCanvasBBox();\n    const path = [\n      ['M', bbox.maxX, bbox.minY],\n      ['L', nextBBox.minX, nextBBox.minY],\n      ['L', nextBBox.minX, nextBBox.maxY],\n      ['L', bbox.maxX, bbox.maxY],\n      ['Z'],\n    ];\n    return path;\n  }\n  // 添加连接的图形\n  private addLinkShape(group, element: Element, nextElement: Element) {\n    group.addShape({\n      type: 'path',\n      attrs: {\n        opacity: 0.4,\n        fill: element.shape.attr('fill'),\n        path: this.getLinkPath(element, nextElement),\n      },\n    });\n  }\n  // 使用图形连接\n  private linkByElement(element: Element) {\n    const view = this.context.view;\n    const scale = this.getColorScale(view, element);\n    if (!scale) {\n      return;\n    }\n    const value = getElementValue(element, scale.field);\n    if (!this.cache[value]) {\n      const elements = getElementsByField(view, scale.field, value);\n      const linkGroup = this.linkGroup;\n      const group = linkGroup.addGroup();\n      this.cache[value] = group; // 缓存\n      const count = elements.length;\n      each(elements, (el, index) => {\n        if (index < count - 1) {\n          const nextEl = elements[index + 1];\n          this.addLinkShape(group, el, nextEl);\n        }\n      });\n    }\n  }\n  // 移除连接\n  private removeLink(element) {\n    const scale = this.getColorScale(this.context.view, element);\n    if (!scale) {\n      return;\n    }\n    const value = getElementValue(element, scale.field);\n    if (this.cache[value]) {\n      this.cache[value].remove();\n      this.cache[value] = null;\n    }\n  }\n\n  /**\n   * 连接 elements\n   */\n  public link() {\n    const context = this.context;\n    if (!this.linkGroup) {\n      // 不允许被拾取\n      this.linkGroup = context.view.foregroundGroup.addGroup({\n        capture: false,\n      });\n    }\n    const element = getCurrentElement(context);\n    if (element) {\n      this.linkByElement(element);\n    }\n  }\n\n  /**\n   * 取消连接 elements\n   */\n  unlink() {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      this.removeLink(element);\n    }\n  }\n\n  /**\n   * 清除所有连接\n   */\n  clear() {\n    if (this.linkGroup) {\n      this.linkGroup.clear();\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  destroy() {\n    super.destroy();\n    if (this.linkGroup) {\n      this.linkGroup.remove();\n    }\n  }\n}\nexport default LinkByColor;\n","import { each } from '@antv/util';\nimport Element from '../../../geometry/element/';\nimport {\n  getElements,\n  getIntersectElements,\n  getMaskedElements,\n  getSiblingMaskElements,\n  getSilbings,\n  isInRecords,\n  isMask,\n} from '../util';\nimport StateBase from './state-base';\n\n/**\n * @ignore\n * 区域设置状态的基础 Action\n */\nclass ElementRangeState extends StateBase {\n  private startPoint = null;\n  private endPoint = null;\n  private isStarted: boolean = false;\n  /**\n   * 是否作用于当前 view 的 siblings，默认是 false 仅作用于自己\n   */\n  protected effectSiblings = false;\n  /**\n   * 是否受 element 的数据影响，还是受包围盒的影响\n   */\n  protected effectByRecord = false;\n  // 获取当前的位置\n  private getCurrentPoint() {\n    const event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y,\n    };\n  }\n\n  /**\n   * 开始，记录开始选中的位置\n   */\n  public start() {\n    this.clear(); // 开始的时候清理之前的状态\n    this.startPoint = this.getCurrentPoint();\n    this.isStarted = true;\n  }\n\n  private getIntersectElements() {\n    let elements = null;\n    if (isMask(this.context)) {\n      elements = getMaskedElements(this.context, 10);\n    } else {\n      const startPoint = this.startPoint;\n      const endPoint = this.isStarted ? this.getCurrentPoint() : this.endPoint;\n      // 如果没有开始，则不允许范围设置状态，保护性质\n      if (!startPoint || !endPoint) {\n        return;\n      }\n      // 计算框选区域\n      const box = {\n        minX: Math.min(startPoint.x, endPoint.x),\n        minY: Math.min(startPoint.y, endPoint.y),\n        maxX: Math.max(startPoint.x, endPoint.x),\n        maxY: Math.max(startPoint.y, endPoint.y),\n      };\n      // this.clear(); // 不全部清理，会导致闪烁\n      const view = this.context.view;\n      elements = getIntersectElements(view, box);\n    }\n    return elements;\n  }\n  /**\n   * 选中\n   */\n  public setStateEnable(enable: boolean) {\n    if (this.effectSiblings && !this.effectByRecord) {\n      this.setSiblingsState(enable);\n    } else {\n      const allElements = getElements(this.context.view);\n      const elements = this.getIntersectElements();\n      if (elements && elements.length) {\n        if (this.effectByRecord) {\n          this.setSiblingsStateByRecord(elements, enable);\n        } else {\n          this.setElementsState(elements, enable, allElements);\n        }\n      } else {\n        this.clear();\n      }\n    }\n  }\n  // 根据选中的 element 的数据进行设置状态\n  private setSiblingsStateByRecord(elements, enable) {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    const records = elements.map((el) => {\n      return el.getModel().data;\n    });\n    const xFiled = view.getXScale().field;\n    const yField = view.getYScales()[0].field;\n    each(siblings, (sibling) => {\n      const allElements = getElements(sibling);\n      const effectElements = allElements.filter((el) => {\n        const record = el.getModel().data;\n        return isInRecords(records, record, xFiled, yField);\n      });\n      this.setElementsState(effectElements, enable, allElements);\n    });\n  }\n\n  // 设置兄弟 view 的状态\n  private setSiblingsState(enable: boolean) {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    if (isMask(this.context)) {\n      // 受 mask 影响\n      each(siblings, (sibling) => {\n        const allElements = getElements(sibling);\n        const effectElements = getSiblingMaskElements(this.context, sibling, 10);\n        if (effectElements && effectElements.length) {\n          this.setElementsState(effectElements, enable, allElements);\n        } else {\n          this.clearViewState(sibling);\n        }\n      });\n    }\n  }\n\n  protected setElementsState(elements: Element[], enable, allElements: Element[]) {\n    each(allElements, (el) => {\n      if (!elements.includes(el)) {\n        this.setElementState(el, false);\n      } else {\n        this.setElementState(el, enable);\n      }\n    });\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.isStarted = false;\n    this.endPoint = this.getCurrentPoint();\n  }\n\n  // 复写 clear\n  public clear() {\n    const view = this.context.view;\n    // 判断是否影响 siblings\n    if (this.effectSiblings) {\n      const siblings = getSilbings(view);\n      each(siblings, (sibling) => {\n        this.clearViewState(sibling);\n      });\n    } else {\n      this.clearViewState(view);\n    }\n  }\n}\n\nexport default ElementRangeState;\n","import ElementRangeState from './range-state';\n\n/**\n * @ignore\n * 图表元素区域 Active 的 Action\n */\nclass ElementRangeActive extends ElementRangeState {\n  protected stateName: string = 'active';\n  /**\n   * 图表元素 Active\n   */\n  public active() {\n    this.setState();\n  }\n}\n\nexport default ElementRangeActive;\n","import { getCurrentElement, isElementChange } from '../util';\nimport StateBase from './state-base';\n\n/**\n * 单状态量的 Action 基类\n * @class\n * @ignore\n */\nclass ElementSingleState extends StateBase {\n  protected setStateEnable(enable: boolean) {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      // 在同一个 element 内部移动，忽视 label 和 shape 之间\n      if (!isElementChange(this.context)) {\n        return;\n      }\n      // 仅支持单个状态量的元素，只能由 element 触发\n      if (enable) {\n        this.clear();\n        this.setElementState(element, true);\n      } else if (this.hasState(element)) {\n        this.setElementState(element, false);\n      }\n    }\n  }\n\n  /**\n   * 切换选中，只允许选中一个\n   */\n  public toggle() {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      const hasState = this.hasState(element); // 提前获取状态\n      if (!hasState) {\n        this.clear();\n      }\n      this.setElementState(element, !hasState);\n    }\n  }\n\n  /**\n   * 取消当前时间影响的状态\n   */\n  public reset() {\n    this.setStateEnable(false);\n  }\n}\n\nexport default ElementSingleState;\n","import ElementSingleState from './single-state';\n\n/**\n * @ignore\n * 仅允许单个 Element Active 的 Action\n */\nclass ElementSingleActive extends ElementSingleState {\n  protected stateName: string = 'active';\n  /**\n   * 当前事件相关的 Element Active\n   */\n  public active() {\n    this.setState();\n  }\n}\n\nexport default ElementSingleActive;\n","import { each } from '@antv/util';\nimport { View } from '../../../chart';\nimport Element from '../../../geometry/element/';\nimport { getElements } from '../util';\n\nconst STATUS_UNACTIVE = 'inactive';\nconst STATUS_ACTIVE = 'active';\n\n/**\n * @ignore\n * 清理 highlight 效果\n * @param view View 或者 Chart\n */\nexport function clearHighlight(view: View) {\n  const elements = getElements(view);\n  each(elements, (el) => {\n    if (el.hasState(STATUS_ACTIVE)) {\n      el.setState(STATUS_ACTIVE, false);\n    }\n    if (el.hasState(STATUS_UNACTIVE)) {\n      el.setState(STATUS_UNACTIVE, false);\n    }\n  });\n}\n\ntype MatchCallback = (el: Element) => boolean;\n\n/**\n * @ignore\n * 设置多个元素的 highlight\n * @param elements 元素集合\n * @param callback 设置回调函数\n * @param enable 设置或者取消\n */\nexport function setHighlightBy(elements: Element[], callback: MatchCallback, enable: boolean) {\n  each(elements, (el) => {\n    // 需要处理 active 和 unactive 的互斥\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n      el.setState(STATUS_ACTIVE, enable);\n    } else {\n      if (el.hasState(STATUS_ACTIVE)) {\n        el.setState(STATUS_ACTIVE, false);\n      }\n      el.setState(STATUS_UNACTIVE, enable);\n    }\n  });\n}\n","import { each } from '@antv/util';\nimport { ListItem } from '../../../dependents';\nimport Element from '../../../geometry/element/';\nimport { getElements, getElementsByState } from '../util';\nimport { clearHighlight } from './highlight-util';\nimport StateAction from './state';\n\nimport { ELEMENT_STATE } from '../../../constant';\n\nexport const STATUS_UNACTIVE = ELEMENT_STATE.INACTIVE;\nexport const STATUS_ACTIVE = ELEMENT_STATE.ACTIVE;\nexport type Callback = (el) => boolean;\n\n/**\n * @ignore\n * highlight，指定图形高亮，其他图形变暗\n */\nclass ElementHighlight extends StateAction {\n  protected stateName: string = STATUS_ACTIVE;\n\n  // 多个元素设置、取消 highlight\n  protected setElementsStateByItem(elements: Element[], field: string, item: ListItem, enable: boolean) {\n    const callback = (el) => this.isMathItem(el, field, item);\n    this.setHighlightBy(elements, callback, enable);\n  }\n\n  // 设置元素的 highlight\n  protected setElementHighlight(el: Element, callback: Callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n      el.setState(STATUS_ACTIVE, true);\n    } else if (!el.hasState(STATUS_ACTIVE)) {\n      el.setState(STATUS_UNACTIVE, true);\n    }\n  }\n\n  protected setHighlightBy(elements: Element[], callback: Callback, enable: boolean) {\n    if (enable) {\n      // 如果是设置 highlight ，则将匹配的 element 设置成 active，\n      // 其他如果不是 active，则设置成 unactive\n      each(elements, (el) => {\n        this.setElementHighlight(el, callback);\n      });\n    } else {\n      // 如果取消 highlight，则要检测是否全部取消 highlight\n      const activeElements = getElementsByState(this.context.view, STATUS_ACTIVE);\n      let allCancel = true;\n      // 检测所有 activeElements 都要取消 highlight\n      each(activeElements, (el) => {\n        if (!callback(el)) {\n          allCancel = false;\n          return false;\n        }\n      });\n      if (allCancel) {\n        // 都要取消，则取消所有的 active，unactive 状态\n        this.clear();\n      } else {\n        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive\n        // 其他 element 状态不变\n        each(elements, (el) => {\n          if (callback(el)) {\n            if (el.hasState(STATUS_ACTIVE)) {\n              el.setState(STATUS_ACTIVE, false);\n            }\n            el.setState(STATUS_UNACTIVE, true);\n          }\n        });\n      }\n    }\n  }\n\n  // 单个元素设置和取消 highlight\n  protected setElementState(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const elements = getElements(view);\n    this.setHighlightBy(elements, (el) => element === el, enable);\n  }\n\n  public highlight() {\n    this.setState();\n  }\n\n  // 清理掉所有的 active， unactive 状态\n  public clear() {\n    const view = this.context.view;\n    clearHighlight(view);\n  }\n}\n\nexport default ElementHighlight;\n","import Element from '../../../geometry/element/';\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n\n/**\n * Highlight color\n * @ignore\n */\nclass HighlightColor extends Highlight {\n  protected setStateByElement(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return;\n    }\n    const scale = view.getScaleByField(colorAttr.getFields()[0]);\n    const value = getElementValue(element, scale.field);\n    const elements = getElements(view);\n    const highlightElements = elements.filter((el) => {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, (el) => highlightElements.includes(el), enable);\n  }\n}\n\nexport default HighlightColor;\n","import Element from '../../../geometry/element/';\nimport { getElements, getElementValue, getCurrentElement } from '../util';\nimport Highlight, { STATUS_ACTIVE, STATUS_UNACTIVE, Callback } from './highlight';\n\n/**\n * Highlight x\n * @ignore\n */\nclass HighlightX extends Highlight {\n  // 不允许多选\n  protected setElementHighlight(el: Element, callback: Callback) {\n    if (callback(el)) {\n      if (el.hasState(STATUS_UNACTIVE)) {\n        el.setState(STATUS_UNACTIVE, false);\n      }\n      el.setState(STATUS_ACTIVE, true);\n    } else {\n      el.setState(STATUS_UNACTIVE, true);\n      if (el.hasState(STATUS_ACTIVE)) {\n        el.setState(STATUS_ACTIVE, false);\n      }\n    }\n  }\n\n  protected setStateByElement(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const scale = view.getXScale();\n    const value = getElementValue(element, scale.field);\n    const elements = getElements(view);\n    const highlightElements = elements.filter((el) => {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, (el) => highlightElements.includes(el), enable);\n  }\n\n  /**\n   * 切换状态\n   */\n  public toggle() {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      const hasState = element.hasState(this.stateName);\n      this.setStateByElement(element, !hasState);\n    }\n  }\n}\n\nexport default HighlightX;\n","import Element from '../../../geometry/element/';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\n\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nclass ElementRangeHighlight extends ElementRangeState {\n  protected stateName: string = 'active';\n\n  // 清理掉所有的 active， unactive 状态\n  protected clearViewState(view) {\n    clearHighlight(view);\n  }\n\n  /**\n   * 设置 highlight\n   */\n  public highlight() {\n    this.setState();\n  }\n\n  protected setElementsState(elements: Element[], enable: boolean, allElements: Element[]) {\n    setHighlightBy(allElements, (el) => elements.indexOf(el) >= 0, enable);\n  }\n}\n\nexport default ElementRangeHighlight;\n","import Element from '../../../geometry/element/';\nimport { getElements } from '../util';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementSingleState from './single-state';\n\n/**\n * @ignore\n * 单个 Element Highlight 的 Action\n */\nclass ElementSingleHighlight extends ElementSingleState {\n  protected stateName: string = 'active';\n\n  /**\n   * Element Highlight\n   */\n  public highlight() {\n    this.setState();\n  }\n\n  protected setElementState(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const elements = getElements(view);\n    setHighlightBy(elements, (el) => element === el, enable);\n  }\n\n  // 清理掉所有的 active， unactive 状态\n  public clear() {\n    const view = this.context.view;\n    clearHighlight(view);\n  }\n}\n\nexport default ElementSingleHighlight;\n","import ElementRangeState from './range-state';\n\n/**\n * @ignore\n * 区域选中的 Action\n */\nclass ElementRangeSelected extends ElementRangeState {\n  protected stateName: string = 'selected';\n  /**\n   * 选中\n   */\n  public selected() {\n    this.setState();\n  }\n}\n\nexport default ElementRangeSelected;\n","import StateAction from './state';\n\n/**\n * @ignore\n * 允许多选的 Action\n * @class\n */\nclass ElementMultipleSelected extends StateAction {\n  protected stateName: string = 'selected';\n  /**\n   * 选中节点，允许多选\n   */\n  public selected() {\n    this.setState();\n  }\n}\n\nexport default ElementMultipleSelected;\n","import ElementSingleState from './single-state';\n\n/**\n * @ignore\n * 单选的 Action\n */\nclass ElementSingleSelected extends ElementSingleState {\n  protected stateName: string = 'selected';\n  /**\n   * 选中\n   */\n  public selected() {\n    this.setState();\n  }\n}\n\nexport default ElementSingleSelected;\n","import { each } from '@antv/util';\nimport { IList, ListItem } from '../../../dependents';\nimport Element from '../../../geometry/element';\nimport { LooseObject } from '../../../interface';\nimport Action from '../base';\nimport { getComponents } from '../util';\nimport { getCurrentElement, getDelegationObject, getElementValue, isList, getScaleByField } from '../util';\n\n/** @ignore */\ninterface ListStateCfg {\n  componentNames: string[];\n}\n\n/**\n * 列表项状态 Action 的基础类\n * @class\n * @ignore\n */\nclass ListState extends Action<ListStateCfg> {\n  protected stateName: string = '';\n  protected ignoreItemStates = [];\n\n  /** 获取触发的列表组件 */\n  protected getTriggerListInfo() {\n    const delegateObject = getDelegationObject(this.context);\n    let info: LooseObject = null;\n    if (isList(delegateObject)) {\n      info = {\n        item: delegateObject.item,\n        list: delegateObject.component,\n      };\n    }\n    return info;\n  }\n  // 获取所有允许执行 Action 的组件\n  protected getAllowComponents() {\n    const view = this.context.view;\n    const components = getComponents(view);\n    const rst = [];\n    each(components, (component) => {\n      if (component.isList() && this.allowSetStateByElement(component)) {\n        rst.push(component);\n      }\n    });\n    return rst;\n  }\n\n  /** 是否存在指定的状态 */\n  protected hasState(list: IList, item: ListItem) {\n    return list.hasState(item, this.stateName);\n  }\n\n  /** 清理组件的状态 */\n  protected clearAllComponentsState() {\n    const components = this.getAllowComponents();\n    each(components, (component) => {\n      component.clearItemsState(this.stateName);\n    });\n  }\n\n  // 不是所有的 component 都能进行 active，目前仅支持分类 scale 对应的组件\n  protected allowSetStateByElement(component): boolean {\n    const field = component.get('field');\n    if (!field) {\n      return false;\n    }\n    if (this.cfg && this.cfg.componentNames) {\n      const name = component.get('name');\n      // 如果配置了限制的 component name，则要进行检测\n      if (this.cfg.componentNames.indexOf(name) === -1) {\n        return false;\n      }\n    }\n    const view = this.context.view;\n    const scale = getScaleByField(view, field);\n    return scale && scale.isCategory;\n  }\n  // 检测是否允许触发对应的状态改变事件\n  private allowSetStateByItem(item: ListItem, list: IList) {\n    const ignoreStates = this.ignoreItemStates;\n    if (ignoreStates.length) {\n      const filterStates = ignoreStates.filter((state) => {\n        return list.hasState(item, state);\n      });\n      return filterStates.length === 0;\n    }\n    return true; // 没有定义忽略的状态时，允许\n  }\n\n  // 设置组件的 item active\n  private setStateByElement(component, element: Element, enable: boolean) {\n    const field = component.get('field');\n    const view = this.context.view;\n    const scale = getScaleByField(view, field);\n    const value = getElementValue(element, field);\n    const text = scale.getText(value);\n    this.setItemsState(component, text, enable);\n  }\n\n  // 设置状态\n  protected setStateEnable(enable: boolean) {\n    const element = getCurrentElement(this.context);\n    if (element) {\n      // trigger by element\n      const components = this.getAllowComponents();\n      each(components, (component) => {\n        this.setStateByElement(component, element, enable);\n      });\n    } else {\n      // 被组件触发\n      const delegateObject = getDelegationObject(this.context);\n      if (isList(delegateObject)) {\n        const { item, component } = delegateObject;\n        if (this.allowSetStateByElement(component) && this.allowSetStateByItem(item, component)) {\n          this.setItemState(component, item, enable);\n        }\n      }\n    }\n  }\n\n  // 多个 item 设置状态\n  protected setItemsState(list: IList, name: string, enable: boolean) {\n    const items = list.getItems();\n    each(items, (item) => {\n      if (item.name === name) {\n        this.setItemState(list, item, enable);\n      }\n    });\n  }\n\n  // 单个 item 设置状态\n  protected setItemState(list: IList, item: ListItem, enable: boolean) {\n    list.setItemState(item, this.stateName, enable);\n  }\n\n  /**\n   * 设置状态\n   */\n  public setState() {\n    this.setStateEnable(true);\n  }\n\n  /**\n   * 取消状态\n   */\n  public reset() {\n    this.setStateEnable(false);\n  }\n\n  /**\n   * 切换状态\n   */\n  public toggle() {\n    const triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo && triggerInfo.item) {\n      const { list, item } = triggerInfo;\n      const enable = this.hasState(list, item);\n      this.setItemState(list, item, !enable);\n    }\n  }\n\n  /**\n   * 取消状态\n   */\n  public clear() {\n    const triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo) {\n      triggerInfo.list.clearItemsState(this.stateName);\n    } else {\n      this.clearAllComponentsState();\n    }\n  }\n}\n\nexport default ListState;\n","import ListState from './list-state';\n\n/**\n * 列表项（图例项、坐标轴文本）激活的 Action\n * @class\n * @ignore\n */\nclass ListActive extends ListState {\n  protected stateName: string = 'active';\n  /**\n   * 激活选项\n   */\n  public active() {\n    this.setState();\n  }\n}\n\nexport default ListActive;\n","import { IList } from '@antv/component/lib/interfaces';\nimport { each } from '@antv/util';\n\nconst STATUS_UNACTIVE = 'inactive';\nconst STATUS_ACTIVE = 'active';\n\n/**\n * 清理图例的 Highlight 效果\n * @param list 列表组件，图例或者坐标轴\n * @ignore\n */\nexport function clearList(list: IList) {\n  const items = list.getItems();\n  each(items, (item) => {\n    if (list.hasState(item, STATUS_ACTIVE)) {\n      list.setItemState(item, STATUS_ACTIVE, false);\n    }\n    if (list.hasState(item, STATUS_UNACTIVE)) {\n      list.setItemState(item, STATUS_UNACTIVE, false);\n    }\n  });\n}\n","import { each } from '@antv/util';\nimport { IList, ListItem } from '../../../dependents';\nimport { clearList } from './list-highlight-util';\nimport ListState from './list-state';\nconst STATUS_UNACTIVE = 'inactive';\nconst STATUS_ACTIVE = 'active';\ntype MatchCallback = (item: ListItem) => boolean;\n\n/**\n * highlight Action 的效果是 active 和 inactive 两个状态的组合\n * @class\n * @ignore\n */\nclass ListHighlight extends ListState {\n  protected stateName: string = STATUS_ACTIVE;\n  protected ignoreItemStates = ['unchecked']; // 当存在 unchecked 状态时不触发\n  // 如果 item.name 匹配，则设置 highlight 以及取消\n  protected setItemsState(list: IList, name: string, enable: boolean) {\n    this.setHighlightBy(list, (item) => item.name === name, enable);\n  }\n\n  // 单个 item 设置状态\n  protected setItemState(list: IList, item: ListItem, enable: boolean) {\n    const items = list.getItems();\n    this.setHighlightBy(list, (el) => el === item, enable);\n  }\n\n  // 根据条件设置 highlight\n  private setHighlightBy(list: IList, callback: MatchCallback, enable: boolean) {\n    const items = list.getItems();\n    if (enable) {\n      // 设置 highlight 时，保留之前已经 Highlight 的项\n      each(items, (item) => {\n        if (callback(item)) {\n          if (list.hasState(item, STATUS_UNACTIVE)) {\n            list.setItemState(item, STATUS_UNACTIVE, false);\n          }\n          list.setItemState(item, STATUS_ACTIVE, true);\n        } else if (!list.hasState(item, STATUS_ACTIVE)) {\n          list.setItemState(item, STATUS_UNACTIVE, true);\n        }\n      });\n    } else {\n      const activeItems = list.getItemsByState(STATUS_ACTIVE);\n      let allCancel = true;\n      // 检测 activeItems 是否要全部取消\n      each(activeItems, (item) => {\n        if (!callback(item)) {\n          allCancel = false;\n          return false;\n        }\n      });\n      if (allCancel) {\n        this.clear();\n      } else {\n        // 如果不是都要取消 highlight, 则设置匹配的 element 的状态为 unactive\n        // 其他 element 状态不变\n        each(items, (item) => {\n          if (callback(item)) {\n            if (list.hasState(item, STATUS_ACTIVE)) {\n              list.setItemState(item, STATUS_ACTIVE, false);\n            }\n            list.setItemState(item, STATUS_UNACTIVE, true);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * highlight 图例项（坐标轴文本）\n   */\n  public highlight() {\n    this.setState();\n  }\n\n  // 需要全部清理 active 和 unactive\n  public clear() {\n    const triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo) {\n      clearList(triggerInfo.list);\n    } else {\n      // 如果不是 component 的事件触发，则所有满足触发条件的组件都清除该状态\n      const components = this.getAllowComponents();\n      each(components, (component) => {\n        component.clearItemsState(STATUS_ACTIVE);\n        component.clearItemsState(STATUS_UNACTIVE);\n      });\n    }\n  }\n}\n\nexport default ListHighlight;\n","import ListState from './list-state';\n\n/**\n * 图例项和坐标轴文本选中的 Action\n * @ignore\n */\nclass ListSelected extends ListState {\n  protected stateName: string = 'selected';\n  public selected() {\n    this.setState();\n  }\n}\n\nexport default ListSelected;\n","import ListState from './list-state';\n\n/**\n * 图例项取消勾选的 Action\n * @ignore\n */\nclass ListUnchecked extends ListState {\n  protected stateName: string = 'unchecked';\n  /**\n   * 取消勾选\n   */\n  public unchecked() {\n    this.setState();\n  }\n}\n\nexport default ListUnchecked;\n","import { each } from '@antv/util';\nimport Action from '../base';\nimport { LooseObject } from '../../../interface';\n\n/**\n * @ignore\n * 辅助框 Action 的基类\n */\nabstract class MaskBase extends Action {\n  // mask 图形\n  protected maskShape = null;\n  // 组成 mask 的各个点\n  protected points = [];\n  // 开始 mask 的标记\n  protected starting = false;\n  // 开始移动的标记\n  protected moving = false;\n  protected preMovePoint = null;\n\n  protected shapeType = 'path';\n  // 获取当前的位置\n  protected getCurrentPoint() {\n    const event = this.context.event;\n    return {\n      x: event.x,\n      y: event.y,\n    };\n  }\n  // 触发 mask 的事件\n  protected emitEvent(type) {\n    const eventName = `mask:${type}`;\n    const view = this.context.view;\n    const event = this.context.event;\n    view.emit(eventName, {\n      target: this.maskShape,\n      shape: this.maskShape,\n      points: this.points,\n      x: event.x,\n      y: event.y,\n    });\n  }\n\n  // 创建 mask\n  private createMask() {\n    const view = this.context.view;\n    const maskAttrs = this.getMaskAttrs();\n    const maskShape = view.foregroundGroup.addShape({\n      type: this.shapeType,\n      name: 'mask',\n      draggable: true,\n      attrs: {\n        fill: '#C5D4EB',\n        opacity: 0.3,\n        ...maskAttrs,\n      },\n    });\n    return maskShape;\n  }\n\n  protected abstract getMaskAttrs(): LooseObject;\n\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    return [];\n  }\n\n  /**\n   * 显示\n   */\n  public show() {\n    if (this.maskShape) {\n      this.maskShape.show();\n      this.emitEvent('show');\n    }\n  }\n\n  /**\n   * 开始\n   */\n  public start() {\n    this.starting = true;\n    // 开始时，保证移动结束\n    this.moving = false;\n    this.points = [this.getCurrentPoint()];\n    if (!this.maskShape) {\n      this.maskShape = this.createMask();\n      // 开始时设置 capture: false，可以避免创建、resize 时触发事件\n      this.maskShape.set('capture', false);\n    }\n    this.updateMask();\n    this.emitEvent('start');\n  }\n\n  /**\n   * 开始移动\n   */\n  public moveStart() {\n    this.moving = true;\n    this.preMovePoint = this.getCurrentPoint();\n  }\n  /**\n   * 移动 mask\n   */\n  public move() {\n    if (!this.moving || !this.maskShape) {\n      return;\n    }\n    const currentPoint = this.getCurrentPoint();\n    const preMovePoint = this.preMovePoint;\n    const dx = currentPoint.x - preMovePoint.x;\n    const dy = currentPoint.y - preMovePoint.y;\n    const points = this.points;\n    each(points, (point) => {\n      point.x += dx;\n      point.y += dy;\n    });\n    this.updateMask();\n    this.emitEvent('change');\n    this.preMovePoint = currentPoint;\n  }\n\n  protected updateMask() {\n    const attrs = this.getMaskAttrs();\n    this.maskShape.attr(attrs);\n  }\n\n  /**\n   * 结束移动\n   */\n  public moveEnd() {\n    this.moving = false;\n    this.preMovePoint = null;\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.starting = false;\n    this.emitEvent('end');\n    if (this.maskShape) {\n      this.maskShape.set('capture', true);\n    }\n  }\n\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.maskShape) {\n      this.maskShape.hide();\n      this.emitEvent('hide');\n    }\n  }\n\n  /**\n   * 大小变化\n   */\n  public resize() {\n    // 只有进行中，才会允许大小变化\n    if (this.starting && this.maskShape) {\n      this.points.push(this.getCurrentPoint());\n      this.updateMask();\n      this.emitEvent('change');\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    this.points = [];\n    if (this.maskShape) {\n      this.maskShape.remove();\n    }\n    this.maskShape = null;\n    this.preMovePoint = null;\n    super.destroy();\n  }\n}\n\nexport default MaskBase;\n","import { last } from '@antv/util';\nimport { distance } from '../util';\nimport MaskBase from './base';\n\n/**\n * @ignore\n * 圆形辅助框 Action\n */\nclass CircleMask extends MaskBase {\n  protected shapeType = 'circle';\n  protected getMaskAttrs() {\n    const points = this.points;\n    const currentPoint = last(this.points);\n    let r = 0;\n    let x = 0;\n    let y = 0;\n    if (points.length) {\n      const first = points[0];\n      r = distance(first, currentPoint) / 2;\n      x = (currentPoint.x + first.x) / 2;\n      y = (currentPoint.y + first.y) / 2;\n    }\n    return {\n      x,\n      y,\n      r,\n    };\n  }\n}\n\nexport default CircleMask;\n","import { head, last } from '@antv/util';\nimport { Region } from '../../../interface';\nimport MaskBase from './base';\n\n/**\n * @ignore\n * 矩形的辅助框 Action\n */\nclass RectMask extends MaskBase {\n  protected shapeType = 'rect';\n  protected getRegion(): Region {\n    const points = this.points;\n    return {\n      start: head(points),\n      end: last(points),\n    };\n  }\n  // 添加图形\n  protected getMaskAttrs() {\n    const { start, end } = this.getRegion();\n    const x = Math.min(start.x, end.x);\n    const y = Math.min(start.y, end.y);\n    const width = Math.abs(end.x - start.x);\n    const height = Math.abs(end.y - start.y);\n    return {\n      x,\n      y,\n      width,\n      height,\n    };\n  }\n}\n\nexport default RectMask;\n","import { clamp, head, last } from '@antv/util';\nimport { Region } from '../../../interface';\nimport RectMask from './rect';\n\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\n\n/**\n * @ignore\n */\nclass DimRect extends RectMask {\n  protected dim = 'x';\n  protected inPlot = true;\n  protected getRegion(): Region {\n    let start = null;\n    let end = null;\n    const points = this.points;\n    const dim = this.dim;\n    const coord = this.context.view.getCoordinate();\n    const normalStart = coord.invert(head(points));\n    const normalEnd = coord.invert(last(points));\n    if (this.inPlot) {\n      // 约束到 0 - 1 范围内\n      clampPoint(normalStart);\n      clampPoint(normalEnd);\n    }\n    if (dim === 'x') {\n      // x 轴方向扩展, y 轴方向占满全部\n      start = coord.convert({\n        x: normalStart.x,\n        y: 0,\n      });\n      end = coord.convert({\n        x: normalEnd.x,\n        y: 1,\n      });\n    } else {\n      // y 轴方向扩展, x 轴方向占满全部\n      start = coord.convert({\n        x: 0,\n        y: normalStart.y,\n      });\n      end = coord.convert({\n        x: 1,\n        y: normalEnd.y,\n      });\n    }\n    return {\n      start,\n      end,\n    };\n  }\n}\n\nexport default DimRect;\n","import { each } from '@antv/util';\nimport MaskBase from './base';\n\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\nclass PathMask extends MaskBase {\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    const points = this.points;\n    const path = [];\n    if (points.length) {\n      each(points, (point, index) => {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n    return path;\n  }\n\n  protected getMaskAttrs() {\n    return {\n      path: this.getMaskPath(),\n    };\n  }\n\n  /**\n   * 添加一个点\n   */\n  public addPoint() {\n    this.resize();\n  }\n}\n\nexport default PathMask;\n","import { getSpline } from '../util';\nimport PathMask from './path';\n\n/**\n * Smooth path mask\n * @ignore\n */\nclass SmoothPathMask extends PathMask {\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    const points = this.points;\n    return getSpline(points, true);\n  }\n}\n\nexport default SmoothPathMask;\n","/**\n * @fileoverview 设置画布的箭头，参看：https://www.w3school.com.cn/jsref/prop_style_cursor.asp\n * @author dxq613\n */\nimport Action from './base';\n\n/**\n * 鼠标形状的 Action\n * @ignore\n */\nclass CursorAction extends Action {\n  private setCursor(cursor) {\n    const view = this.context.view;\n    view.getCanvas().setCursor(cursor);\n  }\n\n  /**\n   * 默认光标（通常是一个箭头）\n   */\n  public default() {\n    this.setCursor('default');\n  }\n\n  /** 光标呈现为指示链接的指针（一只手） */\n  public pointer() {\n    this.setCursor('pointer');\n  }\n  /** 此光标指示某对象可被移动。 */\n  public move() {\n    this.setCursor('move');\n  }\n  /** 光标呈现为十字线。 */\n  public crosshair() {\n    this.setCursor('crosshair');\n  }\n  /** 此光标指示程序正忙（通常是一只表或沙漏）。 */\n  public wait() {\n    this.setCursor('wait');\n  }\n\n  /** 此光标指示可用的帮助（通常是一个问号或一个气球）。 */\n  public help() {\n    this.setCursor('help');\n  }\n\n  /** 此光标指示文本。 */\n  public text() {\n    this.setCursor('text');\n  }\n\n  /**\n   * 此光标指示矩形框的边缘可被向右（东）移动。\n   */\n  public eResize() {\n    this.setCursor('e-resize');\n  }\n\n  /**\n   * 此光标指示矩形框的边缘可被向左（西）移动。\n   */\n  public wResize() {\n    this.setCursor('w-resize');\n  }\n\n  /**\n   * 此光标指示矩形框的边缘可被向上（北）移动。\n   */\n  public nResize() {\n    this.setCursor('n-resize');\n  }\n\n  /**\n   * 此光标指示矩形框的边缘可被向下（南）移动。\n   */\n  public sResize() {\n    this.setCursor('s-resize');\n  }\n  /**\n   * 光标指示可移动的方向 右上方（东北）\n   */\n  public neResize() {\n    this.setCursor('ne-resize');\n  }\n  /**\n   * 光标指示可移动的方向 左上方（西北）\n   */\n  public nwResize() {\n    this.setCursor('nw-resize');\n  }\n  /**\n   * 光标指示可移动的方向右下方（东南）\n   */\n  public seResize() {\n    this.setCursor('se-resize');\n  }\n  /**\n   * 光标指示可移动的方向左下方（西南）\n   */\n  public swResize() {\n    this.setCursor('sw-resize');\n  }\n\n  /**\n   * 光标指示可以在上下方向移动\n   */\n  public nsResize() {\n    this.setCursor('ns-resize');\n  }\n  /**\n   * 光标指示可以在左右方向移动\n   */\n  public ewResize() {\n    this.setCursor('ew-resize');\n  }\n}\n\nexport default CursorAction;\n","import { each } from '@antv/util';\nimport { View } from 'src/chart';\nimport Action from '../base';\nimport { getDelegationObject, getScaleByField, isList, isSlider } from '../util';\n\n/**\n * 数据过滤。\n * @ignore\n */\nclass DataFilter extends Action {\n  private filterView(view: View, field, filter) {\n    // 只有存在这个 scale 时才生效\n    if (view.getScaleByField(field)) {\n      view.filter(field, filter);\n    }\n    if (view.views && view.views.length) {\n      each(view.views, (subView) => {\n        this.filterView(subView, field, filter);\n      });\n    }\n  }\n  /**\n   * 过滤数据\n   */\n  public filter() {\n    const delegateObject = getDelegationObject(this.context);\n    if (delegateObject) {\n      const view = this.context.view;\n      const { component } = delegateObject;\n      const field = component.get('field');\n      // 列表类的组件能够触发\n      if (isList(delegateObject)) {\n        if (field) {\n          const unCheckedItems = component.getItemsByState('unchecked');\n          const scale = getScaleByField(view, field);\n          const names: string[] = unCheckedItems.map((item) => item.name);\n          if (names.length) {\n            this.filterView(view, field, (value) => {\n              const text = scale.getText(value);\n              return !names.includes(text);\n            });\n          } else {\n            this.filterView(view, field, null);\n          }\n          view.render(true);\n        }\n      } else if (isSlider(delegateObject)) {\n        const range = component.getValue();\n        const [min, max] = range;\n        this.filterView(view, field, (value) => {\n          return value >= min && value <= max;\n        });\n        view.render(true);\n      }\n    }\n  }\n}\n\nexport default DataFilter;\n","import { Point, Scale } from '../../../dependents';\nimport { FilterCondition } from '../../../interface';\n\nimport { View } from '../../../chart';\nimport Action from '../base';\nimport { distance, isMask } from '../util';\n\n// 获取对应的 scale\nfunction getFilter(scale: Scale, dim: string, point1: Point, point2: Point): FilterCondition {\n  let min = Math.min(point1[dim], point2[dim]);\n  let max = Math.max(point1[dim], point2[dim]);\n  const [rangeMin, rangeMax] = scale.range;\n  // 约束值在 scale 的 range 之间\n  if (min < rangeMin) {\n    min = rangeMin;\n  }\n  if (max > rangeMax) {\n    max = rangeMax;\n  }\n  // 范围大于整个 view 的范围，则返回 null\n  if (min === rangeMax && max === rangeMax) {\n    return null;\n  }\n  const minValue = scale.invert(min);\n  const maxValue = scale.invert(max);\n  if (scale.isCategory) {\n    const minIndex = scale.values.indexOf(minValue);\n    const maxIndex = scale.values.indexOf(maxValue);\n    const arr = scale.values.slice(minIndex, maxIndex + 1);\n    return (value) => {\n      return arr.includes(value);\n    };\n  } else {\n    return (value) => {\n      return value >= minValue && value <= maxValue;\n    };\n  }\n}\n\n/**\n * 范围过滤的 Action\n * @ignore\n */\nclass RangeFilter extends Action {\n  /** 允许外部传入 dims */\n  protected cfgFields: ['dims'];\n  /**\n   * 范围过滤生效的字段/维度，可以是 x, y\n   */\n  protected dims: string[] = ['x', 'y'];\n  /** 起始点 */\n  protected startPoint: Point = null;\n\n  private isStarted: boolean = false;\n\n  // x,y 是否生效\n  private hasDim(dim: string) {\n    return this.dims.includes(dim);\n  }\n\n  /**\n   * 开始范围过滤，记录范围过滤的起点\n   */\n  public start() {\n    const context = this.context;\n    this.isStarted = true;\n    this.startPoint = context.getCurrentPoint();\n  }\n\n  /**\n   * 过滤，以开始的点和当前点对数据进行过滤\n   */\n  public filter() {\n    let startPoint;\n    let currentPoint;\n    if (isMask(this.context)) {\n      const maskShape = this.context.event.target;\n      const bbox = maskShape.getCanvasBBox();\n      startPoint = { x: bbox.x, y: bbox.y };\n      currentPoint = { x: bbox.maxX, y: bbox.maxY };\n    } else {\n      if (!this.isStarted) {\n        // 如果没有开始，则不执行过滤\n        return;\n      }\n      startPoint = this.startPoint;\n      currentPoint = this.context.getCurrentPoint();\n    }\n    if (Math.abs(startPoint.x - currentPoint.x) < 5 || Math.abs(startPoint.x - currentPoint.y) < 5) {\n      // 距离过小也不生效\n      return;\n    }\n    const view = this.context.view;\n    const coord = view.getCoordinate();\n    const normalCurrent = coord.invert(currentPoint);\n    const normalStart = coord.invert(startPoint);\n    // 设置 x 方向的 filter\n    if (this.hasDim('x')) {\n      const xScale = view.getXScale();\n      const filter = getFilter(xScale, 'x', normalCurrent, normalStart);\n      this.filterView(view, xScale.field, filter);\n    }\n    // 设置 y 方向的 filter\n    if (this.hasDim('y')) {\n      const yScale = view.getYScales()[0];\n      const filter = getFilter(yScale, 'y', normalCurrent, normalStart);\n      this.filterView(view, yScale.field, filter);\n    }\n    this.reRender(view);\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.isStarted = false;\n  }\n\n  /**\n   * 取消同当前 Action 相关的过滤，指定的 x,y\n   */\n  public reset() {\n    const view = this.context.view;\n    this.isStarted = false;\n    if (this.hasDim('x')) {\n      const xScale = view.getXScale();\n      this.filterView(view, xScale.field, null); // 取消过滤\n    }\n    if (this.hasDim('y')) {\n      // y 轴过滤仅取第一个 yScale\n      const yScale = view.getYScales()[0];\n      this.filterView(view, yScale.field, null); // 取消过滤\n    }\n    this.reRender(view);\n  }\n\n  /**\n   * 对 view 进行过滤\n   */\n  protected filterView(view: View, field: string, filter: FilterCondition) {\n    view.filter(field, filter);\n  }\n\n  /**\n   * 重新渲染\n   * @param view\n   */\n  protected reRender(view: View) {\n    view.render(true);\n  }\n}\n\nexport default RangeFilter;\n","import { each } from '@antv/util';\nimport { View } from '../../../chart';\nimport { FilterCondition } from '../../../interface';\nimport RangeFilter from './range-filter';\n\nimport { getSilbings } from '../util';\n\n/**\n * 数据范围过滤，但不在当前的 view 上生效，而在当前的 view 同一层级的其他 views 上生效，用于实现联动过滤。\n * @ignore\n */\nclass SiblingFilter extends RangeFilter {\n  /**\n   * 对 view 进行过滤\n   * @param view\n   * @param field\n   * @param filter\n   */\n  protected filterView(view: View, field: string, filter: FilterCondition) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.filter(field, filter);\n    });\n  }\n\n  /**\n   * 重新渲染\n   * @param view\n   */\n  protected reRender(view: View) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.render(true);\n    });\n  }\n}\n\nexport default SiblingFilter;\n","import { each } from '@antv/util';\nimport Action from '../base';\nimport {\n  getDelegationObject,\n  getElements,\n  getElementValue,\n  getScaleByField,\n  isList,\n  isSlider,\n  isMask,\n  getMaskedElements,\n} from '../util';\n/**\n * 元素过滤的 Action，控制元素的显示隐藏\n * @ignore\n */\nclass ElementFilter extends Action {\n  /**\n   * 过滤\n   */\n  public filter() {\n    const delegateObject = getDelegationObject(this.context);\n    const view = this.context.view;\n    const elements = getElements(view);\n    if (isMask(this.context)) {\n      const maskElements = getMaskedElements(this.context, 10);\n      if (maskElements) {\n        each(elements, (el) => {\n          if (maskElements.includes(el)) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    } else if (delegateObject) {\n      const { component } = delegateObject;\n      const field = component.get('field');\n      // 列表类的组件能够触发\n      if (isList(delegateObject)) {\n        if (field) {\n          const unCheckedItems = component.getItemsByState('unchecked');\n          const scale = getScaleByField(view, field);\n          const names = unCheckedItems.map((item) => item.name);\n          // 直接控制显示、隐藏\n          each(elements, (el) => {\n            const value = getElementValue(el, field);\n            const text = scale.getText(value);\n            if (names.indexOf(text) >= 0) {\n              el.hide();\n            } else {\n              el.show();\n            }\n          });\n        }\n      } else if (isSlider(delegateObject)) {\n        const range = component.getValue();\n        const [min, max] = range;\n        each(elements, (el) => {\n          const value = getElementValue(el, field);\n          if (value >= min && value <= max) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    }\n  }\n  /**\n   * 清除过滤\n   */\n  public clear() {\n    const elements = getElements(this.context.view);\n    each(elements, (el) => {\n      el.show();\n    });\n  }\n\n  /**\n   * 恢复发生的过滤，保持同 data-filter 命名的一致\n   */\n  public reset() {\n    this.clear();\n  }\n}\n\nexport default ElementFilter;\n","import { each } from '@antv/util';\nimport Action from '../base';\nimport { getElements, getMaskedElements, getSiblingMaskElements, getSilbings, isInRecords, isMask } from '../util';\n\n/**\n * Sibling filter\n * @ignore\n */\nclass SiblingFilter extends Action {\n  protected byRecord = false;\n  /**\n   * 过滤隐藏图形\n   */\n  public filter() {\n    // 仅考虑 mask 导致的过滤\n    if (isMask(this.context)) {\n      if (this.byRecord) {\n        this.filterByRecord();\n      } else {\n        this.filterByBBox();\n      }\n    }\n  }\n  // 根据框选的记录来做过滤\n  private filterByRecord() {\n    const view = this.context.view;\n    const maskElements = getMaskedElements(this.context, 10);\n    if (!maskElements) {\n      return;\n    }\n    const xFiled = view.getXScale().field;\n    const yField = view.getYScales()[0].field;\n    const records = maskElements.map((el) => {\n      return el.getModel().data;\n    });\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const elements = getElements(sibling);\n      each(elements, (el) => {\n        const record = el.getModel().data;\n        // records.includes(record) 不生效，应该是数据的引用被改了\n        if (isInRecords(records, record, xFiled, yField)) {\n          el.show();\n        } else {\n          el.hide();\n        }\n      });\n    });\n  }\n\n  // 根据被框选的包围盒做过滤\n  private filterByBBox() {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const maskElements = getSiblingMaskElements(this.context, sibling, 10);\n      const elements = getElements(sibling);\n      if (maskElements) {\n        // mask 过小时返回为 null，不能是空数组，否则同未框选到混淆\n        each(elements, (el) => {\n          if (maskElements.includes(el)) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * 清理所有隐藏的图形\n   */\n  public reset() {\n    const siblings = getSilbings(this.context.view);\n    each(siblings, (sibling) => {\n      const elements = getElements(sibling);\n      each(elements, (el) => {\n        el.show();\n      });\n    });\n  }\n}\n\nexport default SiblingFilter;\n","import { LooseObject } from '@antv/component/lib/types';\nimport { IGroup } from '@antv/g-base';\nimport { ext } from '@antv/matrix-util';\nimport { deepMix } from '@antv/util';\nimport { parsePadding } from '../../../util/padding';\nimport Action from '../base';\nconst PADDING_RIGHT = 10;\nconst PADDING_TOP = 5;\n\n/**\n * Button action\n * @ignore\n */\nclass ButtonAction extends Action {\n  private buttonGroup: IGroup = null;\n  private buttonCfg = {\n    name: 'button',\n    text: 'button',\n    textStyle: {\n      x: 0,\n      y: 0,\n      fontSize: 12,\n      fill: '#333333',\n      cursor: 'pointer',\n    },\n    padding: [8, 10],\n    style: {\n      fill: '#f7f7f7',\n      stroke: '#cccccc',\n      cursor: 'pointer',\n    },\n    activeStyle: {\n      fill: '#e6e6e6',\n    },\n  };\n  // mix 默认的配置和用户配置\n  private getButtonCfg(): LooseObject {\n    return deepMix(this.buttonCfg, this.cfg);\n  }\n  // 绘制 Button 和 文本\n  private drawButton() {\n    const config = this.getButtonCfg();\n    const group = this.context.view.foregroundGroup.addGroup({\n      name: config.name,\n    });\n    // 添加文本\n    const textShape = group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: {\n        text: config.text,\n        ...config.textStyle,\n      },\n    });\n    const textBBox = textShape.getBBox();\n    const padding = parsePadding(config.padding);\n    // 添加背景按钮\n    const buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: {\n        x: textBBox.x - padding[3],\n        y: textBBox.y - padding[0],\n        width: textBBox.width + padding[1] + padding[3],\n        height: textBBox.height + padding[0] + padding[2],\n        ...config.style,\n      },\n    });\n    buttonShape.toBack(); // 在后面\n    // active 效果内置\n    group.on('mouseenter', () => {\n      buttonShape.attr(config.activeStyle);\n    });\n    group.on('mouseleave', () => {\n      buttonShape.attr(config.style);\n    });\n    this.buttonGroup = group;\n  }\n\n  // 重置位置\n  private resetPosition() {\n    const view = this.context.view;\n    const coord = view.getCoordinate();\n    const point = coord.convert({ x: 1, y: 1 }); // 后面直接改成左上角\n    const buttonGroup = this.buttonGroup;\n    const bbox = buttonGroup.getBBox();\n    const matrix = ext.transform(null, [\n      ['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP],\n    ]);\n    buttonGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 显示\n   */\n  public show() {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n    this.resetPosition();\n    this.buttonGroup.show();\n  }\n\n  /**\n   * 隐藏\n   */\n  public hide() {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  }\n\n  /**\n   * 销毁\n   */\n  public destroy() {\n    const buttonGroup = this.buttonGroup;\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n    super.destroy();\n  }\n}\n\nexport default ButtonAction;\n","import { Point } from '../../../dependents';\nimport Action from '../base';\nimport { distance } from '../util';\n\nconst DISTANCE = 4; // 移动的最小距离\n\n/**\n * @ignore\n * View 支持 Drag 的 Action\n */\nclass Drag extends Action {\n  // Action 开始，不等同于 拖拽开始，需要判定移动的范围\n  protected starting = false;\n  // 拖拽开始\n  protected dragStart = false;\n  // 开始的节点\n  protected startPoint: Point;\n\n  /**\n   * 开始\n   */\n  public start() {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint();\n  }\n\n  /**\n   * 拖拽\n   */\n  public drag() {\n    if (!this.startPoint) {\n      return;\n    }\n    const current = this.context.getCurrentPoint();\n    const view = this.context.view;\n    const event = this.context.event;\n    if (!this.dragStart) {\n      if (distance(current, this.startPoint) > DISTANCE) {\n        view.emit('dragstart', {\n          target: event.target,\n          x: event.x,\n          y: event.y,\n        });\n        this.dragStart = true;\n      }\n    } else {\n      view.emit('drag', {\n        target: event.target,\n        x: event.x,\n        y: event.y,\n      });\n    }\n  }\n\n  /**\n   * 结束\n   */\n  public end() {\n    if (this.dragStart) {\n      const view = this.context.view;\n      const event = this.context.event;\n      view.emit('dragend', {\n        target: event.target,\n        x: event.x,\n        y: event.y,\n      });\n    }\n    this.starting = false;\n    this.dragStart = false;\n  }\n}\n\nexport default Drag;\n","import { ext } from '@antv/matrix-util';\nimport { Action } from '..';\nimport { distance } from '../util';\n\nconst MIN_DISTANCE = 5;\n\n/**\n * @ignore\n * View 移动的 Action\n */\nclass Move extends Action {\n  private starting = false;\n  private isMoving = false;\n  // private cacheRange = null;\n  private startPoint = null;\n  private startMatrix = null;\n  /**\n   * 开始移动\n   */\n  public start() {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint();\n    // 缓存开始时的矩阵，防止反复拖拽\n    this.startMatrix = this.context.view.middleGroup.getMatrix();\n  }\n\n  /**\n   * 移动\n   */\n  public move() {\n    if (!this.starting) {\n      return;\n    }\n    const startPoint = this.startPoint;\n    const currentPoint = this.context.getCurrentPoint();\n    const d = distance(startPoint, currentPoint);\n    if (d > MIN_DISTANCE && !this.isMoving) {\n      this.isMoving = true;\n    }\n    if (this.isMoving) {\n      const view = this.context.view;\n      const matrix = ext.transform(this.startMatrix, [\n        ['t', currentPoint.x - startPoint.x, currentPoint.y - startPoint.y],\n      ]);\n      view.backgroundGroup.setMatrix(matrix);\n      view.foregroundGroup.setMatrix(matrix);\n      view.middleGroup.setMatrix(matrix);\n    }\n  }\n\n  /**\n   * 结束移动\n   */\n  public end() {\n    if (this.isMoving) {\n      this.isMoving = false;\n    }\n    this.startMatrix = null;\n    this.starting = false;\n    this.startPoint = null;\n  }\n\n  /**\n   * 回滚\n   */\n  public reset() {\n    this.starting = false;\n    this.startPoint = null;\n    this.isMoving = false;\n\n    const view = this.context.view;\n    view.backgroundGroup.resetMatrix();\n    view.foregroundGroup.resetMatrix();\n    view.middleGroup.resetMatrix();\n    this.isMoving = false;\n  }\n}\n\nexport default Move;\n","import { Action } from '..';\n\nconst DIM_X = 'x';\nconst DIM_Y = 'y';\n\n/**\n * Scale translate\n * @ignore\n */\nclass ScaleTranslate extends Action {\n  protected dims = [DIM_X, DIM_Y];\n  protected cfgFields = ['dims'];\n  protected cacheScaleDefs = {};\n\n  // 是否支持对应字段的平移\n  protected hasDim(dim) {\n    return this.dims.includes(dim);\n  }\n\n  protected getScale(dim) {\n    const view = this.context.view;\n    if (dim === 'x') {\n      return view.getXScale();\n    } else {\n      return view.getYScales()[0];\n    }\n  }\n\n  private resetDim(dim) {\n    const view = this.context.view;\n    if (this.hasDim(dim) && this.cacheScaleDefs[dim]) {\n      const scale = this.getScale(dim);\n      view.scale(scale.field, this.cacheScaleDefs[dim]);\n      this.cacheScaleDefs[dim] = null;\n    }\n  }\n\n  /**\n   * 回滚\n   */\n  public reset() {\n    this.resetDim(DIM_X);\n    this.resetDim(DIM_Y);\n    const view = this.context.view;\n    view.render(true);\n  }\n}\n\nexport default ScaleTranslate;\n","import { each } from '@antv/util';\nimport { Point } from '../../../dependents';\nimport TransformAction from './scale-transform';\n\n/**\n * 拖拽 Scale 的 Action\n * @ignore\n */\nclass ScaleTranslate extends TransformAction {\n  protected startPoint: Point = null;\n  protected starting = false;\n  private startCache = {};\n  /**\n   * 开始\n   */\n  public start() {\n    this.startPoint = this.context.getCurrentPoint();\n    this.starting = true;\n    const dims = this.dims;\n    each(dims, (dim) => {\n      const scale = this.getScale(dim);\n      const { min, max, values } = scale;\n      this.startCache[dim] = { min, max, values };\n    });\n  }\n\n  // 平移分类的度量\n  // private translateCategory(dim, scale, normalPoint) {\n  // }\n\n  /**\n   * 结束\n   */\n  public end() {\n    this.startPoint = null;\n    this.starting = false;\n    this.startCache = {};\n  }\n\n  /**\n   * 平移\n   */\n  public translate() {\n    if (!this.starting) {\n      return;\n    }\n    const startPoint = this.startPoint;\n    const coord = this.context.view.getCoordinate();\n    const currentPoint = this.context.getCurrentPoint();\n    const normalStart = coord.invert(startPoint);\n    const noramlCurrent = coord.invert(currentPoint);\n    const dx = noramlCurrent.x - normalStart.x;\n    const dy = noramlCurrent.y - normalStart.y;\n    const view = this.context.view;\n    const dims = this.dims;\n    each(dims, (dim) => {\n      this.translateDim(dim, { x: dx * -1, y: dy * -1 });\n    });\n    view.render(true);\n  }\n\n  // 平移度量\n  private translateDim(dim, normalPoint) {\n    if (this.hasDim(dim)) {\n      const scale = this.getScale(dim);\n      if (scale.isLinear) {\n        this.translateLinear(dim, scale, normalPoint);\n      }\n      //  else { // 暂时仅处理连续字段\n      // this.translateCategory(dim, scale, normalPoint);\n      // }\n    }\n  }\n  // linear 度量平移\n  private translateLinear(dim, scale, normalPoint) {\n    const view = this.context.view;\n    const { min, max } = this.startCache[dim];\n    const range = max - min;\n    const d = normalPoint[dim] * range;\n    // 只有第一次缓存，否则无法回滚\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min,\n        max,\n      };\n    }\n    view.scale(scale.field, {\n      // @ts-ignore\n      nice: false,\n      min: min + d,\n      max: max + d,\n    });\n  }\n\n  // 平移分类的度量\n  // private translateCategory(dim, scale, normalPoint) {\n  // }\n\n  /**\n   * 回滚\n   */\n  public reset() {\n    super.reset();\n    this.startPoint = null;\n    this.starting = false;\n  }\n}\n\nexport default ScaleTranslate;\n","import { each, throttle } from '@antv/util';\nimport TransformAction from './scale-transform';\n\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\nclass ScaleTranslate extends TransformAction {\n  private zoomRatio = 0.05;\n  /**\n   * 缩小\n   */\n  public zoomIn() {\n    this.zoom(this.zoomRatio);\n  }\n\n  private zoom(scale) {\n    const dims = this.dims;\n    each(dims, (dim) => {\n      this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  }\n\n  /**\n   * 放大\n   */\n  public zoomOut() {\n    this.zoom(-1 * this.zoomRatio);\n  }\n\n  // 缩放度量\n  private zoomDim(dim, dRatio) {\n    if (this.hasDim(dim)) {\n      const scale = this.getScale(dim);\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      }\n      //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n    }\n  }\n  // linear 度量平移\n  private zoomLinear(dim, scale, dRatio) {\n    const view = this.context.view;\n    // 只有第一次缓存，否则无法回滚\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max,\n      };\n    }\n    // 使用使用原始度量作为缩放标准\n    const scaleDef = this.cacheScaleDefs[dim];\n    const range = scaleDef.max - scaleDef.min;\n    const { min, max } = scale;\n    const d = dRatio * range;\n    const toMin = min - d;\n    const toMax = max + d;\n    const curRange = toMax - toMin;\n    const scaled = curRange / range;\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d,\n      });\n    }\n  }\n\n  // 平移分类的度量\n  // private translateCategory(dim, scale, normalPoint) {\n  // }\n}\n\nexport default ScaleTranslate;\n","import * as g2 from \"@antv/g2\"\n\n{\n    const f = (n: number) => Math.pow(0.9, n)\n\n    const chart = new g2.Chart({\n        container: document.getElementById(\"q1\"),\n        autoFit: false,\n        width: 600,\n        height: 300,\n    });\n\n    chart\n        .data(\n            [\n                ...new Array(21).fill(0).map((_, idx) => ({ n: idx, value: f(idx) }))\n            ]\n        )\n        .line()\n        .position('n*value')\n    chart.render()\n}\n\n{\n    // impulse function\n    const x = (n: number) => n == 0 ? 1 : 0\n\n    const h = (x: (n: number) => number) => {\n        // 利用 cache 減少計算量\n        const cache: number[] = []\n        const f = (n: number) => {\n            // 如果 n < 0 的話就沒有能量，回傳 0\n            if (n < 0) return 0\n            // 如果發現已經有 cache，就回傳 cache 的值\n            else if (cache[n] != undefined) return cache[n]\n            // 如果沒有 cache，就依照公式計算、記錄到 cache 並回傳\n            else return cache[n] =\n                // 計算 f(n - 1) 的值\n                1.8 * Math.cos(Math.PI / 16) * f(n - 1) -\n                // 計算 f(n - 2) 的值\n                0.81 * f(n - 2) +\n                x(n) +\n                (1 / 2) * x(n - 1)\n        }\n        return f\n    }\n\n    // 建立輸出函數\n    const f = h(x)\n\n    const chart = new g2.Chart({\n        container: document.getElementById(\"q2a\"),\n        autoFit: false,\n        width: 600,\n        height: 300,\n    });\n\n    chart\n        .data(\n            [\n                ...new Array(10).fill(0).map((_, idx) => ({ n: -(idx + 1), value: 0 })).reverse(),\n                ...new Array(100).fill(0).map((_, idx) => ({ n: idx, value: f(idx) }))\n            ]\n        )\n        .line()\n        .position('n*value')\n    chart.render()\n}\n\n{\n    // impulse function\n    const x = (n: number) => n == 0 ? 1 : 0\n\n    /**\n     * \n     * @param b b(i) = bi\n     * @param a a(j) = aj and a(0) = 1\n     * @param x \n     * \n     */\n    const filter = (\n        b: (n: number) => number,\n        a: (n: number) => number,\n        x: (n: number) => number) => {\n        // 檢查若 a(0) != 1 就報錯\n        if (a(0) != 1) {\n            console.error(\"a[0] must equal 1\")\n            return\n        }\n        // 利用 cache 減少計算量\n        const cache: number[] = []\n\n        /**\n         * \n         * @param n \n         * \n         * @return  b0x[n] + b1x[n-1] + ... + bnx[0]\n         *          - a1y[n-1] - a2y[n-2] - ... - any[0]\n         */\n        const f = (n: number) => {\n            // 如果 n < 0 的話就沒有能量，回傳 0\n            if (n < 0) return 0\n            // 如果發現已經有 cache，就回傳 cache 的值\n            else if (cache[n] != undefined) return cache[n]\n            else {\n                // 使用 matlab 的 filter 公式計算答案\n                let out = 0\n                for (let k = 0; k <= n; k++) {\n                    out += x(n - k) * b(k) -\n                        f(n - (k + 1)) * a(k + 1)\n                }\n                cache[n] = out\n                return out\n            }\n        }\n        return f\n    }\n\n    // 將 array 轉成 function\n    const arr2fn = (arr: number[]) => {\n        return (n: number) => {\n            if (arr[n] != undefined) return arr[n]\n            else return 0\n        }\n    }\n\n    // 建立輸出函數\n    let f = filter(\n        arr2fn([1, 1 / 2]),\n        arr2fn([1, -1.8 * Math.cos(Math.PI / 16), 0.81]),\n        x)\n\n    const chart = new g2.Chart({\n        container: document.getElementById(\"q2b\"),\n        autoFit: false,\n        width: 600,\n        height: 300,\n    });\n\n    chart\n        .data(\n            [\n                ...new Array(10).fill(0).map((_, idx) => ({ n: -(idx + 1), value: 0 })).reverse(),\n                ...new Array(101).fill(0).map((_, idx) => ({ n: idx, value: f(idx) }))\n            ]\n        )\n        .line()\n        .position('n*value')\n    chart.render()\n}"]}