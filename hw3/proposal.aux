\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{DBLP:journals/corr/abs-2002-05709}
\citation{DBLP:journals/corr/abs-2006-07733}
\citation{DBLP:journals/corr/abs-2011-10566}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  語音增強使用的 Auto Encoder。期望模型能將受雜訊污染的語音還原成乾淨語音。 }}{1}{figure.1}\protected@file@percent }
\newlabel{fig:long}{{1}{1}{語音增強使用的 Auto Encoder。期望模型能將受雜訊污染的語音還原成乾淨語音。}{figure.1}{}}
\newlabel{fig:onecol}{{1}{1}{語音增強使用的 Auto Encoder。期望模型能將受雜訊污染的語音還原成乾淨語音。}{figure.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1}\hskip -1em.\nobreakspace  {}Introduction}{1}{section.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  BYOL 的算法架構。Encoder-PredictNet 會將 Encoder' 取出特徵做為目標， 計算 L2 Loss 後更新 Encoder-PredictNet 的參數， Encoder' 則會把自身目前參數與更新後 Encoder 做加權平均當新參數。 }}{1}{figure.2}\protected@file@percent }
\newlabel{fig:long}{{2}{1}{BYOL 的算法架構。Encoder-PredictNet 會將 Encoder' 取出特徵做為目標， 計算 L2 Loss 後更新 Encoder-PredictNet 的參數， Encoder' 則會把自身目前參數與更新後 Encoder 做加權平均當新參數。}{figure.2}{}}
\newlabel{fig:onecol}{{2}{1}{BYOL 的算法架構。Encoder-PredictNet 會將 Encoder' 取出特徵做為目標， 計算 L2 Loss 後更新 Encoder-PredictNet 的參數， Encoder' 則會把自身目前參數與更新後 Encoder 做加權平均當新參數。}{figure.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  SimSiam 的算法架構。將混合不同噪音的語音輸入 Encoder 得到 $Z_1$ 與 $Z_2$， 在將 $Z_1$ 與 $Z_2$ 輸入 PredictNet 後獲得 $P_1$ 與 $P_2$， $P_1$ 與 $P_2$ 會各自將 $Z_2$ 與 $Z_1$ 做為目標並計算差距， 以此更新 Encoder-PredictNet 的參數。 }}{1}{figure.3}\protected@file@percent }
\newlabel{fig:long}{{3}{1}{SimSiam 的算法架構。將混合不同噪音的語音輸入 Encoder 得到 $Z_1$ 與 $Z_2$， 在將 $Z_1$ 與 $Z_2$ 輸入 PredictNet 後獲得 $P_1$ 與 $P_2$， $P_1$ 與 $P_2$ 會各自將 $Z_2$ 與 $Z_1$ 做為目標並計算差距， 以此更新 Encoder-PredictNet 的參數。}{figure.3}{}}
\newlabel{fig:onecol}{{3}{1}{SimSiam 的算法架構。將混合不同噪音的語音輸入 Encoder 得到 $Z_1$ 與 $Z_2$， 在將 $Z_1$ 與 $Z_2$ 輸入 PredictNet 後獲得 $P_1$ 與 $P_2$， $P_1$ 與 $P_2$ 會各自將 $Z_2$ 與 $Z_1$ 做為目標並計算差距， 以此更新 Encoder-PredictNet 的參數。}{figure.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}\hskip -1em.\nobreakspace  {}System framework}{1}{section.2}\protected@file@percent }
\citation{Nonspeech}
\citation{timit}
\citation{PESQ}
\citation{STOI}
\citation{SISDR}
\bibstyle{unsrt}
\bibdata{egbib}
\bibcite{DBLP:journals/corr/abs-2002-05709}{1}
\bibcite{DBLP:journals/corr/abs-2006-07733}{2}
\bibcite{DBLP:journals/corr/abs-2011-10566}{3}
\bibcite{Nonspeech}{4}
\bibcite{timit}{5}
\bibcite{PESQ}{6}
\bibcite{STOI}{7}
\bibcite{SISDR}{8}
\@writefile{toc}{\contentsline {section}{\numberline {3}\hskip -1em.\nobreakspace  {}Expected results}{2}{section.3}\protected@file@percent }
\gdef \@abspage@last{2}
